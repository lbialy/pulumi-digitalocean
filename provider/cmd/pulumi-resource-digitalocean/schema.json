{
    "name": "digitalocean",
    "description": "A Pulumi package for creating and managing DigitalOcean cloud resources.",
    "keywords": [
        "pulumi",
        "digitalocean"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`digitalocean` Terraform Provider](https://github.com/digitalocean/terraform-provider-digitalocean).",
    "repository": "https://github.com/pulumi/pulumi-digitalocean",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "digitalocean": "DigitalOcean"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0",
                "builtin-modules": "3.0.0",
                "read-package-tree": "^5.2.1",
                "resolve": "^1.7.1"
            },
            "devDependencies": {
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing DigitalOcean cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/digitalocean/terraform-provider-digitalocean)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-digitalocean` repo](https://github.com/pulumi/pulumi-digitalocean/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`digitalocean/terraform-provider-digitalocean` repo](https://github.com/digitalocean/terraform-provider-digitalocean/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/digitalocean/terraform-provider-digitalocean)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-digitalocean` repo](https://github.com/pulumi/pulumi-digitalocean/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`digitalocean/terraform-provider-digitalocean` repo](https://github.com/digitalocean/terraform-provider-digitalocean/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "apiEndpoint": {
                "type": "string",
                "description": "The URL to use for the DigitalOcean API.\n",
                "default": "https://api.digitalocean.com",
                "defaultInfo": {
                    "environment": [
                        "DIGITALOCEAN_API_URL"
                    ]
                }
            },
            "spacesAccessId": {
                "type": "string",
                "description": "The access key ID for Spaces API operations.\n"
            },
            "spacesEndpoint": {
                "type": "string",
                "description": "The URL to use for the DigitalOcean Spaces API.\n",
                "defaultInfo": {
                    "environment": [
                        "SPACES_ENDPOINT_URL"
                    ]
                }
            },
            "spacesSecretKey": {
                "type": "string",
                "description": "The secret access key for Spaces API operations.\n"
            },
            "token": {
                "type": "string",
                "description": "The token key for API operations.\n"
            }
        },
        "defaults": [
            "apiEndpoint"
        ]
    },
    "types": {
        "digitalocean:index/AppSpec:AppSpec": {
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecAlert:AppSpecAlert"
                    },
                    "description": "Describes an alert policy for the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecDatabase:AppSpecDatabase"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domainNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecDomainName:AppSpecDomainName"
                    },
                    "description": "Describes a domain where the application will be made available.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "This attribute has been replaced by `domain` which supports additional functionality.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecEnv:AppSpecEnv"
                    },
                    "description": "Describes an environment variable made available to an app competent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "functions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecFunction:AppSpecFunction"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecJob:AppSpecJob"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The slug for the DigitalOcean data center region hosting the app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecService:AppSpecService"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticSites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecStaticSite:AppSpecStaticSite"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecWorker:AppSpecWorker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "domainNames",
                        "domains",
                        "name"
                    ]
                }
            }
        },
        "digitalocean:index/AppSpecAlert:AppSpecAlert": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Determines whether or not the alert is disabled (default: `false`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rule": {
                    "type": "string",
                    "description": "The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rule"
            ]
        },
        "digitalocean:index/AppSpecDatabase:AppSpecDatabase": {
            "properties": {
                "clusterName": {
                    "type": "string",
                    "description": "The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if `cluster_name` is not set, a new cluster will be provisioned.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dbName": {
                    "type": "string",
                    "description": "The name of the MySQL or PostgreSQL database to configure.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dbUser": {
                    "type": "string",
                    "description": "The name of the MySQL or PostgreSQL user to configure.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "engine": {
                    "type": "string",
                    "description": "The database engine to use (`MYSQL`, `PG`, `REDIS`, or `MONGODB`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "production": {
                    "type": "boolean",
                    "description": "Whether this is a production or dev database.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "description": "The version of the database engine.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecDomainName:AppSpecDomainName": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the environment variable, `GENERAL` or `SECRET`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wildcard": {
                    "type": "boolean",
                    "description": "A boolean indicating whether the domain includes all sub-domains, in addition to the given domain.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zone": {
                    "type": "string",
                    "description": "If the domain uses DigitalOcean DNS and you would like App Platform to automatically manage it for you, set this to the name of the domain on your account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "type",
                        "wildcard"
                    ]
                }
            }
        },
        "digitalocean:index/AppSpecEnv:AppSpecEnv": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The name of the environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "description": "The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the environment variable, `GENERAL` or `SECRET`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "type"
                    ]
                }
            }
        },
        "digitalocean:index/AppSpecFunction:AppSpecFunction": {
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecFunctionAlert:AppSpecFunctionAlert"
                    },
                    "description": "Describes an alert policy for the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cors": {
                    "$ref": "#/types/digitalocean:index/AppSpecFunctionCors:AppSpecFunctionCors",
                    "description": "The [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) policies of the app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecFunctionEnv:AppSpecFunctionEnv"
                    },
                    "description": "Describes an environment variable made available to an app competent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "git": {
                    "$ref": "#/types/digitalocean:index/AppSpecFunctionGit:AppSpecFunctionGit",
                    "description": "A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "github": {
                    "$ref": "#/types/digitalocean:index/AppSpecFunctionGithub:AppSpecFunctionGithub",
                    "description": "A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean:index/AppSpecFunctionGitlab:AppSpecFunctionGitlab",
                    "description": "A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logDestinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecFunctionLogDestination:AppSpecFunctionLogDestination"
                    },
                    "description": "Describes a log forwarding destination.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecFunctionRoute:AppSpecFunctionRoute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "routes"
                    ]
                }
            }
        },
        "digitalocean:index/AppSpecFunctionAlert:AppSpecFunctionAlert": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Determines whether or not the alert is disabled (default: `false`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rule": {
                    "type": "string",
                    "description": "The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "description": "The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "rule",
                "value",
                "window"
            ]
        },
        "digitalocean:index/AppSpecFunctionCors:AppSpecFunctionCors": {
            "properties": {
                "allowCredentials": {
                    "type": "boolean",
                    "description": "Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is `include`. This configures the `Access-Control-Allow-Credentials` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowOrigins": {
                    "$ref": "#/types/digitalocean:index/AppSpecFunctionCorsAllowOrigins:AppSpecFunctionCorsAllowOrigins",
                    "description": "The `Access-Control-Allow-Origin` can be\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exposeHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAge": {
                    "type": "string",
                    "description": "An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecFunctionCorsAllowOrigins:AppSpecFunctionCorsAllowOrigins": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin only if the client's origin exactly matches the value you provide.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin if the beginning of the client's origin matches the value you provide.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin if the client’s origin matches the regex you provide, in [RE2 style syntax](https://github.com/google/re2/wiki/Syntax).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecFunctionEnv:AppSpecFunctionEnv": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The name of the environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "description": "The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the environment variable, `GENERAL` or `SECRET`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "type"
                    ]
                }
            }
        },
        "digitalocean:index/AppSpecFunctionGit:AppSpecFunctionGit": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoCloneUrl": {
                    "type": "string",
                    "description": "The clone URL of the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecFunctionGithub:AppSpecFunctionGithub": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecFunctionGitlab:AppSpecFunctionGitlab": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecFunctionLogDestination:AppSpecFunctionLogDestination": {
            "properties": {
                "datadog": {
                    "$ref": "#/types/digitalocean:index/AppSpecFunctionLogDestinationDatadog:AppSpecFunctionLogDestinationDatadog",
                    "description": "Datadog configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logtail": {
                    "$ref": "#/types/digitalocean:index/AppSpecFunctionLogDestinationLogtail:AppSpecFunctionLogDestinationLogtail",
                    "description": "Logtail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "papertrail": {
                    "$ref": "#/types/digitalocean:index/AppSpecFunctionLogDestinationPapertrail:AppSpecFunctionLogDestinationPapertrail",
                    "description": "Papertrail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "digitalocean:index/AppSpecFunctionLogDestinationDatadog:AppSpecFunctionLogDestinationDatadog": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Datadog API key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "digitalocean:index/AppSpecFunctionLogDestinationLogtail:AppSpecFunctionLogDestinationLogtail": {
            "properties": {
                "token": {
                    "type": "string",
                    "description": "Logtail token.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "token"
            ]
        },
        "digitalocean:index/AppSpecFunctionLogDestinationPapertrail:AppSpecFunctionLogDestinationPapertrail": {
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endpoint"
            ]
        },
        "digitalocean:index/AppSpecFunctionRoute:AppSpecFunctionRoute": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "Paths must start with `/` and must be unique within the app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preservePathPrefix": {
                    "type": "boolean",
                    "description": "An optional flag to preserve the path that is forwarded to the backend service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecJob:AppSpecJob": {
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecJobAlert:AppSpecJobAlert"
                    },
                    "description": "Describes an alert policy for the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "buildCommand": {
                    "type": "string",
                    "description": "An optional build command to run while building this component from source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerfilePath": {
                    "type": "string",
                    "description": "The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environmentSlug": {
                    "type": "string",
                    "description": "An environment slug describing the type of this app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecJobEnv:AppSpecJobEnv"
                    },
                    "description": "Describes an environment variable made available to an app competent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "git": {
                    "$ref": "#/types/digitalocean:index/AppSpecJobGit:AppSpecJobGit",
                    "description": "A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "github": {
                    "$ref": "#/types/digitalocean:index/AppSpecJobGithub:AppSpecJobGithub",
                    "description": "A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean:index/AppSpecJobGitlab:AppSpecJobGitlab",
                    "description": "A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "$ref": "#/types/digitalocean:index/AppSpecJobImage:AppSpecJobImage",
                    "description": "An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceCount": {
                    "type": "integer",
                    "description": "The amount of instances that this component should be scaled to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceSizeSlug": {
                    "type": "string",
                    "description": "The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be [found with the API](https://docs.digitalocean.com/reference/api/api-reference/#operation/list_instance_sizes) or using the [doctl CLI](https://docs.digitalocean.com/reference/doctl/) (`doctl apps tier instance-size list`). Default: `basic-xxs`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "description": "The type of job and when it will be run during the deployment process. It may be one of:\n- `UNSPECIFIED`: Default job type, will auto-complete to POST_DEPLOY kind.\n- `PRE_DEPLOY`: Indicates a job that runs before an app deployment.\n- `POST_DEPLOY`: Indicates a job that runs after an app deployment.\n- `FAILED_DEPLOY`: Indicates a job that runs after a component fails to deploy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logDestinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecJobLogDestination:AppSpecJobLogDestination"
                    },
                    "description": "Describes a log forwarding destination.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runCommand": {
                    "type": "string",
                    "description": "An optional run command to override the component's default.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "digitalocean:index/AppSpecJobAlert:AppSpecJobAlert": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Determines whether or not the alert is disabled (default: `false`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rule": {
                    "type": "string",
                    "description": "The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "description": "The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "rule",
                "value",
                "window"
            ]
        },
        "digitalocean:index/AppSpecJobEnv:AppSpecJobEnv": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The name of the environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "description": "The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the environment variable, `GENERAL` or `SECRET`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "type"
                    ]
                }
            }
        },
        "digitalocean:index/AppSpecJobGit:AppSpecJobGit": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoCloneUrl": {
                    "type": "string",
                    "description": "The clone URL of the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecJobGithub:AppSpecJobGithub": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecJobGitlab:AppSpecJobGitlab": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecJobImage:AppSpecJobImage": {
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryType": {
                    "type": "string",
                    "description": "The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repository": {
                    "type": "string",
                    "description": "The repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "description": "The repository tag. Defaults to `latest` if not provided.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "registryType",
                "repository"
            ]
        },
        "digitalocean:index/AppSpecJobLogDestination:AppSpecJobLogDestination": {
            "properties": {
                "datadog": {
                    "$ref": "#/types/digitalocean:index/AppSpecJobLogDestinationDatadog:AppSpecJobLogDestinationDatadog",
                    "description": "Datadog configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logtail": {
                    "$ref": "#/types/digitalocean:index/AppSpecJobLogDestinationLogtail:AppSpecJobLogDestinationLogtail",
                    "description": "Logtail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "papertrail": {
                    "$ref": "#/types/digitalocean:index/AppSpecJobLogDestinationPapertrail:AppSpecJobLogDestinationPapertrail",
                    "description": "Papertrail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "digitalocean:index/AppSpecJobLogDestinationDatadog:AppSpecJobLogDestinationDatadog": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Datadog API key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "digitalocean:index/AppSpecJobLogDestinationLogtail:AppSpecJobLogDestinationLogtail": {
            "properties": {
                "token": {
                    "type": "string",
                    "description": "Logtail token.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "token"
            ]
        },
        "digitalocean:index/AppSpecJobLogDestinationPapertrail:AppSpecJobLogDestinationPapertrail": {
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endpoint"
            ]
        },
        "digitalocean:index/AppSpecService:AppSpecService": {
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecServiceAlert:AppSpecServiceAlert"
                    },
                    "description": "Describes an alert policy for the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "buildCommand": {
                    "type": "string",
                    "description": "An optional build command to run while building this component from source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cors": {
                    "$ref": "#/types/digitalocean:index/AppSpecServiceCors:AppSpecServiceCors",
                    "description": "The [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) policies of the app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerfilePath": {
                    "type": "string",
                    "description": "The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environmentSlug": {
                    "type": "string",
                    "description": "An environment slug describing the type of this app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecServiceEnv:AppSpecServiceEnv"
                    },
                    "description": "Describes an environment variable made available to an app competent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "git": {
                    "$ref": "#/types/digitalocean:index/AppSpecServiceGit:AppSpecServiceGit",
                    "description": "A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "github": {
                    "$ref": "#/types/digitalocean:index/AppSpecServiceGithub:AppSpecServiceGithub",
                    "description": "A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean:index/AppSpecServiceGitlab:AppSpecServiceGitlab",
                    "description": "A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthCheck": {
                    "$ref": "#/types/digitalocean:index/AppSpecServiceHealthCheck:AppSpecServiceHealthCheck",
                    "description": "A health check to determine the availability of this component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpPort": {
                    "type": "integer",
                    "description": "The internal port on which this service's run command will listen.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "$ref": "#/types/digitalocean:index/AppSpecServiceImage:AppSpecServiceImage",
                    "description": "An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceCount": {
                    "type": "integer",
                    "description": "The amount of instances that this component should be scaled to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceSizeSlug": {
                    "type": "string",
                    "description": "The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be [found with the API](https://docs.digitalocean.com/reference/api/api-reference/#operation/list_instance_sizes) or using the [doctl CLI](https://docs.digitalocean.com/reference/doctl/) (`doctl apps tier instance-size list`). Default: `basic-xxs`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalPorts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of ports on which this service will listen for internal traffic.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logDestinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecServiceLogDestination:AppSpecServiceLogDestination"
                    },
                    "description": "Describes a log forwarding destination.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecServiceRoute:AppSpecServiceRoute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runCommand": {
                    "type": "string",
                    "description": "An optional run command to override the component's default.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "httpPort",
                        "name",
                        "routes",
                        "runCommand"
                    ]
                }
            }
        },
        "digitalocean:index/AppSpecServiceAlert:AppSpecServiceAlert": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Determines whether or not the alert is disabled (default: `false`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rule": {
                    "type": "string",
                    "description": "The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "description": "The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "rule",
                "value",
                "window"
            ]
        },
        "digitalocean:index/AppSpecServiceCors:AppSpecServiceCors": {
            "properties": {
                "allowCredentials": {
                    "type": "boolean",
                    "description": "Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is `include`. This configures the `Access-Control-Allow-Credentials` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowOrigins": {
                    "$ref": "#/types/digitalocean:index/AppSpecServiceCorsAllowOrigins:AppSpecServiceCorsAllowOrigins",
                    "description": "The `Access-Control-Allow-Origin` can be\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exposeHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAge": {
                    "type": "string",
                    "description": "An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecServiceCorsAllowOrigins:AppSpecServiceCorsAllowOrigins": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin only if the client's origin exactly matches the value you provide.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin if the beginning of the client's origin matches the value you provide.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin if the client’s origin matches the regex you provide, in [RE2 style syntax](https://github.com/google/re2/wiki/Syntax).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecServiceEnv:AppSpecServiceEnv": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The name of the environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "description": "The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the environment variable, `GENERAL` or `SECRET`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "type"
                    ]
                }
            }
        },
        "digitalocean:index/AppSpecServiceGit:AppSpecServiceGit": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoCloneUrl": {
                    "type": "string",
                    "description": "The clone URL of the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecServiceGithub:AppSpecServiceGithub": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecServiceGitlab:AppSpecServiceGitlab": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecServiceHealthCheck:AppSpecServiceHealthCheck": {
            "properties": {
                "failureThreshold": {
                    "type": "integer",
                    "description": "The number of failed health checks before considered unhealthy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpPath": {
                    "type": "string",
                    "description": "The route path used for the HTTP health check ping.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "initialDelaySeconds": {
                    "type": "integer",
                    "description": "The number of seconds to wait before beginning health checks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "periodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to wait between health checks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "successThreshold": {
                    "type": "integer",
                    "description": "The number of successful health checks before considered healthy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeoutSeconds": {
                    "type": "integer",
                    "description": "The number of seconds after which the check times out.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecServiceImage:AppSpecServiceImage": {
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryType": {
                    "type": "string",
                    "description": "The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repository": {
                    "type": "string",
                    "description": "The repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "description": "The repository tag. Defaults to `latest` if not provided.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "registryType",
                "repository"
            ]
        },
        "digitalocean:index/AppSpecServiceLogDestination:AppSpecServiceLogDestination": {
            "properties": {
                "datadog": {
                    "$ref": "#/types/digitalocean:index/AppSpecServiceLogDestinationDatadog:AppSpecServiceLogDestinationDatadog",
                    "description": "Datadog configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logtail": {
                    "$ref": "#/types/digitalocean:index/AppSpecServiceLogDestinationLogtail:AppSpecServiceLogDestinationLogtail",
                    "description": "Logtail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "papertrail": {
                    "$ref": "#/types/digitalocean:index/AppSpecServiceLogDestinationPapertrail:AppSpecServiceLogDestinationPapertrail",
                    "description": "Papertrail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "digitalocean:index/AppSpecServiceLogDestinationDatadog:AppSpecServiceLogDestinationDatadog": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Datadog API key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "digitalocean:index/AppSpecServiceLogDestinationLogtail:AppSpecServiceLogDestinationLogtail": {
            "properties": {
                "token": {
                    "type": "string",
                    "description": "Logtail token.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "token"
            ]
        },
        "digitalocean:index/AppSpecServiceLogDestinationPapertrail:AppSpecServiceLogDestinationPapertrail": {
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endpoint"
            ]
        },
        "digitalocean:index/AppSpecServiceRoute:AppSpecServiceRoute": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "Paths must start with `/` and must be unique within the app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preservePathPrefix": {
                    "type": "boolean",
                    "description": "An optional flag to preserve the path that is forwarded to the backend service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecStaticSite:AppSpecStaticSite": {
            "properties": {
                "buildCommand": {
                    "type": "string",
                    "description": "An optional build command to run while building this component from source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "catchallDocument": {
                    "type": "string",
                    "description": "The name of the document to use as the fallback for any requests to documents that are not found when serving this static site.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cors": {
                    "$ref": "#/types/digitalocean:index/AppSpecStaticSiteCors:AppSpecStaticSiteCors",
                    "description": "The [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) policies of the app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerfilePath": {
                    "type": "string",
                    "description": "The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environmentSlug": {
                    "type": "string",
                    "description": "An environment slug describing the type of this app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecStaticSiteEnv:AppSpecStaticSiteEnv"
                    },
                    "description": "Describes an environment variable made available to an app competent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorDocument": {
                    "type": "string",
                    "description": "The name of the error document to use when serving this static site.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "git": {
                    "$ref": "#/types/digitalocean:index/AppSpecStaticSiteGit:AppSpecStaticSiteGit",
                    "description": "A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "github": {
                    "$ref": "#/types/digitalocean:index/AppSpecStaticSiteGithub:AppSpecStaticSiteGithub",
                    "description": "A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean:index/AppSpecStaticSiteGitlab:AppSpecStaticSiteGitlab",
                    "description": "A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexDocument": {
                    "type": "string",
                    "description": "The name of the index document to use when serving this static site.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "outputDir": {
                    "type": "string",
                    "description": "An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecStaticSiteRoute:AppSpecStaticSiteRoute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "routes"
                    ]
                }
            }
        },
        "digitalocean:index/AppSpecStaticSiteCors:AppSpecStaticSiteCors": {
            "properties": {
                "allowCredentials": {
                    "type": "boolean",
                    "description": "Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is `include`. This configures the `Access-Control-Allow-Credentials` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowOrigins": {
                    "$ref": "#/types/digitalocean:index/AppSpecStaticSiteCorsAllowOrigins:AppSpecStaticSiteCorsAllowOrigins",
                    "description": "The `Access-Control-Allow-Origin` can be\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exposeHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAge": {
                    "type": "string",
                    "description": "An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecStaticSiteCorsAllowOrigins:AppSpecStaticSiteCorsAllowOrigins": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin only if the client's origin exactly matches the value you provide.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin if the beginning of the client's origin matches the value you provide.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin if the client’s origin matches the regex you provide, in [RE2 style syntax](https://github.com/google/re2/wiki/Syntax).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecStaticSiteEnv:AppSpecStaticSiteEnv": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The name of the environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "description": "The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the environment variable, `GENERAL` or `SECRET`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "type"
                    ]
                }
            }
        },
        "digitalocean:index/AppSpecStaticSiteGit:AppSpecStaticSiteGit": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoCloneUrl": {
                    "type": "string",
                    "description": "The clone URL of the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecStaticSiteGithub:AppSpecStaticSiteGithub": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecStaticSiteGitlab:AppSpecStaticSiteGitlab": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecStaticSiteRoute:AppSpecStaticSiteRoute": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "Paths must start with `/` and must be unique within the app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preservePathPrefix": {
                    "type": "boolean",
                    "description": "An optional flag to preserve the path that is forwarded to the backend service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecWorker:AppSpecWorker": {
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecWorkerAlert:AppSpecWorkerAlert"
                    },
                    "description": "Describes an alert policy for the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "buildCommand": {
                    "type": "string",
                    "description": "An optional build command to run while building this component from source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerfilePath": {
                    "type": "string",
                    "description": "The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environmentSlug": {
                    "type": "string",
                    "description": "An environment slug describing the type of this app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecWorkerEnv:AppSpecWorkerEnv"
                    },
                    "description": "Describes an environment variable made available to an app competent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "git": {
                    "$ref": "#/types/digitalocean:index/AppSpecWorkerGit:AppSpecWorkerGit",
                    "description": "A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "github": {
                    "$ref": "#/types/digitalocean:index/AppSpecWorkerGithub:AppSpecWorkerGithub",
                    "description": "A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean:index/AppSpecWorkerGitlab:AppSpecWorkerGitlab",
                    "description": "A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "$ref": "#/types/digitalocean:index/AppSpecWorkerImage:AppSpecWorkerImage",
                    "description": "An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceCount": {
                    "type": "integer",
                    "description": "The amount of instances that this component should be scaled to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceSizeSlug": {
                    "type": "string",
                    "description": "The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be [found with the API](https://docs.digitalocean.com/reference/api/api-reference/#operation/list_instance_sizes) or using the [doctl CLI](https://docs.digitalocean.com/reference/doctl/) (`doctl apps tier instance-size list`). Default: `basic-xxs`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logDestinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/AppSpecWorkerLogDestination:AppSpecWorkerLogDestination"
                    },
                    "description": "Describes a log forwarding destination.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runCommand": {
                    "type": "string",
                    "description": "An optional run command to override the component's default.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "digitalocean:index/AppSpecWorkerAlert:AppSpecWorkerAlert": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Determines whether or not the alert is disabled (default: `false`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rule": {
                    "type": "string",
                    "description": "The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "description": "The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "rule",
                "value",
                "window"
            ]
        },
        "digitalocean:index/AppSpecWorkerEnv:AppSpecWorkerEnv": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The name of the environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "description": "The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the environment variable, `GENERAL` or `SECRET`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "type"
                    ]
                }
            }
        },
        "digitalocean:index/AppSpecWorkerGit:AppSpecWorkerGit": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoCloneUrl": {
                    "type": "string",
                    "description": "The clone URL of the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecWorkerGithub:AppSpecWorkerGithub": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecWorkerGitlab:AppSpecWorkerGitlab": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/AppSpecWorkerImage:AppSpecWorkerImage": {
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryType": {
                    "type": "string",
                    "description": "The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repository": {
                    "type": "string",
                    "description": "The repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "description": "The repository tag. Defaults to `latest` if not provided.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "registryType",
                "repository"
            ]
        },
        "digitalocean:index/AppSpecWorkerLogDestination:AppSpecWorkerLogDestination": {
            "properties": {
                "datadog": {
                    "$ref": "#/types/digitalocean:index/AppSpecWorkerLogDestinationDatadog:AppSpecWorkerLogDestinationDatadog",
                    "description": "Datadog configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logtail": {
                    "$ref": "#/types/digitalocean:index/AppSpecWorkerLogDestinationLogtail:AppSpecWorkerLogDestinationLogtail",
                    "description": "Logtail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "papertrail": {
                    "$ref": "#/types/digitalocean:index/AppSpecWorkerLogDestinationPapertrail:AppSpecWorkerLogDestinationPapertrail",
                    "description": "Papertrail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "digitalocean:index/AppSpecWorkerLogDestinationDatadog:AppSpecWorkerLogDestinationDatadog": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Datadog API key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "digitalocean:index/AppSpecWorkerLogDestinationLogtail:AppSpecWorkerLogDestinationLogtail": {
            "properties": {
                "token": {
                    "type": "string",
                    "description": "Logtail token.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "token"
            ]
        },
        "digitalocean:index/AppSpecWorkerLogDestinationPapertrail:AppSpecWorkerLogDestinationPapertrail": {
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endpoint"
            ]
        },
        "digitalocean:index/DatabaseClusterMaintenanceWindow:DatabaseClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "The day of the week on which to apply maintenance updates.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hour": {
                    "type": "string",
                    "description": "The hour in UTC at which maintenance updates will be applied in 24 hour format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "day",
                "hour"
            ]
        },
        "digitalocean:index/DatabaseFirewallRule:DatabaseFirewallRule": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time when the firewall rule was created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of resource that the firewall rule allows to access the database cluster. The possible values are: `droplet`, `k8s`, `ip_addr`, `tag`, or `app`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uuid": {
                    "type": "string",
                    "description": "A unique identifier for the firewall rule.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The ID of the specific resource, the name of a tag applied to a group of resources, or the IP address that the firewall rule allows to access the database cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "type",
                        "uuid",
                        "value"
                    ]
                }
            }
        },
        "digitalocean:index/FirewallInboundRule:FirewallInboundRule": {
            "properties": {
                "portRange": {
                    "type": "string",
                    "description": "The ports on which traffic will be allowed\nspecified as a string containing a single port, a range (e.g. \"8000-9000\"),\nor \"1-65535\" to open all ports for a protocol. Required for when protocol is\n`tcp` or `udp`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "The type of traffic to be allowed.\nThis may be one of \"tcp\", \"udp\", or \"icmp\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the IPv4\naddresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs from which the\ninbound traffic will be accepted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceDropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array containing the IDs of\nthe Droplets from which the inbound traffic will be accepted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceKubernetesIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the IDs of\nthe Kubernetes clusters from which the inbound traffic will be accepted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceLoadBalancerUids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the IDs\nof the Load Balancers from which the inbound traffic will be accepted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the names of Tags\ncorresponding to groups of Droplets from which the inbound traffic\nwill be accepted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ]
        },
        "digitalocean:index/FirewallOutboundRule:FirewallOutboundRule": {
            "properties": {
                "destinationAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the IPv4\naddresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which the\noutbound traffic will be allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationDropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array containing the IDs of\nthe Droplets to which the outbound traffic will be allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationKubernetesIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the IDs of\nthe Kubernetes clusters to which the outbound traffic will be allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationLoadBalancerUids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the IDs\nof the Load Balancers to which the outbound traffic will be allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the names of Tags\ncorresponding to groups of Droplets to which the outbound traffic will\nbe allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "portRange": {
                    "type": "string",
                    "description": "The ports on which traffic will be allowed\nspecified as a string containing a single port, a range (e.g. \"8000-9000\"),\nor \"1-65535\" to open all ports for a protocol. Required for when protocol is\n`tcp` or `udp`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "The type of traffic to be allowed.\nThis may be one of \"tcp\", \"udp\", or \"icmp\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ]
        },
        "digitalocean:index/FirewallPendingChange:FirewallPendingChange": {
            "properties": {
                "dropletId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "removing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "A status string indicating the current state of the Firewall.\nThis can be \"waiting\", \"succeeded\", or \"failed\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/KubernetesClusterKubeConfig:KubernetesClusterKubeConfig": {
            "properties": {
                "clientCertificate": {
                    "type": "string",
                    "description": "The base64 encoded public certificate used by clients to access the cluster. Only available if token authentication is not supported on your cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientKey": {
                    "type": "string",
                    "description": "The base64 encoded private key used by clients to access the cluster. Only available if token authentication is not supported on your cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterCaCertificate": {
                    "type": "string",
                    "description": "The base64 encoded public certificate for the cluster's certificate authority.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The date and time when the credentials will expire and need to be regenerated.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "The URL of the API server on the Kubernetes master node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rawConfig": {
                    "type": "string",
                    "description": "The full contents of the Kubernetes cluster's kubeconfig file.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The DigitalOcean API access token used by clients to access the cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clientCertificate",
                        "clientKey",
                        "clusterCaCertificate",
                        "expiresAt",
                        "host",
                        "rawConfig",
                        "token"
                    ]
                }
            }
        },
        "digitalocean:index/KubernetesClusterMaintenancePolicy:KubernetesClusterMaintenancePolicy": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "The day of the maintenance window policy. May be one of \"monday\" through \"sunday\", or \"any\" to indicate an arbitrary week day.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startTime": {
                    "type": "string",
                    "description": "The start time in UTC of the maintenance window policy in 24-hour clock format / HH:MM notation (e.g., 15:00).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "day",
                        "duration",
                        "startTime"
                    ]
                }
            }
        },
        "digitalocean:index/KubernetesClusterNodePool:KubernetesClusterNodePool": {
            "properties": {
                "actualNodeCount": {
                    "type": "integer",
                    "description": "A computed field representing the actual number of nodes in the node pool, which is especially useful when auto-scaling is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoScale": {
                    "type": "boolean",
                    "description": "Enable auto-scaling of the number of nodes in the node pool within the given min/max range.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference the node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value pairs to apply to nodes in the pool. The labels are exposed in the Kubernetes API as labels in the metadata of the corresponding [Node resources](https://kubernetes.io/docs/concepts/architecture/nodes/).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "If auto-scaling is enabled, this represents the maximum number of nodes that the node pool can be scaled up to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minNodes": {
                    "type": "integer",
                    "description": "If auto-scaling is enabled, this represents the minimum number of nodes that the node pool can be scaled down to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A name for the node pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeCount": {
                    "type": "integer",
                    "description": "The number of Droplet instances in the node pool. If auto-scaling is enabled, this should only be set if the desired result is to explicitly reset the number of nodes to this value. If auto-scaling is enabled, and the node count is outside of the given min/max range, it will use the min nodes value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/KubernetesClusterNodePoolNode:KubernetesClusterNodePoolNode"
                    },
                    "description": "A list of nodes in the pool. Each node exports the following attributes:\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "string",
                    "description": "The slug identifier for the type of Droplet to be used as workers in the node pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tag names to be applied to the Kubernetes cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/KubernetesClusterNodePoolTaint:KubernetesClusterNodePoolTaint"
                    },
                    "description": "A block representing a taint applied to all nodes in the pool. Each taint exports the following attributes (taints must be unique by key and effect pair):\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actualNodeCount",
                        "id",
                        "name",
                        "nodes",
                        "size"
                    ]
                }
            }
        },
        "digitalocean:index/KubernetesClusterNodePoolNode:KubernetesClusterNodePoolNode": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time when the node was created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dropletId": {
                    "type": "string",
                    "description": "The id of the node's droplet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference the node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A name for the node pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "A string indicating the current status of the individual node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time when the node was last updated.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "dropletId",
                        "id",
                        "name",
                        "status",
                        "updatedAt"
                    ]
                }
            }
        },
        "digitalocean:index/KubernetesClusterNodePoolTaint:KubernetesClusterNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string",
                    "description": "How the node reacts to pods that it won't tolerate. Available effect values are: \"NoSchedule\", \"PreferNoSchedule\", \"NoExecute\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "An arbitrary string. The \"key\" and \"value\" fields of the \"taint\" object form a key-value pair.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "An arbitrary string. The \"key\" and \"value\" fields of the \"taint\" object form a key-value pair.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "value"
            ]
        },
        "digitalocean:index/KubernetesNodePoolNode:KubernetesNodePoolNode": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time when the node was created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dropletId": {
                    "type": "string",
                    "description": "The id of the node's droplet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference the node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A name for the node pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "A string indicating the current status of the individual node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time when the node was last updated.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "dropletId",
                        "id",
                        "name",
                        "status",
                        "updatedAt"
                    ]
                }
            }
        },
        "digitalocean:index/KubernetesNodePoolTaint:KubernetesNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string",
                    "description": "How the node reacts to pods that it won't tolerate. Available effect values are: \"NoSchedule\", \"PreferNoSchedule\", \"NoExecute\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "An arbitrary string. The \"key\" and \"value\" fields of the \"taint\" object form a key-value pair.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "An arbitrary string. The \"key\" and \"value\" fields of the \"taint\" object form a key-value pair.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "value"
            ]
        },
        "digitalocean:index/LoadBalancerForwardingRule:LoadBalancerForwardingRule": {
            "properties": {
                "certificateId": {
                    "type": "string",
                    "description": "**Deprecated** The ID of the TLS certificate to be used for SSL termination.\n",
                    "deprecationMessage": "Certificate IDs may change, for example when a Let's Encrypt certificate is auto-renewed. Please specify 'certificate_name' instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificateName": {
                    "type": "string",
                    "description": "The unique name of the TLS certificate to be used for SSL termination.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entryPort": {
                    "type": "integer",
                    "description": "An integer representing the port on which the Load Balancer instance will listen.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entryProtocol": {
                    "type": "string",
                    "description": "The protocol used for traffic to the Load Balancer. The possible values are: `http`, `https`, `http2` or `tcp`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetPort": {
                    "type": "integer",
                    "description": "An integer representing the port on the backend Droplets to which the Load Balancer will send traffic.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetProtocol": {
                    "type": "string",
                    "description": "The protocol used for traffic from the Load Balancer to the backend Droplets. The possible values are: `http`, `https`, `http2` or `tcp`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsPassthrough": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether SSL encrypted traffic will be passed through to the backend Droplets. The default value is `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "entryPort",
                "entryProtocol",
                "targetPort",
                "targetProtocol"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certificateId",
                        "certificateName",
                        "entryPort",
                        "entryProtocol",
                        "targetPort",
                        "targetProtocol"
                    ]
                }
            }
        },
        "digitalocean:index/LoadBalancerHealthcheck:LoadBalancerHealthcheck": {
            "properties": {
                "checkIntervalSeconds": {
                    "type": "integer",
                    "description": "The number of seconds between between two consecutive health checks. If not specified, the default value is `10`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthyThreshold": {
                    "type": "integer",
                    "description": "The number of times a health check must pass for a backend Droplet to be marked \"healthy\" and be re-added to the pool. If not specified, the default value is `5`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path on the backend Droplets to which the Load Balancer instance will send a request.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "An integer representing the port on the backend Droplets on which the health check will attempt a connection.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol used for health checks sent to the backend Droplets. The possible values are `http`, `https` or `tcp`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseTimeoutSeconds": {
                    "type": "integer",
                    "description": "The number of seconds the Load Balancer instance will wait for a response until marking a health check as failed. If not specified, the default value is `5`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unhealthyThreshold": {
                    "type": "integer",
                    "description": "The number of times a health check must fail for a backend Droplet to be marked \"unhealthy\" and be removed from the pool. If not specified, the default value is `3`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "port",
                "protocol"
            ]
        },
        "digitalocean:index/LoadBalancerStickySessions:LoadBalancerStickySessions": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The name to be used for the cookie sent to the client. This attribute is required when using `cookies` for the sticky sessions type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieTtlSeconds": {
                    "type": "integer",
                    "description": "The number of seconds until the cookie set by the Load Balancer expires. This attribute is required when using `cookies` for the sticky sessions type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "An attribute indicating how and if requests from a client will be persistently served by the same backend Droplet. The possible values are `cookies` or `none`. If not specified, the default value is `none`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/MonitorAlertAlerts:MonitorAlertAlerts": {
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/MonitorAlertAlertsSlack:MonitorAlertAlertsSlack"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/MonitorAlertAlertsSlack:MonitorAlertAlertsSlack": {
            "properties": {
                "channel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "channel",
                "url"
            ]
        },
        "digitalocean:index/SpacesBucketCorsRule:SpacesBucketCorsRule": {
            "properties": {
                "allowedHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of headers that will be included in the CORS preflight request's `Access-Control-Request-Headers`. A header may contain one wildcard (e.g. `x-amz-*`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of HTTP methods (e.g. `GET`) which are allowed from the specified origin.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of hosts from which requests using the specified methods are allowed. A host may contain one wildcard (e.g. http://*.example.com).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAgeSeconds": {
                    "type": "integer",
                    "description": "The time in seconds that browser can cache the response for a preflight request.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowedMethods",
                "allowedOrigins"
            ]
        },
        "digitalocean:index/SpacesBucketLifecycleRule:SpacesBucketLifecycleRule": {
            "properties": {
                "abortIncompleteMultipartUploadDays": {
                    "type": "integer",
                    "description": "Specifies the number of days after initiating a multipart\nupload when the multipart upload must be completed or else Spaces will abort the upload.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Specifies lifecycle rule status.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expiration": {
                    "$ref": "#/types/digitalocean:index/SpacesBucketLifecycleRuleExpiration:SpacesBucketLifecycleRuleExpiration",
                    "description": "Specifies a time period after which applicable objects expire (documented below).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the rule.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noncurrentVersionExpiration": {
                    "$ref": "#/types/digitalocean:index/SpacesBucketLifecycleRuleNoncurrentVersionExpiration:SpacesBucketLifecycleRuleNoncurrentVersionExpiration",
                    "description": "Specifies when non-current object versions expire (documented below).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "description": "Object key prefix identifying one or more objects to which the rule applies.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "id"
                    ]
                }
            }
        },
        "digitalocean:index/SpacesBucketLifecycleRuleExpiration:SpacesBucketLifecycleRuleExpiration": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Specifies the date/time after which you want applicable objects to expire. The argument uses\nRFC3339 format, e.g. \"2020-03-22T15:03:55Z\" or parts thereof e.g. \"2019-02-28\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "days": {
                    "type": "integer",
                    "description": "Specifies the number of days after object creation when the applicable objects will expire.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expiredObjectDeleteMarker": {
                    "type": "boolean",
                    "description": "On a versioned bucket (versioning-enabled or versioning-suspended\nbucket), setting this to true directs Spaces to delete expired object delete markers.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/SpacesBucketLifecycleRuleNoncurrentVersionExpiration:SpacesBucketLifecycleRuleNoncurrentVersionExpiration": {
            "properties": {
                "days": {
                    "type": "integer",
                    "description": "Specifies the number of days after which an object's non-current versions expire.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/SpacesBucketVersioning:SpacesBucketVersioning": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable versioning. Once you version-enable a bucket, it can never return to an unversioned\nstate. You can, however, suspend versioning on that bucket.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpec:getAppSpec": {
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecAlert:getAppSpecAlert"
                    },
                    "description": "Describes an alert policy for the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecDatabase:getAppSpecDatabase"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "This attribute has been replaced by `domain` which supports additional functionality.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecEnv:getAppSpecEnv"
                    },
                    "description": "Describes an environment variable made available to an app competent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "functions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecFunction:getAppSpecFunction"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecJob:getAppSpecJob"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecService:getAppSpecService"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticSites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecStaticSite:getAppSpecStaticSite"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecWorker:getAppSpecWorker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "domains",
                "domains",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecAlert:getAppSpecAlert": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Determines whether or not the alert is disabled (default: `false`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rule": {
                    "type": "string",
                    "description": "The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rule"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecDatabase:getAppSpecDatabase": {
            "properties": {
                "clusterName": {
                    "type": "string",
                    "description": "The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if `cluster_name` is not set, a new cluster will be provisioned.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dbName": {
                    "type": "string",
                    "description": "The name of the MySQL or PostgreSQL database to configure.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dbUser": {
                    "type": "string",
                    "description": "The name of the MySQL or PostgreSQL user to configure.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "engine": {
                    "type": "string",
                    "description": "The database engine to use (`MYSQL`, `PG`, `REDIS`, or `MONGODB`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "production": {
                    "type": "boolean",
                    "description": "Whether this is a production or dev database.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "description": "The version of the database engine.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecDomain:getAppSpecDomain": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the environment variable, `GENERAL` or `SECRET`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wildcard": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type",
                "wildcard"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecEnv:getAppSpecEnv": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The name of the environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "description": "The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the environment variable, `GENERAL` or `SECRET`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecFunction:getAppSpecFunction": {
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecFunctionAlert:getAppSpecFunctionAlert"
                    },
                    "description": "Describes an alert policy for the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cors": {
                    "$ref": "#/types/digitalocean:index/getAppSpecFunctionCors:getAppSpecFunctionCors",
                    "description": "The [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) policies of the app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecFunctionEnv:getAppSpecFunctionEnv"
                    },
                    "description": "Describes an environment variable made available to an app competent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "git": {
                    "$ref": "#/types/digitalocean:index/getAppSpecFunctionGit:getAppSpecFunctionGit",
                    "description": "A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "github": {
                    "$ref": "#/types/digitalocean:index/getAppSpecFunctionGithub:getAppSpecFunctionGithub",
                    "description": "A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean:index/getAppSpecFunctionGitlab:getAppSpecFunctionGitlab",
                    "description": "A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logDestinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecFunctionLogDestination:getAppSpecFunctionLogDestination"
                    },
                    "description": "Describes a log forwarding destination.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecFunctionRoute:getAppSpecFunctionRoute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "routes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecFunctionAlert:getAppSpecFunctionAlert": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Determines whether or not the alert is disabled (default: `false`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rule": {
                    "type": "string",
                    "description": "The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "description": "The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "rule",
                "value",
                "window"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecFunctionCors:getAppSpecFunctionCors": {
            "properties": {
                "allowCredentials": {
                    "type": "boolean",
                    "description": "Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is `include`. This configures the `Access-Control-Allow-Credentials` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowOrigins": {
                    "$ref": "#/types/digitalocean:index/getAppSpecFunctionCorsAllowOrigins:getAppSpecFunctionCorsAllowOrigins",
                    "description": "The `Access-Control-Allow-Origin` can be\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exposeHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAge": {
                    "type": "string",
                    "description": "An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecFunctionCorsAllowOrigins:getAppSpecFunctionCorsAllowOrigins": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin only if the client's origin exactly matches the value you provide.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin if the beginning of the client's origin matches the value you provide.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin if the client’s origin matches the regex you provide, in [RE2 style syntax](https://github.com/google/re2/wiki/Syntax).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecFunctionEnv:getAppSpecFunctionEnv": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The name of the environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "description": "The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the environment variable, `GENERAL` or `SECRET`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecFunctionGit:getAppSpecFunctionGit": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoCloneUrl": {
                    "type": "string",
                    "description": "The clone URL of the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecFunctionGithub:getAppSpecFunctionGithub": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecFunctionGitlab:getAppSpecFunctionGitlab": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecFunctionLogDestination:getAppSpecFunctionLogDestination": {
            "properties": {
                "datadog": {
                    "$ref": "#/types/digitalocean:index/getAppSpecFunctionLogDestinationDatadog:getAppSpecFunctionLogDestinationDatadog",
                    "description": "Datadog configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logtail": {
                    "$ref": "#/types/digitalocean:index/getAppSpecFunctionLogDestinationLogtail:getAppSpecFunctionLogDestinationLogtail",
                    "description": "Logtail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "papertrail": {
                    "$ref": "#/types/digitalocean:index/getAppSpecFunctionLogDestinationPapertrail:getAppSpecFunctionLogDestinationPapertrail",
                    "description": "Papertrail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecFunctionLogDestinationDatadog:getAppSpecFunctionLogDestinationDatadog": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Datadog API key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecFunctionLogDestinationLogtail:getAppSpecFunctionLogDestinationLogtail": {
            "properties": {
                "token": {
                    "type": "string",
                    "description": "Logtail token.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecFunctionLogDestinationPapertrail:getAppSpecFunctionLogDestinationPapertrail": {
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecFunctionRoute:getAppSpecFunctionRoute": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "Paths must start with `/` and must be unique within the app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preservePathPrefix": {
                    "type": "boolean",
                    "description": "An optional flag to preserve the path that is forwarded to the backend service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecJob:getAppSpecJob": {
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecJobAlert:getAppSpecJobAlert"
                    },
                    "description": "Describes an alert policy for the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "buildCommand": {
                    "type": "string",
                    "description": "An optional build command to run while building this component from source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerfilePath": {
                    "type": "string",
                    "description": "The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environmentSlug": {
                    "type": "string",
                    "description": "An environment slug describing the type of this app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecJobEnv:getAppSpecJobEnv"
                    },
                    "description": "Describes an environment variable made available to an app competent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "git": {
                    "$ref": "#/types/digitalocean:index/getAppSpecJobGit:getAppSpecJobGit",
                    "description": "A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "github": {
                    "$ref": "#/types/digitalocean:index/getAppSpecJobGithub:getAppSpecJobGithub",
                    "description": "A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean:index/getAppSpecJobGitlab:getAppSpecJobGitlab",
                    "description": "A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "$ref": "#/types/digitalocean:index/getAppSpecJobImage:getAppSpecJobImage",
                    "description": "An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceCount": {
                    "type": "integer",
                    "description": "The amount of instances that this component should be scaled to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceSizeSlug": {
                    "type": "string",
                    "description": "The instance size to use for this component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "description": "The type of job and when it will be run during the deployment process. It may be one of:\n- `UNSPECIFIED`: Default job type, will auto-complete to POST_DEPLOY kind.\n- `PRE_DEPLOY`: Indicates a job that runs before an app deployment.\n- `POST_DEPLOY`: Indicates a job that runs after an app deployment.\n- `FAILED_DEPLOY`: Indicates a job that runs after a component fails to deploy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logDestinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecJobLogDestination:getAppSpecJobLogDestination"
                    },
                    "description": "Describes a log forwarding destination.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runCommand": {
                    "type": "string",
                    "description": "An optional run command to override the component's default.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecJobAlert:getAppSpecJobAlert": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Determines whether or not the alert is disabled (default: `false`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rule": {
                    "type": "string",
                    "description": "The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "description": "The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "rule",
                "value",
                "window"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecJobEnv:getAppSpecJobEnv": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The name of the environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "description": "The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the environment variable, `GENERAL` or `SECRET`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecJobGit:getAppSpecJobGit": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoCloneUrl": {
                    "type": "string",
                    "description": "The clone URL of the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecJobGithub:getAppSpecJobGithub": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecJobGitlab:getAppSpecJobGitlab": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecJobImage:getAppSpecJobImage": {
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryType": {
                    "type": "string",
                    "description": "The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repository": {
                    "type": "string",
                    "description": "The repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "description": "The repository tag. Defaults to `latest` if not provided.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "registryType",
                "repository"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecJobLogDestination:getAppSpecJobLogDestination": {
            "properties": {
                "datadog": {
                    "$ref": "#/types/digitalocean:index/getAppSpecJobLogDestinationDatadog:getAppSpecJobLogDestinationDatadog",
                    "description": "Datadog configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logtail": {
                    "$ref": "#/types/digitalocean:index/getAppSpecJobLogDestinationLogtail:getAppSpecJobLogDestinationLogtail",
                    "description": "Logtail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "papertrail": {
                    "$ref": "#/types/digitalocean:index/getAppSpecJobLogDestinationPapertrail:getAppSpecJobLogDestinationPapertrail",
                    "description": "Papertrail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecJobLogDestinationDatadog:getAppSpecJobLogDestinationDatadog": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Datadog API key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecJobLogDestinationLogtail:getAppSpecJobLogDestinationLogtail": {
            "properties": {
                "token": {
                    "type": "string",
                    "description": "Logtail token.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecJobLogDestinationPapertrail:getAppSpecJobLogDestinationPapertrail": {
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecService:getAppSpecService": {
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecServiceAlert:getAppSpecServiceAlert"
                    },
                    "description": "Describes an alert policy for the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "buildCommand": {
                    "type": "string",
                    "description": "An optional build command to run while building this component from source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cors": {
                    "$ref": "#/types/digitalocean:index/getAppSpecServiceCors:getAppSpecServiceCors",
                    "description": "The [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) policies of the app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerfilePath": {
                    "type": "string",
                    "description": "The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environmentSlug": {
                    "type": "string",
                    "description": "An environment slug describing the type of this app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecServiceEnv:getAppSpecServiceEnv"
                    },
                    "description": "Describes an environment variable made available to an app competent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "git": {
                    "$ref": "#/types/digitalocean:index/getAppSpecServiceGit:getAppSpecServiceGit",
                    "description": "A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "github": {
                    "$ref": "#/types/digitalocean:index/getAppSpecServiceGithub:getAppSpecServiceGithub",
                    "description": "A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean:index/getAppSpecServiceGitlab:getAppSpecServiceGitlab",
                    "description": "A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthCheck": {
                    "$ref": "#/types/digitalocean:index/getAppSpecServiceHealthCheck:getAppSpecServiceHealthCheck",
                    "description": "A health check to determine the availability of this component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpPort": {
                    "type": "integer",
                    "description": "The internal port on which this service's run command will listen.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "$ref": "#/types/digitalocean:index/getAppSpecServiceImage:getAppSpecServiceImage",
                    "description": "An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceCount": {
                    "type": "integer",
                    "description": "The amount of instances that this component should be scaled to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceSizeSlug": {
                    "type": "string",
                    "description": "The instance size to use for this component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalPorts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of ports on which this service will listen for internal traffic.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logDestinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecServiceLogDestination:getAppSpecServiceLogDestination"
                    },
                    "description": "Describes a log forwarding destination.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecServiceRoute:getAppSpecServiceRoute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runCommand": {
                    "type": "string",
                    "description": "An optional run command to override the component's default.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "httpPort",
                "name",
                "routes",
                "runCommand"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecServiceAlert:getAppSpecServiceAlert": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Determines whether or not the alert is disabled (default: `false`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rule": {
                    "type": "string",
                    "description": "The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "description": "The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "rule",
                "value",
                "window"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecServiceCors:getAppSpecServiceCors": {
            "properties": {
                "allowCredentials": {
                    "type": "boolean",
                    "description": "Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is `include`. This configures the `Access-Control-Allow-Credentials` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowOrigins": {
                    "$ref": "#/types/digitalocean:index/getAppSpecServiceCorsAllowOrigins:getAppSpecServiceCorsAllowOrigins",
                    "description": "The `Access-Control-Allow-Origin` can be\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exposeHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAge": {
                    "type": "string",
                    "description": "An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecServiceCorsAllowOrigins:getAppSpecServiceCorsAllowOrigins": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin only if the client's origin exactly matches the value you provide.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin if the beginning of the client's origin matches the value you provide.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin if the client’s origin matches the regex you provide, in [RE2 style syntax](https://github.com/google/re2/wiki/Syntax).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecServiceEnv:getAppSpecServiceEnv": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The name of the environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "description": "The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the environment variable, `GENERAL` or `SECRET`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecServiceGit:getAppSpecServiceGit": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoCloneUrl": {
                    "type": "string",
                    "description": "The clone URL of the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecServiceGithub:getAppSpecServiceGithub": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecServiceGitlab:getAppSpecServiceGitlab": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecServiceHealthCheck:getAppSpecServiceHealthCheck": {
            "properties": {
                "failureThreshold": {
                    "type": "integer",
                    "description": "The number of failed health checks before considered unhealthy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpPath": {
                    "type": "string",
                    "description": "The route path used for the HTTP health check ping.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "initialDelaySeconds": {
                    "type": "integer",
                    "description": "The number of seconds to wait before beginning health checks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "periodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to wait between health checks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "successThreshold": {
                    "type": "integer",
                    "description": "The number of successful health checks before considered healthy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeoutSeconds": {
                    "type": "integer",
                    "description": "The number of seconds after which the check times out.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecServiceImage:getAppSpecServiceImage": {
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryType": {
                    "type": "string",
                    "description": "The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repository": {
                    "type": "string",
                    "description": "The repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "description": "The repository tag. Defaults to `latest` if not provided.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "registryType",
                "repository"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecServiceLogDestination:getAppSpecServiceLogDestination": {
            "properties": {
                "datadog": {
                    "$ref": "#/types/digitalocean:index/getAppSpecServiceLogDestinationDatadog:getAppSpecServiceLogDestinationDatadog",
                    "description": "Datadog configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logtail": {
                    "$ref": "#/types/digitalocean:index/getAppSpecServiceLogDestinationLogtail:getAppSpecServiceLogDestinationLogtail",
                    "description": "Logtail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "papertrail": {
                    "$ref": "#/types/digitalocean:index/getAppSpecServiceLogDestinationPapertrail:getAppSpecServiceLogDestinationPapertrail",
                    "description": "Papertrail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecServiceLogDestinationDatadog:getAppSpecServiceLogDestinationDatadog": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Datadog API key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecServiceLogDestinationLogtail:getAppSpecServiceLogDestinationLogtail": {
            "properties": {
                "token": {
                    "type": "string",
                    "description": "Logtail token.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecServiceLogDestinationPapertrail:getAppSpecServiceLogDestinationPapertrail": {
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecServiceRoute:getAppSpecServiceRoute": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "Paths must start with `/` and must be unique within the app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preservePathPrefix": {
                    "type": "boolean",
                    "description": "An optional flag to preserve the path that is forwarded to the backend service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecStaticSite:getAppSpecStaticSite": {
            "properties": {
                "buildCommand": {
                    "type": "string",
                    "description": "An optional build command to run while building this component from source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "catchallDocument": {
                    "type": "string",
                    "description": "The name of the document to use as the fallback for any requests to documents that are not found when serving this static site.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cors": {
                    "$ref": "#/types/digitalocean:index/getAppSpecStaticSiteCors:getAppSpecStaticSiteCors",
                    "description": "The [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) policies of the app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerfilePath": {
                    "type": "string",
                    "description": "The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environmentSlug": {
                    "type": "string",
                    "description": "An environment slug describing the type of this app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecStaticSiteEnv:getAppSpecStaticSiteEnv"
                    },
                    "description": "Describes an environment variable made available to an app competent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorDocument": {
                    "type": "string",
                    "description": "The name of the error document to use when serving this static site.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "git": {
                    "$ref": "#/types/digitalocean:index/getAppSpecStaticSiteGit:getAppSpecStaticSiteGit",
                    "description": "A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "github": {
                    "$ref": "#/types/digitalocean:index/getAppSpecStaticSiteGithub:getAppSpecStaticSiteGithub",
                    "description": "A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean:index/getAppSpecStaticSiteGitlab:getAppSpecStaticSiteGitlab",
                    "description": "A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexDocument": {
                    "type": "string",
                    "description": "The name of the index document to use when serving this static site.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "outputDir": {
                    "type": "string",
                    "description": "An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecStaticSiteRoute:getAppSpecStaticSiteRoute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "routes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecStaticSiteCors:getAppSpecStaticSiteCors": {
            "properties": {
                "allowCredentials": {
                    "type": "boolean",
                    "description": "Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is `include`. This configures the `Access-Control-Allow-Credentials` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowOrigins": {
                    "$ref": "#/types/digitalocean:index/getAppSpecStaticSiteCorsAllowOrigins:getAppSpecStaticSiteCorsAllowOrigins",
                    "description": "The `Access-Control-Allow-Origin` can be\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exposeHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAge": {
                    "type": "string",
                    "description": "An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecStaticSiteCorsAllowOrigins:getAppSpecStaticSiteCorsAllowOrigins": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin only if the client's origin exactly matches the value you provide.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin if the beginning of the client's origin matches the value you provide.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "string",
                    "description": "The `Access-Control-Allow-Origin` header will be set to the client's origin if the client’s origin matches the regex you provide, in [RE2 style syntax](https://github.com/google/re2/wiki/Syntax).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecStaticSiteEnv:getAppSpecStaticSiteEnv": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The name of the environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "description": "The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the environment variable, `GENERAL` or `SECRET`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecStaticSiteGit:getAppSpecStaticSiteGit": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoCloneUrl": {
                    "type": "string",
                    "description": "The clone URL of the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecStaticSiteGithub:getAppSpecStaticSiteGithub": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecStaticSiteGitlab:getAppSpecStaticSiteGitlab": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecStaticSiteRoute:getAppSpecStaticSiteRoute": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "Paths must start with `/` and must be unique within the app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preservePathPrefix": {
                    "type": "boolean",
                    "description": "An optional flag to preserve the path that is forwarded to the backend service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecWorker:getAppSpecWorker": {
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecWorkerAlert:getAppSpecWorkerAlert"
                    },
                    "description": "Describes an alert policy for the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "buildCommand": {
                    "type": "string",
                    "description": "An optional build command to run while building this component from source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dockerfilePath": {
                    "type": "string",
                    "description": "The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environmentSlug": {
                    "type": "string",
                    "description": "An environment slug describing the type of this app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecWorkerEnv:getAppSpecWorkerEnv"
                    },
                    "description": "Describes an environment variable made available to an app competent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "git": {
                    "$ref": "#/types/digitalocean:index/getAppSpecWorkerGit:getAppSpecWorkerGit",
                    "description": "A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "github": {
                    "$ref": "#/types/digitalocean:index/getAppSpecWorkerGithub:getAppSpecWorkerGithub",
                    "description": "A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean:index/getAppSpecWorkerGitlab:getAppSpecWorkerGitlab",
                    "description": "A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "$ref": "#/types/digitalocean:index/getAppSpecWorkerImage:getAppSpecWorkerImage",
                    "description": "An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceCount": {
                    "type": "integer",
                    "description": "The amount of instances that this component should be scaled to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceSizeSlug": {
                    "type": "string",
                    "description": "The instance size to use for this component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logDestinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getAppSpecWorkerLogDestination:getAppSpecWorkerLogDestination"
                    },
                    "description": "Describes a log forwarding destination.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runCommand": {
                    "type": "string",
                    "description": "An optional run command to override the component's default.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecWorkerAlert:getAppSpecWorkerAlert": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Determines whether or not the alert is disabled (default: `false`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rule": {
                    "type": "string",
                    "description": "The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "description": "The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "rule",
                "value",
                "window"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecWorkerEnv:getAppSpecWorkerEnv": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The name of the environment variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "description": "The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the environment variable, `GENERAL` or `SECRET`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The threshold for the type of the warning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecWorkerGit:getAppSpecWorkerGit": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repoCloneUrl": {
                    "type": "string",
                    "description": "The clone URL of the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecWorkerGithub:getAppSpecWorkerGithub": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecWorkerGitlab:getAppSpecWorkerGitlab": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format `owner/repo`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getAppSpecWorkerImage:getAppSpecWorkerImage": {
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryType": {
                    "type": "string",
                    "description": "The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repository": {
                    "type": "string",
                    "description": "The repository name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "description": "The repository tag. Defaults to `latest` if not provided.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "registryType",
                "repository"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecWorkerLogDestination:getAppSpecWorkerLogDestination": {
            "properties": {
                "datadog": {
                    "$ref": "#/types/digitalocean:index/getAppSpecWorkerLogDestinationDatadog:getAppSpecWorkerLogDestinationDatadog",
                    "description": "Datadog configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logtail": {
                    "$ref": "#/types/digitalocean:index/getAppSpecWorkerLogDestinationLogtail:getAppSpecWorkerLogDestinationLogtail",
                    "description": "Logtail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "papertrail": {
                    "$ref": "#/types/digitalocean:index/getAppSpecWorkerLogDestinationPapertrail:getAppSpecWorkerLogDestinationPapertrail",
                    "description": "Papertrail configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecWorkerLogDestinationDatadog:getAppSpecWorkerLogDestinationDatadog": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Datadog API key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecWorkerLogDestinationLogtail:getAppSpecWorkerLogDestinationLogtail": {
            "properties": {
                "token": {
                    "type": "string",
                    "description": "Logtail token.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getAppSpecWorkerLogDestinationPapertrail:getAppSpecWorkerLogDestinationPapertrail": {
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getDatabaseClusterMaintenanceWindow:getDatabaseClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "The day of the week on which to apply maintenance updates.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hour": {
                    "type": "string",
                    "description": "The hour in UTC at which maintenance updates will be applied in 24 hour format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "day",
                "hour"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getDomainsDomain:getDomainsDomain": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "(Required) The name of the domain.\n- `ttl`-  The TTL of the domain.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urn": {
                    "type": "string",
                    "description": "The uniform resource name of the domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "ttl",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getDomainsFilter:getDomainsFilter": {
            "properties": {
                "all": {
                    "type": "boolean",
                    "description": "Set to `true` to require that a field match all of the `values` instead of just one or more of\nthem. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure\nthat all of the `values` are present in the list or set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Filter the domains by this key. This may be one of `name`, `urn`, and `ttl`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchBy": {
                    "type": "string",
                    "description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to\nmatch by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as\nsubstrings to find within the string field.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of values to match against the `key` field. Only retrieves domains\nwhere the `key` field takes on one or more of the values provided here.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "digitalocean:index/getDomainsSort:getDomainsSort": {
            "properties": {
                "direction": {
                    "type": "string",
                    "description": "The sort direction. This may be either `asc` or `desc`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Sort the domains by this key. This may be one of `name`, `urn`, and `ttl`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "digitalocean:index/getDropletsDroplet:getDropletsDroplet": {
            "properties": {
                "backups": {
                    "type": "boolean",
                    "description": "Whether backups are enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "createdAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disk": {
                    "type": "integer",
                    "description": "The size of the Droplet's disk in GB.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the Droplet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "description": "The Droplet image ID or slug.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv4Address": {
                    "type": "string",
                    "description": "The Droplet's public IPv4 address\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv4AddressPrivate": {
                    "type": "string",
                    "description": "The Droplet's private IPv4 address\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6": {
                    "type": "boolean",
                    "description": "Whether IPv6 is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6Address": {
                    "type": "string",
                    "description": "The Droplet's public IPv6 address\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6AddressPrivate": {
                    "type": "string",
                    "description": "The Droplet's private IPv6 address\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "locked": {
                    "type": "boolean",
                    "description": "Whether the Droplet is locked.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memory": {
                    "type": "integer",
                    "description": "The amount of the Droplet's memory in MB.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Whether monitoring agent is installed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceHourly": {
                    "type": "number",
                    "description": "Droplet hourly price.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceMonthly": {
                    "type": "number",
                    "description": "Droplet monthly price.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateNetworking": {
                    "type": "boolean",
                    "description": "Whether private networks are enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region the Droplet is running in.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "string",
                    "description": "The unique slug that identifies the type of Droplet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Droplet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the tags associated to the Droplet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urn": {
                    "type": "string",
                    "description": "The uniform resource name of the Droplet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vcpus": {
                    "type": "integer",
                    "description": "The number of the Droplet's virtual CPUs.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the IDs of each volumes attached to the Droplet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vpcUuid": {
                    "type": "string",
                    "description": "The ID of the VPC where the Droplet is located.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "backups",
                "createdAt",
                "disk",
                "id",
                "image",
                "ipv4Address",
                "ipv4AddressPrivate",
                "ipv6",
                "ipv6Address",
                "ipv6AddressPrivate",
                "locked",
                "memory",
                "monitoring",
                "name",
                "priceHourly",
                "priceMonthly",
                "privateNetworking",
                "region",
                "size",
                "status",
                "tags",
                "urn",
                "vcpus",
                "volumeIds",
                "vpcUuid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getDropletsFilter:getDropletsFilter": {
            "properties": {
                "all": {
                    "type": "boolean",
                    "description": "Set to `true` to require that a field match all of the `values` instead of just one or more of\nthem. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure\nthat all of the `values` are present in the list or set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Filter the Droplets by this key. This may be one of `backups`, `created_at`, `disk`, `id`,\n`image`, `ipv4_address`, `ipv4_address_private`, `ipv6`, `ipv6_address`, `ipv6_address_private`, `locked`,\n`memory`, `monitoring`, `name`, `price_hourly`, `price_monthly`, `private_networking`, `region`, `size`,\n`status`, `tags`, `urn`, `vcpus`, `volume_ids`, or `vpc_uuid`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchBy": {
                    "type": "string",
                    "description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to\nmatch by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as\nsubstrings to find within the string field.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of values to match against the `key` field. Only retrieves Droplets\nwhere the `key` field takes on one or more of the values provided here.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "digitalocean:index/getDropletsSort:getDropletsSort": {
            "properties": {
                "direction": {
                    "type": "string",
                    "description": "The sort direction. This may be either `asc` or `desc`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Sort the Droplets by this key. This may be one of `backups`, `created_at`, `disk`, `id`,\n`image`, `ipv4_address`, `ipv4_address_private`, `ipv6`, `ipv6_address`, `ipv6_address_private`, `locked`,\n`memory`, `monitoring`, `name`, `price_hourly`, `price_monthly`, `private_networking`, `region`, `size`,\n`status`, `urn`, `vcpus`, or `vpc_uuid`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "digitalocean:index/getFirewallInboundRule:getFirewallInboundRule": {
            "properties": {
                "portRange": {
                    "type": "string",
                    "description": "The ports on which traffic will be allowed\nspecified as a string containing a single port, a range (e.g. \"8000-9000\"),\nor \"1-65535\" to open all ports for a protocol. Required for when protocol is\n`tcp` or `udp`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "The type of traffic to be allowed.\nThis may be one of \"tcp\", \"udp\", or \"icmp\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the IPv4\naddresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs from which the\ninbound traffic will be accepted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceDropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array containing the IDs of\nthe Droplets from which the inbound traffic will be accepted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceKubernetesIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceLoadBalancerUids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the IDs\nof the Load Balancers from which the inbound traffic will be accepted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of names of Tags corresponding to group of\nDroplets from which the inbound traffic will be accepted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ]
        },
        "digitalocean:index/getFirewallOutboundRule:getFirewallOutboundRule": {
            "properties": {
                "destinationAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the IPv4\naddresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which the\noutbound traffic will be allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationDropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array containing the IDs of\nthe Droplets to which the outbound traffic will be allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationKubernetesIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationLoadBalancerUids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the IDs\nof the Load Balancers to which the outbound traffic will be allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the names of Tags\ncorresponding to groups of Droplets to which the outbound traffic will\nbe allowed.\ntraffic.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "portRange": {
                    "type": "string",
                    "description": "The ports on which traffic will be allowed\nspecified as a string containing a single port, a range (e.g. \"8000-9000\"),\nor \"1-65535\" to open all ports for a protocol. Required for when protocol is\n`tcp` or `udp`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "The type of traffic to be allowed.\nThis may be one of \"tcp\", \"udp\", or \"icmp\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ]
        },
        "digitalocean:index/getFirewallPendingChange:getFirewallPendingChange": {
            "properties": {
                "dropletId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "removing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "A status string indicating the current state of the Firewall.\nThis can be \"waiting\", \"succeeded\", or \"failed\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean:index/getImagesFilter:getImagesFilter": {
            "properties": {
                "all": {
                    "type": "boolean",
                    "description": "Set to `true` to require that a field match all of the `values` instead of just one or more of\nthem. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure\nthat all of the `values` are present in the list or set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Filter the images by this key. This may be one of `distribution`, `error_message`,\n`id`, `image`, `min_disk_size`, `name`, `private`, `regions`, `size_gigabytes`, `slug`, `status`,\n`tags`, or `type`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchBy": {
                    "type": "string",
                    "description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to\nmatch by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as\nsubstrings to find within the string field.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of values to match against the `key` field. Only retrieves images\nwhere the `key` field takes on one or more of the values provided here.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "digitalocean:index/getImagesImage:getImagesImage": {
            "properties": {
                "created": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "distribution": {
                    "type": "string",
                    "description": "The name of the distribution of the OS of the image.\n- `min_disk_size`: The minimum 'disk' required for the image.\n- `size_gigabytes`: The size of the image in GB.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorMessage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "description": "The id of the image (legacy parameter).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minDiskSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "private": {
                    "type": "boolean",
                    "description": "Is image a public image or not. Public images represent\nLinux distributions or One-Click Applications, while non-public images represent\nsnapshots and backups and are only available within your account.\n- `regions`: A set of the regions that the image is available in.\n- `tags`: A set of tags applied to the image\n- `created`: When the image was created\n- `status`: Current status of the image\n- `error_message`: Any applicable error message pertaining to the image\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeGigabytes": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "created",
                "description",
                "distribution",
                "errorMessage",
                "id",
                "image",
                "minDiskSize",
                "name",
                "private",
                "regions",
                "sizeGigabytes",
                "slug",
                "status",
                "tags",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getImagesSort:getImagesSort": {
            "properties": {
                "direction": {
                    "type": "string",
                    "description": "The sort direction. This may be either `asc` or `desc`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Sort the images by this key. This may be one of `distribution`, `error_message`, `id`,\n`image`, `min_disk_size`, `name`, `private`, `size_gigabytes`, `slug`, `status`, or `type`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "digitalocean:index/getKubernetesClusterKubeConfig:getKubernetesClusterKubeConfig": {
            "properties": {
                "clientCertificate": {
                    "type": "string",
                    "description": "The base64 encoded public certificate used by clients to access the cluster. Only available if token authentication is not supported on your cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientKey": {
                    "type": "string",
                    "description": "The base64 encoded private key used by clients to access the cluster. Only available if token authentication is not supported on your cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterCaCertificate": {
                    "type": "string",
                    "description": "The base64 encoded public certificate for the cluster's certificate authority.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The date and time when the credentials will expire and need to be regenerated.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "The URL of the API server on the Kubernetes master node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rawConfig": {
                    "type": "string",
                    "description": "The full contents of the Kubernetes cluster's kubeconfig file.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "description": "The DigitalOcean API access token used by clients to access the cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "clientCertificate",
                "clientKey",
                "clusterCaCertificate",
                "expiresAt",
                "host",
                "rawConfig",
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getKubernetesClusterMaintenancePolicy:getKubernetesClusterMaintenancePolicy": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "The day for the service window of the Kubernetes cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "The duration of the operation.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startTime": {
                    "type": "string",
                    "description": "The start time of the upgrade operation.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "day",
                "duration",
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getKubernetesClusterNodePool:getKubernetesClusterNodePool": {
            "properties": {
                "actualNodeCount": {
                    "type": "integer",
                    "description": "The actual number of nodes in the node pool, which is especially useful when auto-scaling is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoScale": {
                    "type": "boolean",
                    "description": "A boolean indicating whether auto-scaling is enabled on the node pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference the node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value pairs applied to nodes in the pool. The labels are exposed in the Kubernetes API as labels in the metadata of the corresponding [Node resources](https://kubernetes.io/docs/concepts/architecture/nodes/).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "If auto-scaling is enabled, this represents the maximum number of nodes that the node pool can be scaled up to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minNodes": {
                    "type": "integer",
                    "description": "If auto-scaling is enabled, this represents the minimum number of nodes that the node pool can be scaled down to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of Kubernetes cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeCount": {
                    "type": "integer",
                    "description": "The number of Droplet instances in the node pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getKubernetesClusterNodePoolNode:getKubernetesClusterNodePoolNode"
                    },
                    "description": "A list of nodes in the pool. Each node exports the following attributes:\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "string",
                    "description": "The slug identifier for the type of Droplet used as workers in the node pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tag names applied to the node pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/getKubernetesClusterNodePoolTaint:getKubernetesClusterNodePoolTaint"
                    },
                    "description": "A list of taints applied to all nodes in the pool. Each taint exports the following attributes:\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "actualNodeCount",
                "autoScale",
                "id",
                "labels",
                "maxNodes",
                "minNodes",
                "name",
                "nodeCount",
                "nodes",
                "size",
                "tags",
                "taints"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getKubernetesClusterNodePoolNode:getKubernetesClusterNodePoolNode": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time when the node was created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dropletId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference the node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of Kubernetes cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "A string indicating the current status of the individual node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time when the node was last updated.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "dropletId",
                "id",
                "name",
                "status",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getKubernetesClusterNodePoolTaint:getKubernetesClusterNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string",
                    "description": "How the node reacts to pods that it won't tolerate. Available effect values are: \"NoSchedule\", \"PreferNoSchedule\", \"NoExecute\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "An arbitrary string. The \"key\" and \"value\" fields of the \"taint\" object form a key-value pair.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "An arbitrary string. The \"key\" and \"value\" fields of the \"taint\" object form a key-value pair.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getLoadBalancerForwardingRule:getLoadBalancerForwardingRule": {
            "properties": {
                "certificateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificateName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entryPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entryProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsPassthrough": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "certificateId",
                "certificateName",
                "entryPort",
                "entryProtocol",
                "targetPort",
                "targetProtocol",
                "tlsPassthrough"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getLoadBalancerHealthcheck:getLoadBalancerHealthcheck": {
            "properties": {
                "checkIntervalSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthyThreshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseTimeoutSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unhealthyThreshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "checkIntervalSeconds",
                "healthyThreshold",
                "path",
                "port",
                "protocol",
                "responseTimeoutSeconds",
                "unhealthyThreshold"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getLoadBalancerStickySession:getLoadBalancerStickySession": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieTtlSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cookieName",
                "cookieTtlSeconds",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getProjectsFilter:getProjectsFilter": {
            "properties": {
                "all": {
                    "type": "boolean",
                    "description": "Set to `true` to require that a field match all of the `values` instead of just one or more of\nthem. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure\nthat all of the `values` are present in the list or set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Filter the projects by this key. This may be one of `name`,\n`purpose`, `description`, `environment`, or `is_default`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchBy": {
                    "type": "string",
                    "description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to\nmatch by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as\nsubstrings to find within the string field.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of values to match against the `key` field. Only retrieves projects\nwhere the `key` field takes on one or more of the values provided here.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "digitalocean:index/getProjectsProject:getProjectsProject": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time when the project was created, (ISO8601)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The description of the project\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environment": {
                    "type": "string",
                    "description": "The environment of the project's resources. The possible values are: `Development`, `Staging`, `Production`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the project\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isDefault": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the project\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ownerId": {
                    "type": "integer",
                    "description": "The ID of the project owner\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ownerUuid": {
                    "type": "string",
                    "description": "The unique universal identifier of the project owner\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "purpose": {
                    "type": "string",
                    "description": "The purpose of the project (Default: \"Web Application\")\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of uniform resource names (URNs) for the resources associated with the project\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time when the project was last updated, (ISO8601)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "environment",
                "id",
                "isDefault",
                "name",
                "ownerId",
                "ownerUuid",
                "purpose",
                "resources",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getProjectsSort:getProjectsSort": {
            "properties": {
                "direction": {
                    "type": "string",
                    "description": "The sort direction. This may be either `asc` or `desc`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Sort the projects by this key. This may be one of `name`,\n`purpose`, `description`, or `environment`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "digitalocean:index/getRecordsFilter:getRecordsFilter": {
            "properties": {
                "all": {
                    "type": "boolean",
                    "description": "Set to `true` to require that a field match all of the `values` instead of just one or more of\nthem. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure\nthat all of the `values` are present in the list or set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Filter the DNS records by this key. This may be one of `domain`, `flags`, `name`, `port`,\n`priority`, `tag`, `ttl`, `type`, `value`, or `weight`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchBy": {
                    "type": "string",
                    "description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to\nmatch by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as\nsubstrings to find within the string field.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of values to match against the `key` field. Only retrieves DNS records\nwhere the `key` field takes on one or more of the values provided here.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "digitalocean:index/getRecordsRecord:getRecordsRecord": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "The domain name to search for DNS records\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flags": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "domain",
                "flags",
                "id",
                "name",
                "port",
                "priority",
                "tag",
                "ttl",
                "type",
                "value",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getRecordsSort:getRecordsSort": {
            "properties": {
                "direction": {
                    "type": "string",
                    "description": "The sort direction. This may be either `asc` or `desc`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Sort the DNS records by this key. This may be one of `domain`, `flags`, `name`, `port`,\n`priority`, `tag`, `ttl`, `type`, `value`, or `weight`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "digitalocean:index/getRegionsFilter:getRegionsFilter": {
            "properties": {
                "all": {
                    "type": "boolean",
                    "description": "Set to `true` to require that a field match all of the `values` instead of just one or more of\nthem. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure\nthat all of the `values` are present in the list or set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Filter the regions by this key. This may be one of `slug`,\n`name`, `available`, `features`, or `sizes`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchBy": {
                    "type": "string",
                    "description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to\nmatch by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as\nsubstrings to find within the string field.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of values to match against the `key` field. Only retrieves regions\nwhere the `key` field takes on one or more of the values provided here.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "digitalocean:index/getRegionsRegion:getRegionsRegion": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "A boolean value that represents whether new Droplets can be created in this region.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of features available in this region.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the region.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of identifying slugs for the Droplet sizes available in this region.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used as a unique identifier for each region.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "available",
                "features",
                "name",
                "sizes",
                "slug"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getRegionsSort:getRegionsSort": {
            "properties": {
                "direction": {
                    "type": "string",
                    "description": "The sort direction. This may be either `asc` or `desc`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Sort the regions by this key. This may be one of `slug`,\n`name`, or `available`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "digitalocean:index/getSizesFilter:getSizesFilter": {
            "properties": {
                "all": {
                    "type": "boolean",
                    "description": "Set to `true` to require that a field match all of the `values` instead of just one or more of\nthem. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure\nthat all of the `values` are present in the list or set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Filter the sizes by this key. This may be one of `slug`,\n`regions`, `memory`, `vcpus`, `disk`, `transfer`, `price_monthly`,\n`price_hourly`, or `available`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchBy": {
                    "type": "string",
                    "description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to\nmatch by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as\nsubstrings to find within the string field.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only retrieves sizes which keys has value that matches\none of the values provided here.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "digitalocean:index/getSizesSize:getSizesSize": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This represents whether new Droplets can be created with this size.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disk": {
                    "type": "integer",
                    "description": "The amount of disk space set aside for Droplets of this size. The value is measured in gigabytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memory": {
                    "type": "integer",
                    "description": "The amount of RAM allocated to Droplets created of this size. The value is measured in megabytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceHourly": {
                    "type": "number",
                    "description": "The hourly cost of Droplets created in this size as measured hourly. The value is measured in US dollars.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceMonthly": {
                    "type": "number",
                    "description": "The monthly cost of Droplets created in this size if they are kept for an entire month. The value is measured in US dollars.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of region slugs where Droplets can be created in this size.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used to uniquely identify each size.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transfer": {
                    "type": "number",
                    "description": "The amount of transfer bandwidth that is available for Droplets created in this size. This only counts traffic on the public interface. The value is given in terabytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vcpus": {
                    "type": "integer",
                    "description": "The number of CPUs allocated to Droplets of this size.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "available",
                "disk",
                "memory",
                "priceHourly",
                "priceMonthly",
                "regions",
                "slug",
                "transfer",
                "vcpus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getSizesSort:getSizesSort": {
            "properties": {
                "direction": {
                    "type": "string",
                    "description": "The sort direction. This may be either `asc` or `desc`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Sort the sizes by this key. This may be one of `slug`,\n`memory`, `vcpus`, `disk`, `transfer`, `price_monthly`, or `price_hourly`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "digitalocean:index/getSpacesBucketsBucket:getSpacesBucketsBucket": {
            "properties": {
                "bucketDomainName": {
                    "type": "string",
                    "description": "The FQDN of the bucket (e.g. bucket-name.nyc3.digitaloceanspaces.com)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Spaces bucket\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The slug of the region where the bucket is stored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urn": {
                    "type": "string",
                    "description": "The uniform resource name of the bucket\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucketDomainName",
                "name",
                "region",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getSpacesBucketsFilter:getSpacesBucketsFilter": {
            "properties": {
                "all": {
                    "type": "boolean",
                    "description": "Set to `true` to require that a field match all of the `values` instead of just one or more of\nthem. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure\nthat all of the `values` are present in the list or set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Filter the images by this key. This may be one of `bucket_domain_name`, `name`, `region`, or `urn`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchBy": {
                    "type": "string",
                    "description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to\nmatch by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as\nsubstrings to find within the string field.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of values to match against the `key` field. Only retrieves Spaces buckets\nwhere the `key` field takes on one or more of the values provided here.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "digitalocean:index/getSpacesBucketsSort:getSpacesBucketsSort": {
            "properties": {
                "direction": {
                    "type": "string",
                    "description": "The sort direction. This may be either `asc` or `desc`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Sort the images by this key. This may be one of `bucket_domain_name`, `name`, `region`, or `urn`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "digitalocean:index/getSshKeysFilter:getSshKeysFilter": {
            "properties": {
                "all": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Filter the SSH Keys by this key. This may be one of `name`, `public_key`, or `fingerprint`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of values to match against the key field. Only retrieves SSH keys where the key field matches one or more of the values provided here.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "digitalocean:index/getSshKeysSort:getSshKeysSort": {
            "properties": {
                "direction": {
                    "type": "string",
                    "description": "The sort direction. This may be either `asc` or `desc`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Sort the SSH Keys by this key. This may be one of `name`, `public_key`, or `fingerprint`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "digitalocean:index/getSshKeysSshKey:getSshKeysSshKey": {
            "properties": {
                "fingerprint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the ssh key.\n* `name`: The name of the ssh key.\n* `public_key`: The public key of the ssh key.\n* `fingerprint`: The fingerprint of the public key of the ssh key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "fingerprint",
                "id",
                "name",
                "publicKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index/getTagsFilter:getTagsFilter": {
            "properties": {
                "all": {
                    "type": "boolean",
                    "description": "Set to `true` to require that a field match all of the `values` instead of just one or more of\nthem. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure\nthat all of the `values` are present in the list or set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Filter the tags by this key. This may be one of `name`, `total_resource_count`,  `droplets_count`, `images_count`, `volumes_count`, `volume_snapshots_count`, or `databases_count`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchBy": {
                    "type": "string",
                    "description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to\nmatch by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as\nsubstrings to find within the string field.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only retrieves tags which keys has value that matches\none of the values provided here.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "digitalocean:index/getTagsSort:getTagsSort": {
            "properties": {
                "direction": {
                    "type": "string",
                    "description": "The sort direction. This may be either `asc` or `desc`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Sort the tags by this key. This may be one of `name`, `total_resource_count`,  `droplets_count`, `images_count`, `volumes_count`, `volume_snapshots_count`, or `databases_count`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "digitalocean:index/getTagsTag:getTagsTag": {
            "properties": {
                "databasesCount": {
                    "type": "integer",
                    "description": "A count of the database clusters that the tag is applied to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dropletsCount": {
                    "type": "integer",
                    "description": "A count of the Droplets the tag is applied to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imagesCount": {
                    "type": "integer",
                    "description": "A count of the images that the tag is applied to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the tag.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "totalResourceCount": {
                    "type": "integer",
                    "description": "A count of the total number of resources that the tag is applied to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeSnapshotsCount": {
                    "type": "integer",
                    "description": "A count of the volume snapshots that the tag is applied to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumesCount": {
                    "type": "integer",
                    "description": "A count of the volumes that the tag is applied to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "databasesCount",
                "dropletsCount",
                "imagesCount",
                "name",
                "totalResourceCount",
                "volumeSnapshotsCount",
                "volumesCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "digitalocean:index:Algorithm": {
            "type": "string",
            "enum": [
                {
                    "name": "RoundRobin",
                    "value": "round_robin"
                },
                {
                    "name": "LeastConnections",
                    "value": "least_connections"
                }
            ]
        },
        "digitalocean:index:CertificateType": {
            "type": "string",
            "enum": [
                {
                    "name": "LetsEncrypt",
                    "value": "lets_encrypt"
                },
                {
                    "name": "Custom",
                    "value": "custom"
                }
            ]
        },
        "digitalocean:index:DatabaseSlug": {
            "type": "string",
            "enum": [
                {
                    "name": "DB_1VPCU1GB",
                    "value": "db-s-1vcpu-1gb"
                },
                {
                    "name": "DB_1VPCU2GB",
                    "value": "db-s-1vcpu-2gb"
                },
                {
                    "name": "DB_2VPCU4GB",
                    "value": "db-s-2vcpu-4gb"
                },
                {
                    "name": "DB_4VPCU8GB",
                    "value": "db-s-4vcpu-8gb"
                },
                {
                    "name": "DB_6VPCU16GB",
                    "value": "db-s-6vcpu-16gb"
                },
                {
                    "name": "DB_8VPCU32GB",
                    "value": "db-s-8vcpu-32gb"
                },
                {
                    "name": "DB_16VPCU64GB",
                    "value": "db-s-16vcpu-64gb"
                }
            ]
        },
        "digitalocean:index:DropletSlug": {
            "type": "string",
            "enum": [
                {
                    "name": "DropletS1VCPU1GB",
                    "value": "s-1vcpu-1gb"
                },
                {
                    "name": "DropletS1VCPU1GB-AMD",
                    "value": "s-1vcpu-1gb-amd"
                },
                {
                    "name": "DropletS1VCPU1GB-INTEL",
                    "value": "s-1vcpu-1gb-intel"
                },
                {
                    "name": "DropletS1VCPU2GB",
                    "value": "s-1vcpu-2gb"
                },
                {
                    "name": "DropletS1VCPU2GB-AMD",
                    "value": "s-1vcpu-2gb-amd"
                },
                {
                    "name": "DropletS1VCPU2GB-INTEL",
                    "value": "s-1vcpu-2gb-intel"
                },
                {
                    "name": "DropletS2VCPU2GB",
                    "value": "s-2vcpu-2gb"
                },
                {
                    "name": "DropletS2VCPU2GB-AMD",
                    "value": "s-2vcpu-2gb-amd"
                },
                {
                    "name": "DropletS2VCPU2GB-INTEL",
                    "value": "s-2vcpu-2gb-intel"
                },
                {
                    "name": "DropletS2VCPU4GB",
                    "value": "s-2vcpu-4gb"
                },
                {
                    "name": "DropletS2VCPU4GB-AMD",
                    "value": "s-2vcpu-4gb-amd"
                },
                {
                    "name": "DropletS2VCPU4GB-INTEL",
                    "value": "s-2vcpu-4gb-intel"
                },
                {
                    "name": "DropletS4VCPU8GB",
                    "value": "s-4vcpu-8gb"
                },
                {
                    "name": "DropletS4VCPU8GB-AMD",
                    "value": "s-4vcpu-8gb-amd"
                },
                {
                    "name": "DropletS4VCPU8GB-INTEL",
                    "value": "s-4vcpu-8gb-intel"
                },
                {
                    "name": "DropletS8VCPU16GB-AMD",
                    "value": "s-8vcpu-16gb-amd"
                },
                {
                    "name": "DropletS8VCPU16GB-INTEL",
                    "value": "s-8vcpu-16gb-intel"
                },
                {
                    "name": "DropletC2",
                    "value": "c-2"
                },
                {
                    "name": "DropletC22VCPU4GB",
                    "value": "c2-2vcpu-4gb"
                },
                {
                    "name": "DropletC22VCPU8GB",
                    "value": "c2-4vcpu-8gb"
                },
                {
                    "name": "DropletC28VCPU16GB",
                    "value": "c2-8vcpu-16gb"
                },
                {
                    "name": "DropletC216VCPU32GB",
                    "value": "c2-16vcpu-32gb"
                },
                {
                    "name": "DropletC232VCPU64GB",
                    "value": "c2-32vcpu-64gb"
                },
                {
                    "name": "DropletC4",
                    "value": "c-4"
                },
                {
                    "name": "DropletC8",
                    "value": "c-8"
                },
                {
                    "name": "DropletC16",
                    "value": "c-16"
                },
                {
                    "name": "DropletC32",
                    "value": "c-32"
                },
                {
                    "name": "DropletG2VCPU8GB",
                    "value": "g-2vcpu-8gb"
                },
                {
                    "name": "DropletG4VCPU16GB",
                    "value": "g-4vcpu-16gb"
                },
                {
                    "name": "DropletG8VCPU32GB",
                    "value": "g-8vcpu-32gb"
                },
                {
                    "name": "DropletG16VCPU64GB",
                    "value": "g-16vcpu-64gb"
                },
                {
                    "name": "DropletG32VCPU128GB",
                    "value": "g-32vcpu-128gb"
                },
                {
                    "name": "DropletG40VCPU160GB",
                    "value": "g-40vcpu-160gb"
                },
                {
                    "name": "DropletGD2VCPU8GB",
                    "value": "gd-2vcpu-8gb"
                },
                {
                    "name": "DropletGD4VCPU16GB",
                    "value": "gd-4vcpu-16gb"
                },
                {
                    "name": "DropletGD8VCPU32GB",
                    "value": "gd-8vcpu-32gb"
                },
                {
                    "name": "DropletGD16VCPU64GB",
                    "value": "gd-16vcpu-64gb"
                },
                {
                    "name": "DropletGD32VCPU128GB",
                    "value": "gd-32vcpu-128gb"
                },
                {
                    "name": "DropletGD40VCPU160GB",
                    "value": "gd-40vcpu-160gb"
                },
                {
                    "name": "DropletS8VCPU16GB",
                    "value": "s-8vcpu-16gb"
                },
                {
                    "name": "DropletM2VCPU16GB",
                    "value": "m-2vcpu-16gb"
                },
                {
                    "name": "DropletM4VCPU32GB",
                    "value": "m-4vcpu-32gb"
                },
                {
                    "name": "DropletM8VCPU64GB",
                    "value": "m-8vcpu-64gb"
                },
                {
                    "name": "DropletM16VCPU128GB",
                    "value": "m-16vcpu-128gb"
                },
                {
                    "name": "DropletM24VCPU192GB",
                    "value": "m-24vcpu-192gb"
                },
                {
                    "name": "DropletM32VCPU256GB",
                    "value": "m-32vcpu-256gb"
                },
                {
                    "name": "DropletM32VCPU16GB",
                    "value": "m3-2vcpu-16gb"
                },
                {
                    "name": "DropletM34VCPU32GB",
                    "value": "m3-4vcpu-32gb"
                },
                {
                    "name": "DropletM38VCPU64GB",
                    "value": "m3-8vcpu-64gb"
                },
                {
                    "name": "DropletM316VCPU128GB",
                    "value": "m3-16vcpu-128gb"
                },
                {
                    "name": "DropletM324VCPU192GB",
                    "value": "m3-24vcpu-192gb"
                },
                {
                    "name": "DropletM332VCPU256GB",
                    "value": "m3-32vcpu-256gb"
                },
                {
                    "name": "DropletM62VCPU16GB",
                    "value": "m6-2vcpu-16gb"
                },
                {
                    "name": "DropletM64VCPU32GB",
                    "value": "m6-4vcpu-32gb"
                },
                {
                    "name": "DropletM68VCPU64GB",
                    "value": "m6-8vcpu-64gb"
                },
                {
                    "name": "DropletM616VCPU128GB",
                    "value": "m6-16vcpu-128gb"
                },
                {
                    "name": "DropletM624VCPU192GB",
                    "value": "m6-24vcpu-192gb"
                },
                {
                    "name": "DropletM632VCPU256GB",
                    "value": "m6-32vcpu-256gb"
                },
                {
                    "name": "DropletSO2VCPU16GB",
                    "value": "so-2vcpu-16gb"
                },
                {
                    "name": "DropletSO4VCPU32GB",
                    "value": "so-4vcpu-32gb"
                },
                {
                    "name": "DropletSO8VCPU64GB",
                    "value": "so-8vcpu-64gb"
                },
                {
                    "name": "DropletSO16VCPU128GB",
                    "value": "so-16vcpu-128gb"
                },
                {
                    "name": "DropletSO24VCPU192GB",
                    "value": "so-24vcpu-192gb"
                },
                {
                    "name": "DropletSO32VCPU256GB",
                    "value": "so-32vcpu-256gb"
                },
                {
                    "name": "DropletSO152VCPU16GB",
                    "value": "so1_5-2vcpu-16gb"
                },
                {
                    "name": "DropletSO154VCPU32GB",
                    "value": "so1_5-4vcpu-32gb"
                },
                {
                    "name": "DropletSO158VCPU64GB",
                    "value": "so1_5-8vcpu-64gb"
                },
                {
                    "name": "DropletSO1516VCPU128GB",
                    "value": "so1_5-16vcpu-128gb"
                },
                {
                    "name": "DropletSO1524VCPU192GB",
                    "value": "so1_5-24vcpu-192gb"
                },
                {
                    "name": "DropletSO1532VCPU256GB",
                    "value": "so1_5-32vcpu-256gb"
                },
                {
                    "name": "Droplet512mb",
                    "value": "512mb"
                },
                {
                    "name": "Droplet1GB",
                    "value": "1gb"
                },
                {
                    "name": "Droplet2GB",
                    "value": "2gb"
                },
                {
                    "name": "Droplet4GB",
                    "value": "4gb"
                },
                {
                    "name": "Droplet8GB",
                    "value": "8gb"
                },
                {
                    "name": "Droplet16GB",
                    "value": "16gb"
                },
                {
                    "name": "Droplet32GB",
                    "value": "32gb"
                },
                {
                    "name": "Droplet48GB",
                    "value": "48gb"
                },
                {
                    "name": "Droplet64GB",
                    "value": "64gb"
                },
                {
                    "name": "DropletS1VCPU3GB",
                    "value": "s-1vcpu-3gb"
                },
                {
                    "name": "DropletS3VCPU1GB",
                    "value": "s-3vcpu-1gb"
                },
                {
                    "name": "DropletS6VCPU16GB",
                    "value": "s-6vcpu-16gb"
                },
                {
                    "name": "DropletS8VCPU32GB",
                    "value": "s-8vcpu-32gb"
                },
                {
                    "name": "DropletS12VCPU48GB",
                    "value": "s-12vcpu-48gb"
                },
                {
                    "name": "DropletS16VCPU64GB",
                    "value": "s-16vcpu-64gb"
                },
                {
                    "name": "DropletS20VCPU96GB",
                    "value": "s-20vcpu-96gb"
                },
                {
                    "name": "DropletS24VCPU128GB",
                    "value": "s-24vcpu-128gb"
                },
                {
                    "name": "DropletS32VCPU192GB",
                    "value": "s-32vcpu-192gb"
                }
            ]
        },
        "digitalocean:index:FileSystemType": {
            "type": "string",
            "enum": [
                {
                    "name": "EXT4",
                    "value": "ext4"
                },
                {
                    "name": "XFS",
                    "value": "xfs"
                }
            ]
        },
        "digitalocean:index:Protocol": {
            "type": "string",
            "enum": [
                {
                    "name": "TCP",
                    "value": "tcp"
                },
                {
                    "name": "UDP",
                    "value": "udp"
                },
                {
                    "name": "ICMP",
                    "value": "icmp"
                },
                {
                    "name": "HTTP",
                    "value": "http"
                },
                {
                    "name": "HTTPS",
                    "value": "https"
                }
            ]
        },
        "digitalocean:index:RecordType": {
            "type": "string",
            "enum": [
                {
                    "name": "A",
                    "value": "A"
                },
                {
                    "name": "AAAA",
                    "value": "AAAA"
                },
                {
                    "name": "CAA",
                    "value": "CAA"
                },
                {
                    "name": "CNAME",
                    "value": "CNAME"
                },
                {
                    "name": "MX",
                    "value": "MX"
                },
                {
                    "name": "NS",
                    "value": "NS"
                },
                {
                    "name": "TXT",
                    "value": "TXT"
                },
                {
                    "name": "SRV",
                    "value": "SRV"
                }
            ]
        },
        "digitalocean:index:Region": {
            "type": "string",
            "enum": [
                {
                    "name": "NYC1",
                    "value": "nyc1"
                },
                {
                    "name": "NYC2",
                    "value": "nyc2"
                },
                {
                    "name": "NYC3",
                    "value": "nyc3"
                },
                {
                    "name": "SGP1",
                    "value": "sgp1"
                },
                {
                    "name": "LON1",
                    "value": "lon1"
                },
                {
                    "name": "AMS2",
                    "value": "ams2"
                },
                {
                    "name": "AMS3",
                    "value": "ams3"
                },
                {
                    "name": "FRA1",
                    "value": "fra1"
                },
                {
                    "name": "TOR1",
                    "value": "tor1"
                },
                {
                    "name": "SFO1",
                    "value": "sfo1"
                },
                {
                    "name": "SFO2",
                    "value": "sfo2"
                },
                {
                    "name": "SFO3",
                    "value": "sfo3"
                },
                {
                    "name": "BLR1",
                    "value": "blr1"
                }
            ]
        }
    },
    "provider": {
        "description": "The provider type for the digitalocean package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiEndpoint": {
                "type": "string",
                "description": "The URL to use for the DigitalOcean API.\n"
            },
            "spacesAccessId": {
                "type": "string",
                "description": "The access key ID for Spaces API operations.\n"
            },
            "spacesEndpoint": {
                "type": "string",
                "description": "The URL to use for the DigitalOcean Spaces API.\n"
            },
            "spacesSecretKey": {
                "type": "string",
                "description": "The secret access key for Spaces API operations.\n"
            },
            "token": {
                "type": "string",
                "description": "The token key for API operations.\n"
            }
        },
        "inputProperties": {
            "apiEndpoint": {
                "type": "string",
                "description": "The URL to use for the DigitalOcean API.\n",
                "default": "https://api.digitalocean.com",
                "defaultInfo": {
                    "environment": [
                        "DIGITALOCEAN_API_URL"
                    ]
                }
            },
            "spacesAccessId": {
                "type": "string",
                "description": "The access key ID for Spaces API operations.\n"
            },
            "spacesEndpoint": {
                "type": "string",
                "description": "The URL to use for the DigitalOcean Spaces API.\n",
                "defaultInfo": {
                    "environment": [
                        "SPACES_ENDPOINT_URL"
                    ]
                }
            },
            "spacesSecretKey": {
                "type": "string",
                "description": "The secret access key for Spaces API operations.\n"
            },
            "token": {
                "type": "string",
                "description": "The token key for API operations.\n"
            }
        }
    },
    "resources": {
        "digitalocean:index/app:App": {
            "description": "Provides a DigitalOcean App resource.\n\n{{% examples %}}\n## Example Usage\n\nTo create an app, provide a [DigitalOcean app spec](https://www.digitalocean.com/docs/app-platform/references/app-specification-reference/) specifying the app's components.\n{{% example %}}\n### Basic Example\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst golang_sample = new digitalocean.App(\"golang-sample\", {\n    spec: {\n        name: \"golang-sample\",\n        region: \"ams\",\n        services: [{\n            environmentSlug: \"go\",\n            git: {\n                branch: \"main\",\n                repoCloneUrl: \"https://github.com/digitalocean/sample-golang.git\",\n            },\n            instanceCount: 1,\n            instanceSizeSlug: \"professional-xs\",\n            name: \"go-service\",\n        }],\n    },\n});\n```\n{{% /example %}}\n{{% example %}}\n### Static Site Example\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst static_ste_example = new digitalocean.App(\"static-ste-example\", {\n    spec: {\n        name: \"static-ste-example\",\n        region: \"ams\",\n        staticSites: [{\n            buildCommand: \"bundle exec jekyll build -d ./public\",\n            git: {\n                branch: \"main\",\n                repoCloneUrl: \"https://github.com/digitalocean/sample-jekyll.git\",\n            },\n            name: \"sample-jekyll\",\n            outputDir: \"/public\",\n        }],\n    },\n});\n```\n{{% /example %}}\n{{% example %}}\n### Multiple Components Example\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst mono_repo_example = new digitalocean.App(\"mono-repo-example\", {\n    spec: {\n        alerts: [{\n            rule: \"DEPLOYMENT_FAILED\",\n        }],\n        databases: [{\n            engine: \"PG\",\n            name: \"starter-db\",\n            production: false,\n        }],\n        domainNames: [{\n            name: \"foo.example.com\",\n        }],\n        name: \"mono-repo-example\",\n        region: \"ams\",\n        // Build a Go project in the api/ directory that listens on port 3000\n        // and serves it at https://foo.example.com/api\n        services: [{\n            alerts: [{\n                operator: \"GREATER_THAN\",\n                rule: \"CPU_UTILIZATION\",\n                value: 75,\n                window: \"TEN_MINUTES\",\n            }],\n            environmentSlug: \"go\",\n            github: {\n                branch: \"main\",\n                deployOnPush: true,\n                repo: \"username/repo\",\n            },\n            httpPort: 3000,\n            instanceCount: 2,\n            instanceSizeSlug: \"professional-xs\",\n            logDestinations: [{\n                name: \"MyLogs\",\n                papertrail: {\n                    endpoint: \"syslog+tls://example.com:12345\",\n                },\n            }],\n            name: \"api\",\n            routes: [{\n                path: \"/api\",\n            }],\n            runCommand: \"bin/api\",\n            sourceDir: \"api/\",\n        }],\n        // Builds a static site in the project's root directory\n        // and serves it at https://foo.example.com/\n        staticSites: [{\n            buildCommand: \"npm run build\",\n            github: {\n                branch: \"main\",\n                deployOnPush: true,\n                repo: \"username/repo\",\n            },\n            name: \"web\",\n            routes: [{\n                path: \"/\",\n            }],\n        }],\n    },\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn app can be imported using its `id`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/app:App myapp fb06ad00-351f-45c8-b5eb-13523c438661\n```\n\n ",
            "properties": {
                "activeDeploymentId": {
                    "type": "string",
                    "description": "The ID the app's currently active deployment.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of when the app was created.\n"
                },
                "defaultIngress": {
                    "type": "string",
                    "description": "The default URL to access the app.\n"
                },
                "liveUrl": {
                    "type": "string",
                    "description": "The live URL of the app.\n"
                },
                "spec": {
                    "$ref": "#/types/digitalocean:index/AppSpec:AppSpec",
                    "description": "A DigitalOcean App spec describing the app.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time of when the app was last updated.\n"
                }
            },
            "required": [
                "activeDeploymentId",
                "createdAt",
                "defaultIngress",
                "liveUrl",
                "updatedAt"
            ],
            "inputProperties": {
                "spec": {
                    "$ref": "#/types/digitalocean:index/AppSpec:AppSpec",
                    "description": "A DigitalOcean App spec describing the app.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering App resources.\n",
                "properties": {
                    "activeDeploymentId": {
                        "type": "string",
                        "description": "The ID the app's currently active deployment.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of when the app was created.\n"
                    },
                    "defaultIngress": {
                        "type": "string",
                        "description": "The default URL to access the app.\n"
                    },
                    "liveUrl": {
                        "type": "string",
                        "description": "The live URL of the app.\n"
                    },
                    "spec": {
                        "$ref": "#/types/digitalocean:index/AppSpec:AppSpec",
                        "description": "A DigitalOcean App spec describing the app.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of when the app was last updated.\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/cdn:Cdn": {
            "description": "Provides a DigitalOcean CDN Endpoint resource for use with Spaces.\n\n{{% examples %}}\n## Example Usage\n{{% /examples %}}\n\n## Import\n\nCDN Endpoints can be imported using the CDN `id`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/cdn:Cdn mycdn fb06ad00-351f-45c8-b5eb-13523c438661\n```\n\n ",
            "properties": {
                "certificateId": {
                    "type": "string",
                    "description": "**Deprecated** The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.\n",
                    "deprecationMessage": "Certificate IDs may change, for example when a Let's Encrypt certificate is auto-renewed. Please specify 'certificate_name' instead."
                },
                "certificateName": {
                    "type": "string",
                    "description": "The unique name of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date and time when the CDN Endpoint was created.\n"
                },
                "customDomain": {
                    "type": "string",
                    "description": "The fully qualified domain name (FQDN) of the custom subdomain used with the CDN Endpoint.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The fully qualified domain name (FQDN) from which the CDN-backed content is served.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The fully qualified domain name, (FQDN) for a Space.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The time to live for the CDN Endpoint, in seconds. Default is 3600 seconds.\n"
                }
            },
            "required": [
                "certificateId",
                "certificateName",
                "createdAt",
                "endpoint",
                "origin",
                "ttl"
            ],
            "inputProperties": {
                "certificateId": {
                    "type": "string",
                    "description": "**Deprecated** The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.\n",
                    "deprecationMessage": "Certificate IDs may change, for example when a Let's Encrypt certificate is auto-renewed. Please specify 'certificate_name' instead."
                },
                "certificateName": {
                    "type": "string",
                    "description": "The unique name of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.\n"
                },
                "customDomain": {
                    "type": "string",
                    "description": "The fully qualified domain name (FQDN) of the custom subdomain used with the CDN Endpoint.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The fully qualified domain name, (FQDN) for a Space.\n",
                    "willReplaceOnChanges": true
                },
                "ttl": {
                    "type": "integer",
                    "description": "The time to live for the CDN Endpoint, in seconds. Default is 3600 seconds.\n"
                }
            },
            "requiredInputs": [
                "origin"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cdn resources.\n",
                "properties": {
                    "certificateId": {
                        "type": "string",
                        "description": "**Deprecated** The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.\n",
                        "deprecationMessage": "Certificate IDs may change, for example when a Let's Encrypt certificate is auto-renewed. Please specify 'certificate_name' instead."
                    },
                    "certificateName": {
                        "type": "string",
                        "description": "The unique name of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time when the CDN Endpoint was created.\n"
                    },
                    "customDomain": {
                        "type": "string",
                        "description": "The fully qualified domain name (FQDN) of the custom subdomain used with the CDN Endpoint.\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "The fully qualified domain name (FQDN) from which the CDN-backed content is served.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The fully qualified domain name, (FQDN) for a Space.\n",
                        "willReplaceOnChanges": true
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The time to live for the CDN Endpoint, in seconds. Default is 3600 seconds.\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/certificate:Certificate": {
            "description": "Provides a DigitalOcean Certificate resource that allows you to manage\ncertificates for configuring TLS termination in Load Balancers.\nCertificates created with this resource can be referenced in your\nLoad Balancer configuration via their ID. The certificate can either\nbe a custom one provided by you or automatically generated one with\nLet's Encrypt.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### Let's Encrypt Certificate\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst cert = new digitalocean.Certificate(\"cert\", {\n    domains: [\"example.com\"],\n    type: \"lets_encrypt\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCertificates can be imported using the certificate `name`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/certificate:Certificate mycertificate cert-01\n```\n\n ",
            "properties": {
                "certificateChain": {
                    "type": "string",
                    "description": "The full PEM-formatted trust chain\nbetween the certificate authority's certificate and your domain's TLS\ncertificate. Only valid when type is `custom`.\n"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fully qualified domain names (FQDNs) for\nwhich the certificate will be issued. The domains must be managed using\nDigitalOcean's DNS. Only valid when type is `lets_encrypt`.\n"
                },
                "leafCertificate": {
                    "type": "string",
                    "description": "The contents of a PEM-formatted public\nTLS certificate. Only valid when type is `custom`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the certificate for identification.\n"
                },
                "notAfter": {
                    "type": "string",
                    "description": "The expiration date of the certificate\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The contents of a PEM-formatted private-key\ncorresponding to the SSL certificate. Only valid when type is `custom`.\n"
                },
                "sha1Fingerprint": {
                    "type": "string",
                    "description": "The SHA-1 fingerprint of the certificate\n"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The type of certificate to provision. Can be either\n`custom` or `lets_encrypt`. Defaults to `custom`.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "The UUID of the certificate\n"
                }
            },
            "required": [
                "name",
                "notAfter",
                "sha1Fingerprint",
                "state",
                "uuid"
            ],
            "inputProperties": {
                "certificateChain": {
                    "type": "string",
                    "description": "The full PEM-formatted trust chain\nbetween the certificate authority's certificate and your domain's TLS\ncertificate. Only valid when type is `custom`.\n",
                    "willReplaceOnChanges": true
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fully qualified domain names (FQDNs) for\nwhich the certificate will be issued. The domains must be managed using\nDigitalOcean's DNS. Only valid when type is `lets_encrypt`.\n",
                    "willReplaceOnChanges": true
                },
                "leafCertificate": {
                    "type": "string",
                    "description": "The contents of a PEM-formatted public\nTLS certificate. Only valid when type is `custom`.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the certificate for identification.\n",
                    "willReplaceOnChanges": true
                },
                "privateKey": {
                    "type": "string",
                    "description": "The contents of a PEM-formatted private-key\ncorresponding to the SSL certificate. Only valid when type is `custom`.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:CertificateType"
                        }
                    ],
                    "description": "The type of certificate to provision. Can be either\n`custom` or `lets_encrypt`. Defaults to `custom`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Certificate resources.\n",
                "properties": {
                    "certificateChain": {
                        "type": "string",
                        "description": "The full PEM-formatted trust chain\nbetween the certificate authority's certificate and your domain's TLS\ncertificate. Only valid when type is `custom`.\n",
                        "willReplaceOnChanges": true
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of fully qualified domain names (FQDNs) for\nwhich the certificate will be issued. The domains must be managed using\nDigitalOcean's DNS. Only valid when type is `lets_encrypt`.\n",
                        "willReplaceOnChanges": true
                    },
                    "leafCertificate": {
                        "type": "string",
                        "description": "The contents of a PEM-formatted public\nTLS certificate. Only valid when type is `custom`.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the certificate for identification.\n",
                        "willReplaceOnChanges": true
                    },
                    "notAfter": {
                        "type": "string",
                        "description": "The expiration date of the certificate\n"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "The contents of a PEM-formatted private-key\ncorresponding to the SSL certificate. Only valid when type is `custom`.\n",
                        "willReplaceOnChanges": true
                    },
                    "sha1Fingerprint": {
                        "type": "string",
                        "description": "The SHA-1 fingerprint of the certificate\n"
                    },
                    "state": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:CertificateType"
                            }
                        ],
                        "description": "The type of certificate to provision. Can be either\n`custom` or `lets_encrypt`. Defaults to `custom`.\n",
                        "willReplaceOnChanges": true
                    },
                    "uuid": {
                        "type": "string",
                        "description": "The UUID of the certificate\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/containerRegistry:ContainerRegistry": {
            "description": "Provides a DigitalOcean Container Registry resource. A Container Registry is\na secure, private location to store your containers for rapid deployment.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\n// Create a new container registry\nconst foobar = new digitalocean.ContainerRegistry(\"foobar\", {\n    subscriptionTierSlug: \"starter\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nContainer Registries can be imported using the `name`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/containerRegistry:ContainerRegistry myregistry registryname\n```\n\n ",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time when the registry was created\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The URL endpoint of the container registry. Ex: `registry.digitalocean.com/my_registry`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the container_registry\n"
                },
                "region": {
                    "type": "string",
                    "description": "The slug identifier of for region where registry data will be stored. When not provided, a region will be selected automatically.\n"
                },
                "serverUrl": {
                    "type": "string",
                    "description": "The domain of the container registry. Ex: `registry.digitalocean.com`\n"
                },
                "storageUsageBytes": {
                    "type": "integer",
                    "description": "The amount of storage used in the registry in bytes.\n"
                },
                "subscriptionTierSlug": {
                    "type": "string",
                    "description": "The slug identifier for the subscription tier to use (`starter`, `basic`, or `professional`)\n"
                }
            },
            "required": [
                "createdAt",
                "endpoint",
                "name",
                "region",
                "serverUrl",
                "storageUsageBytes",
                "subscriptionTierSlug"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the container_registry\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The slug identifier of for region where registry data will be stored. When not provided, a region will be selected automatically.\n",
                    "willReplaceOnChanges": true
                },
                "subscriptionTierSlug": {
                    "type": "string",
                    "description": "The slug identifier for the subscription tier to use (`starter`, `basic`, or `professional`)\n"
                }
            },
            "requiredInputs": [
                "subscriptionTierSlug"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistry resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time when the registry was created\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "The URL endpoint of the container registry. Ex: `registry.digitalocean.com/my_registry`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the container_registry\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The slug identifier of for region where registry data will be stored. When not provided, a region will be selected automatically.\n",
                        "willReplaceOnChanges": true
                    },
                    "serverUrl": {
                        "type": "string",
                        "description": "The domain of the container registry. Ex: `registry.digitalocean.com`\n"
                    },
                    "storageUsageBytes": {
                        "type": "integer",
                        "description": "The amount of storage used in the registry in bytes.\n"
                    },
                    "subscriptionTierSlug": {
                        "type": "string",
                        "description": "The slug identifier for the subscription tier to use (`starter`, `basic`, or `professional`)\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/containerRegistryDockerCredentials:ContainerRegistryDockerCredentials": {
            "description": "Get Docker credentials for your DigitalOcean container registry.\n\nAn error is triggered if the provided container registry name does not exist.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### Basic Example\n\nGet the container registry:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst example = new digitalocean.ContainerRegistryDockerCredentials(\"example\", {\n    registryName: \"example\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "credentialExpirationTime": {
                    "type": "string"
                },
                "dockerCredentials": {
                    "type": "string"
                },
                "expirySeconds": {
                    "type": "integer",
                    "description": "The amount of time to pass before the Docker credentials expire in seconds. Defaults to 1576800000, or roughly 50 years. Must be greater than 0 and less than 1576800000.\n"
                },
                "registryName": {
                    "type": "string",
                    "description": "The name of the container registry.\n"
                },
                "write": {
                    "type": "boolean",
                    "description": "Allow for write access to the container registry. Defaults to false.\n"
                }
            },
            "required": [
                "credentialExpirationTime",
                "dockerCredentials",
                "registryName"
            ],
            "inputProperties": {
                "expirySeconds": {
                    "type": "integer",
                    "description": "The amount of time to pass before the Docker credentials expire in seconds. Defaults to 1576800000, or roughly 50 years. Must be greater than 0 and less than 1576800000.\n"
                },
                "registryName": {
                    "type": "string",
                    "description": "The name of the container registry.\n",
                    "willReplaceOnChanges": true
                },
                "write": {
                    "type": "boolean",
                    "description": "Allow for write access to the container registry. Defaults to false.\n"
                }
            },
            "requiredInputs": [
                "registryName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistryDockerCredentials resources.\n",
                "properties": {
                    "credentialExpirationTime": {
                        "type": "string"
                    },
                    "dockerCredentials": {
                        "type": "string"
                    },
                    "expirySeconds": {
                        "type": "integer",
                        "description": "The amount of time to pass before the Docker credentials expire in seconds. Defaults to 1576800000, or roughly 50 years. Must be greater than 0 and less than 1576800000.\n"
                    },
                    "registryName": {
                        "type": "string",
                        "description": "The name of the container registry.\n",
                        "willReplaceOnChanges": true
                    },
                    "write": {
                        "type": "boolean",
                        "description": "Allow for write access to the container registry. Defaults to false.\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/customImage:CustomImage": {
            "description": "Provides a resource which can be used to create a [custom image](https://www.digitalocean.com/docs/images/custom-images/)\nfrom a URL. The URL must point to an image in one of the following file formats:\n\n- Raw (.img) with an MBR or GPT partition table\n- qcow2\n- VHDX\n- VDI\n- VMDK\n\nThe image may be compressed using gzip or bzip2. See the DigitalOcean Custom\nImage documentation for [additional requirements](https://www.digitalocean.com/docs/images/custom-images/#image-requirements).\n",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "An optional description for the image.\n"
                },
                "distribution": {
                    "type": "string",
                    "description": "An optional distribution name for the image. Valid values are documented [here](https://docs.digitalocean.com/reference/api/api-reference/#operation/create_custom_image)\n"
                },
                "imageId": {
                    "type": "integer"
                },
                "minDiskSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the Custom Image.\n"
                },
                "public": {
                    "type": "boolean"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of regions. (Currently only one is supported).\n"
                },
                "sizeGigabytes": {
                    "type": "number"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of optional tags for the image.\n"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "description": "A URL from which the custom Linux virtual machine image may be retrieved.\n"
                }
            },
            "required": [
                "createdAt",
                "imageId",
                "minDiskSize",
                "name",
                "public",
                "regions",
                "sizeGigabytes",
                "slug",
                "status",
                "type",
                "url"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "An optional description for the image.\n"
                },
                "distribution": {
                    "type": "string",
                    "description": "An optional distribution name for the image. Valid values are documented [here](https://docs.digitalocean.com/reference/api/api-reference/#operation/create_custom_image)\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the Custom Image.\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of regions. (Currently only one is supported).\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of optional tags for the image.\n"
                },
                "url": {
                    "type": "string",
                    "description": "A URL from which the custom Linux virtual machine image may be retrieved.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "regions",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomImage resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description for the image.\n"
                    },
                    "distribution": {
                        "type": "string",
                        "description": "An optional distribution name for the image. Valid values are documented [here](https://docs.digitalocean.com/reference/api/api-reference/#operation/create_custom_image)\n"
                    },
                    "imageId": {
                        "type": "integer"
                    },
                    "minDiskSize": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "A name for the Custom Image.\n"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of regions. (Currently only one is supported).\n"
                    },
                    "sizeGigabytes": {
                        "type": "number"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of optional tags for the image.\n"
                    },
                    "type": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string",
                        "description": "A URL from which the custom Linux virtual machine image may be retrieved.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/databaseCluster:DatabaseCluster": {
            "description": "Provides a DigitalOcean database cluster resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### Create a new PostgreSQL database cluster\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst postgres_example = new digitalocean.DatabaseCluster(\"postgres-example\", {\n    engine: \"pg\",\n    nodeCount: 1,\n    region: \"nyc1\",\n    size: \"db-s-1vcpu-1gb\",\n    version: \"11\",\n});\n```\n{{% /example %}}\n{{% example %}}\n### Create a new MySQL database cluster\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst mysql_example = new digitalocean.DatabaseCluster(\"mysql-example\", {\n    engine: \"mysql\",\n    nodeCount: 1,\n    region: \"nyc1\",\n    size: \"db-s-1vcpu-1gb\",\n    version: \"8\",\n});\n```\n{{% /example %}}\n{{% example %}}\n### Create a new Redis database cluster\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst redis_example = new digitalocean.DatabaseCluster(\"redis-example\", {\n    engine: \"redis\",\n    nodeCount: 1,\n    region: \"nyc1\",\n    size: \"db-s-1vcpu-1gb\",\n    version: \"6\",\n});\n```\n{{% /example %}}\n{{% example %}}\n### Create a new MongoDB database cluster\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst mongodb_example = new digitalocean.DatabaseCluster(\"mongodb-example\", {\n    engine: \"mongodb\",\n    nodeCount: 1,\n    region: \"nyc3\",\n    size: \"db-s-1vcpu-1gb\",\n    version: \"4\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nDatabase clusters can be imported using the `id` returned from DigitalOcean, e.g.\n\n```sh\n $ pulumi import digitalocean:index/databaseCluster:DatabaseCluster mycluster 245bcfd0-7f31-4ce6-a2bc-475a116cca97\n```\n\n ",
            "properties": {
                "clusterUrn": {
                    "type": "string",
                    "description": "The uniform resource name of the database cluster.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Name of the cluster's default database.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "Database engine used by the cluster (ex. `pg` for PostreSQL, `mysql` for MySQL, `redis` for Redis, or `mongodb` for MongoDB).\n"
                },
                "evictionPolicy": {
                    "type": "string",
                    "description": "A string specifying the eviction policy for a Redis cluster. Valid values are: `noeviction`, `allkeys_lru`, `allkeys_random`, `volatile_lru`, `volatile_random`, or `volatile_ttl`.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Database cluster's hostname.\n"
                },
                "maintenanceWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/DatabaseClusterMaintenanceWindow:DatabaseClusterMaintenanceWindow"
                    },
                    "description": "Defines when the automatic maintenance should be performed for the database cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the database cluster.\n"
                },
                "nodeCount": {
                    "type": "integer",
                    "description": "Number of nodes that will be included in the cluster.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the cluster's default user.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Network port that the database cluster is listening on.\n"
                },
                "privateHost": {
                    "type": "string",
                    "description": "Same as `host`, but only accessible from resources within the account and in the same region.\n"
                },
                "privateNetworkUuid": {
                    "type": "string",
                    "description": "The ID of the VPC where the database cluster will be located.\n"
                },
                "privateUri": {
                    "type": "string",
                    "description": "Same as `uri`, but only accessible from resources within the account and in the same region.\n"
                },
                "region": {
                    "type": "string",
                    "description": "DigitalOcean region where the cluster will reside.\n"
                },
                "size": {
                    "type": "string",
                    "description": "Database Droplet size associated with the cluster (ex. `db-s-1vcpu-1gb`). See here for a [list of valid size slugs](https://docs.digitalocean.com/reference/api/api-reference/#tag/Databases).\n"
                },
                "sqlMode": {
                    "type": "string",
                    "description": "A comma separated string specifying the  SQL modes for a MySQL cluster.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tag names to be applied to the database cluster.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The full URI for connecting to the database cluster.\n"
                },
                "user": {
                    "type": "string",
                    "description": "Username for the cluster's default user.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Engine version used by the cluster (ex. `11` for PostgreSQL 11).\n"
                }
            },
            "required": [
                "database",
                "engine",
                "host",
                "name",
                "nodeCount",
                "password",
                "port",
                "privateHost",
                "privateNetworkUuid",
                "privateUri",
                "region",
                "size",
                "uri",
                "clusterUrn",
                "user"
            ],
            "inputProperties": {
                "engine": {
                    "type": "string",
                    "description": "Database engine used by the cluster (ex. `pg` for PostreSQL, `mysql` for MySQL, `redis` for Redis, or `mongodb` for MongoDB).\n",
                    "willReplaceOnChanges": true
                },
                "evictionPolicy": {
                    "type": "string",
                    "description": "A string specifying the eviction policy for a Redis cluster. Valid values are: `noeviction`, `allkeys_lru`, `allkeys_random`, `volatile_lru`, `volatile_random`, or `volatile_ttl`.\n"
                },
                "maintenanceWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/DatabaseClusterMaintenanceWindow:DatabaseClusterMaintenanceWindow"
                    },
                    "description": "Defines when the automatic maintenance should be performed for the database cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the database cluster.\n",
                    "willReplaceOnChanges": true
                },
                "nodeCount": {
                    "type": "integer",
                    "description": "Number of nodes that will be included in the cluster.\n"
                },
                "privateNetworkUuid": {
                    "type": "string",
                    "description": "The ID of the VPC where the database cluster will be located.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:Region"
                        }
                    ],
                    "description": "DigitalOcean region where the cluster will reside.\n"
                },
                "size": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:DatabaseSlug"
                        }
                    ],
                    "description": "Database Droplet size associated with the cluster (ex. `db-s-1vcpu-1gb`). See here for a [list of valid size slugs](https://docs.digitalocean.com/reference/api/api-reference/#tag/Databases).\n"
                },
                "sqlMode": {
                    "type": "string",
                    "description": "A comma separated string specifying the  SQL modes for a MySQL cluster.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tag names to be applied to the database cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Engine version used by the cluster (ex. `11` for PostgreSQL 11).\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "engine",
                "nodeCount",
                "region",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseCluster resources.\n",
                "properties": {
                    "clusterUrn": {
                        "type": "string",
                        "description": "The uniform resource name of the database cluster.\n"
                    },
                    "database": {
                        "type": "string",
                        "description": "Name of the cluster's default database.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "Database engine used by the cluster (ex. `pg` for PostreSQL, `mysql` for MySQL, `redis` for Redis, or `mongodb` for MongoDB).\n",
                        "willReplaceOnChanges": true
                    },
                    "evictionPolicy": {
                        "type": "string",
                        "description": "A string specifying the eviction policy for a Redis cluster. Valid values are: `noeviction`, `allkeys_lru`, `allkeys_random`, `volatile_lru`, `volatile_random`, or `volatile_ttl`.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "Database cluster's hostname.\n"
                    },
                    "maintenanceWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/DatabaseClusterMaintenanceWindow:DatabaseClusterMaintenanceWindow"
                        },
                        "description": "Defines when the automatic maintenance should be performed for the database cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the database cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "nodeCount": {
                        "type": "integer",
                        "description": "Number of nodes that will be included in the cluster.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the cluster's default user.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Network port that the database cluster is listening on.\n"
                    },
                    "privateHost": {
                        "type": "string",
                        "description": "Same as `host`, but only accessible from resources within the account and in the same region.\n"
                    },
                    "privateNetworkUuid": {
                        "type": "string",
                        "description": "The ID of the VPC where the database cluster will be located.\n",
                        "willReplaceOnChanges": true
                    },
                    "privateUri": {
                        "type": "string",
                        "description": "Same as `uri`, but only accessible from resources within the account and in the same region.\n"
                    },
                    "region": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:Region"
                            }
                        ],
                        "description": "DigitalOcean region where the cluster will reside.\n"
                    },
                    "size": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:DatabaseSlug"
                            }
                        ],
                        "description": "Database Droplet size associated with the cluster (ex. `db-s-1vcpu-1gb`). See here for a [list of valid size slugs](https://docs.digitalocean.com/reference/api/api-reference/#tag/Databases).\n"
                    },
                    "sqlMode": {
                        "type": "string",
                        "description": "A comma separated string specifying the  SQL modes for a MySQL cluster.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tag names to be applied to the database cluster.\n"
                    },
                    "uri": {
                        "type": "string",
                        "description": "The full URI for connecting to the database cluster.\n"
                    },
                    "user": {
                        "type": "string",
                        "description": "Username for the cluster's default user.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Engine version used by the cluster (ex. `11` for PostgreSQL 11).\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/databaseConnectionPool:DatabaseConnectionPool": {
            "description": "Provides a DigitalOcean database connection pool resource.\n\n{{% examples %}}\n## Example Usage\n{{% /examples %}}\n\n## Import\n\nDatabase connection pools can be imported using the `id` of the source database cluster and the `name` of the connection pool joined with a comma. For example\n\n```sh\n $ pulumi import digitalocean:index/databaseConnectionPool:DatabaseConnectionPool pool-01 245bcfd0-7f31-4ce6-a2bc-475a116cca97,pool-01\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the source database cluster. Note: This must be a PostgreSQL cluster.\n"
                },
                "dbName": {
                    "type": "string",
                    "description": "The database for use with the connection pool.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The hostname used to connect to the database connection pool.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The PGBouncer transaction mode for the connection pool. The allowed values are session, transaction, and statement.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the database connection pool.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the connection pool's user.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Network port that the database connection pool is listening on.\n"
                },
                "privateHost": {
                    "type": "string",
                    "description": "Same as `host`, but only accessible from resources within the account and in the same region.\n"
                },
                "privateUri": {
                    "type": "string",
                    "description": "Same as `uri`, but only accessible from resources within the account and in the same region.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The desired size of the PGBouncer connection pool.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The full URI for connecting to the database connection pool.\n"
                },
                "user": {
                    "type": "string",
                    "description": "The name of the database user for use with the connection pool.\n"
                }
            },
            "required": [
                "clusterId",
                "dbName",
                "host",
                "mode",
                "name",
                "password",
                "port",
                "privateHost",
                "privateUri",
                "size",
                "uri",
                "user"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the source database cluster. Note: This must be a PostgreSQL cluster.\n",
                    "willReplaceOnChanges": true
                },
                "dbName": {
                    "type": "string",
                    "description": "The database for use with the connection pool.\n",
                    "willReplaceOnChanges": true
                },
                "mode": {
                    "type": "string",
                    "description": "The PGBouncer transaction mode for the connection pool. The allowed values are session, transaction, and statement.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name for the database connection pool.\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "description": "The desired size of the PGBouncer connection pool.\n",
                    "willReplaceOnChanges": true
                },
                "user": {
                    "type": "string",
                    "description": "The name of the database user for use with the connection pool.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "dbName",
                "mode",
                "size",
                "user"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseConnectionPool resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the source database cluster. Note: This must be a PostgreSQL cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "dbName": {
                        "type": "string",
                        "description": "The database for use with the connection pool.\n",
                        "willReplaceOnChanges": true
                    },
                    "host": {
                        "type": "string",
                        "description": "The hostname used to connect to the database connection pool.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "The PGBouncer transaction mode for the connection pool. The allowed values are session, transaction, and statement.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name for the database connection pool.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the connection pool's user.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Network port that the database connection pool is listening on.\n"
                    },
                    "privateHost": {
                        "type": "string",
                        "description": "Same as `host`, but only accessible from resources within the account and in the same region.\n"
                    },
                    "privateUri": {
                        "type": "string",
                        "description": "Same as `uri`, but only accessible from resources within the account and in the same region.\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The desired size of the PGBouncer connection pool.\n",
                        "willReplaceOnChanges": true
                    },
                    "uri": {
                        "type": "string",
                        "description": "The full URI for connecting to the database connection pool.\n"
                    },
                    "user": {
                        "type": "string",
                        "description": "The name of the database user for use with the connection pool.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/databaseDb:DatabaseDb": {
            "description": "Provides a DigitalOcean database resource. When creating a new database cluster, a default database with name `defaultdb` will be created. Then, this resource can be used to provide additional database inside the cluster.\n\n{{% examples %}}\n## Example Usage\n{{% /examples %}}\n\n## Import\n\nDatabase can be imported using the `id` of the source database cluster and the `name` of the database joined with a comma. For example\n\n```sh\n $ pulumi import digitalocean:index/databaseDb:DatabaseDb database-example 245bcfd0-7f31-4ce6-a2bc-475a116cca97,foobar\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the original source database cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the database.\n"
                }
            },
            "required": [
                "clusterId",
                "name"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the original source database cluster.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name for the database.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseDb resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the original source database cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name for the database.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/databaseFirewall:DatabaseFirewall": {
            "description": "Provides a DigitalOcean database firewall resource allowing you to restrict\nconnections to your database to trusted sources. You may limit connections to\nspecific Droplets, Kubernetes clusters, or IP addresses.\n\n{{% examples %}}\n## Example Usage\n{{% /examples %}}\n\n## Import\n\nDatabase firewalls can be imported using the `id` of the target database cluster For example\n\n```sh\n $ pulumi import digitalocean:index/databaseFirewall:DatabaseFirewall example-fw 5f55c6cd-863b-4907-99b8-7e09b0275d54\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the target database cluster.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/DatabaseFirewallRule:DatabaseFirewallRule"
                    },
                    "description": "A rule specifying a resource allowed to access the database cluster. The following arguments must be specified:\n"
                }
            },
            "required": [
                "clusterId",
                "rules"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the target database cluster.\n",
                    "willReplaceOnChanges": true
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/DatabaseFirewallRule:DatabaseFirewallRule"
                    },
                    "description": "A rule specifying a resource allowed to access the database cluster. The following arguments must be specified:\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "rules"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseFirewall resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the target database cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/DatabaseFirewallRule:DatabaseFirewallRule"
                        },
                        "description": "A rule specifying a resource allowed to access the database cluster. The following arguments must be specified:\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/databaseReplica:DatabaseReplica": {
            "description": "Provides a DigitalOcean database replica resource.\n\n{{% examples %}}\n## Example Usage\n{{% /examples %}}\n\n## Import\n\nDatabase replicas can be imported using the `id` of the source database cluster and the `name` of the replica joined with a comma. For example\n\n```sh\n $ pulumi import digitalocean:index/databaseReplica:DatabaseReplica read-replica 245bcfd0-7f31-4ce6-a2bc-475a116cca97,read-replica\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the original source database cluster.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Name of the replica's default database.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Database replica's hostname.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the database replica.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the replica's default user.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Network port that the database replica is listening on.\n"
                },
                "privateHost": {
                    "type": "string",
                    "description": "Same as `host`, but only accessible from resources within the account and in the same region.\n"
                },
                "privateNetworkUuid": {
                    "type": "string",
                    "description": "The ID of the VPC where the database replica will be located.\n"
                },
                "privateUri": {
                    "type": "string",
                    "description": "Same as `uri`, but only accessible from resources within the account and in the same region.\n"
                },
                "region": {
                    "type": "string",
                    "description": "DigitalOcean region where the replica will reside.\n"
                },
                "size": {
                    "type": "string",
                    "description": "Database Droplet size associated with the replica (ex. `db-s-1vcpu-1gb`).\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tag names to be applied to the database replica.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The full URI for connecting to the database replica.\n"
                },
                "user": {
                    "type": "string",
                    "description": "Username for the replica's default user.\n"
                }
            },
            "required": [
                "clusterId",
                "database",
                "host",
                "name",
                "password",
                "port",
                "privateHost",
                "privateNetworkUuid",
                "privateUri",
                "uri",
                "user"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the original source database cluster.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name for the database replica.\n",
                    "willReplaceOnChanges": true
                },
                "privateNetworkUuid": {
                    "type": "string",
                    "description": "The ID of the VPC where the database replica will be located.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:Region"
                        }
                    ],
                    "description": "DigitalOcean region where the replica will reside.\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:DatabaseSlug"
                        }
                    ],
                    "description": "Database Droplet size associated with the replica (ex. `db-s-1vcpu-1gb`).\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tag names to be applied to the database replica.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseReplica resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the original source database cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "database": {
                        "type": "string",
                        "description": "Name of the replica's default database.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "Database replica's hostname.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name for the database replica.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the replica's default user.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Network port that the database replica is listening on.\n"
                    },
                    "privateHost": {
                        "type": "string",
                        "description": "Same as `host`, but only accessible from resources within the account and in the same region.\n"
                    },
                    "privateNetworkUuid": {
                        "type": "string",
                        "description": "The ID of the VPC where the database replica will be located.\n",
                        "willReplaceOnChanges": true
                    },
                    "privateUri": {
                        "type": "string",
                        "description": "Same as `uri`, but only accessible from resources within the account and in the same region.\n"
                    },
                    "region": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:Region"
                            }
                        ],
                        "description": "DigitalOcean region where the replica will reside.\n",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:DatabaseSlug"
                            }
                        ],
                        "description": "Database Droplet size associated with the replica (ex. `db-s-1vcpu-1gb`).\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tag names to be applied to the database replica.\n",
                        "willReplaceOnChanges": true
                    },
                    "uri": {
                        "type": "string",
                        "description": "The full URI for connecting to the database replica.\n"
                    },
                    "user": {
                        "type": "string",
                        "description": "Username for the replica's default user.\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/databaseUser:DatabaseUser": {
            "description": "Provides a DigitalOcean database user resource. When creating a new database cluster, a default admin user with name `doadmin` will be created. Then, this resource can be used to provide additional normal users inside the cluster.\n\n\u003e **NOTE:** Any new users created will always have `normal` role, only the default user that comes with database cluster creation has `primary` role. Additional permissions must be managed manually.\n\n{{% examples %}}\n## Example Usage\n{{% /examples %}}\n\n## Import\n\nDatabase user can be imported using the `id` of the source database cluster and the `name` of the user joined with a comma. For example\n\n```sh\n $ pulumi import digitalocean:index/databaseUser:DatabaseUser user-example 245bcfd0-7f31-4ce6-a2bc-475a116cca97,foobar\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the original source database cluster.\n"
                },
                "mysqlAuthPlugin": {
                    "type": "string",
                    "description": "The authentication method to use for connections to the MySQL user account. The valid values are `mysql_native_password` or `caching_sha2_password` (this is the default).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the database user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the database user.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Role for the database user. The value will be either \"primary\" or \"normal\".\n"
                }
            },
            "required": [
                "clusterId",
                "name",
                "password",
                "role"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the original source database cluster.\n",
                    "willReplaceOnChanges": true
                },
                "mysqlAuthPlugin": {
                    "type": "string",
                    "description": "The authentication method to use for connections to the MySQL user account. The valid values are `mysql_native_password` or `caching_sha2_password` (this is the default).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the database user.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the original source database cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "mysqlAuthPlugin": {
                        "type": "string",
                        "description": "The authentication method to use for connections to the MySQL user account. The valid values are `mysql_native_password` or `caching_sha2_password` (this is the default).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name for the database user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the database user.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "Role for the database user. The value will be either \"primary\" or \"normal\".\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/dnsRecord:DnsRecord": {
            "description": "Provides a DigitalOcean DNS record resource.\n\n\n## Import\n\nRecords can be imported using the domain name and record `id` when joined with a comma. See the following example\n\n```sh\n $ pulumi import digitalocean:index/dnsRecord:DnsRecord example_record example.com,12345678\n```\n\n ",
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "The domain to add the record to.\n"
                },
                "flags": {
                    "type": "integer",
                    "description": "The flags of the record. Only valid when type is `CAA`. Must be between 0 and 255.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "The FQDN of the record\n"
                },
                "name": {
                    "type": "string",
                    "description": "The hostname of the record. Use `@` for records on domain's name itself.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the record. Only valid when type is `SRV`.  Must be between 1 and 65535.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the record. Only valid when type is `MX` or `SRV`. Must be between 0 and 65535.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "The tag of the record. Only valid when type is `CAA`. Must be one of `issue`, `issuewild`, or `iodef`.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The time to live for the record, in seconds. Must be at least 0. Defaults to 1800.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of record. Must be one of `A`, `AAAA`, `CAA`, `CNAME`, `MX`, `NS`, `TXT`, or `SRV`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the record.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight of the record. Only valid when type is `SRV`.  Must be between 0 and 65535.\n"
                }
            },
            "required": [
                "domain",
                "fqdn",
                "name",
                "ttl",
                "type",
                "value"
            ],
            "inputProperties": {
                "domain": {
                    "type": "string",
                    "description": "The domain to add the record to.\n",
                    "willReplaceOnChanges": true
                },
                "flags": {
                    "type": "integer",
                    "description": "The flags of the record. Only valid when type is `CAA`. Must be between 0 and 255.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The hostname of the record. Use `@` for records on domain's name itself.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the record. Only valid when type is `SRV`.  Must be between 1 and 65535.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the record. Only valid when type is `MX` or `SRV`. Must be between 0 and 65535.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "The tag of the record. Only valid when type is `CAA`. Must be one of `issue`, `issuewild`, or `iodef`.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The time to live for the record, in seconds. Must be at least 0. Defaults to 1800.\n"
                },
                "type": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:RecordType"
                        }
                    ],
                    "description": "The type of record. Must be one of `A`, `AAAA`, `CAA`, `CNAME`, `MX`, `NS`, `TXT`, or `SRV`.\n",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "description": "The value of the record.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight of the record. Only valid when type is `SRV`.  Must be between 0 and 65535.\n"
                }
            },
            "requiredInputs": [
                "domain",
                "type",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsRecord resources.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "The domain to add the record to.\n",
                        "willReplaceOnChanges": true
                    },
                    "flags": {
                        "type": "integer",
                        "description": "The flags of the record. Only valid when type is `CAA`. Must be between 0 and 255.\n"
                    },
                    "fqdn": {
                        "type": "string",
                        "description": "The FQDN of the record\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The hostname of the record. Use `@` for records on domain's name itself.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port of the record. Only valid when type is `SRV`.  Must be between 1 and 65535.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "The priority of the record. Only valid when type is `MX` or `SRV`. Must be between 0 and 65535.\n"
                    },
                    "tag": {
                        "type": "string",
                        "description": "The tag of the record. Only valid when type is `CAA`. Must be one of `issue`, `issuewild`, or `iodef`.\n"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The time to live for the record, in seconds. Must be at least 0. Defaults to 1800.\n"
                    },
                    "type": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:RecordType"
                            }
                        ],
                        "description": "The type of record. Must be one of `A`, `AAAA`, `CAA`, `CNAME`, `MX`, `NS`, `TXT`, or `SRV`.\n",
                        "willReplaceOnChanges": true
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the record.\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "The weight of the record. Only valid when type is `SRV`.  Must be between 0 and 65535.\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/domain:Domain": {
            "description": "Provides a DigitalOcean domain resource.\n\n\n## Import\n\nDomains can be imported using the `domain name`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/domain:Domain mydomain mytestdomain.com\n```\n\n ",
            "properties": {
                "domainUrn": {
                    "type": "string",
                    "description": "The uniform resource name of the domain\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP address of the domain. If specified, this IP\nis used to created an initial A record for the domain.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the domain\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL value of the domain\n"
                }
            },
            "required": [
                "name",
                "ttl",
                "domainUrn"
            ],
            "inputProperties": {
                "ipAddress": {
                    "type": "string",
                    "description": "The IP address of the domain. If specified, this IP\nis used to created an initial A record for the domain.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the domain\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Domain resources.\n",
                "properties": {
                    "domainUrn": {
                        "type": "string",
                        "description": "The uniform resource name of the domain\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The IP address of the domain. If specified, this IP\nis used to created an initial A record for the domain.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the domain\n",
                        "willReplaceOnChanges": true
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The TTL value of the domain\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/droplet:Droplet": {
            "description": "Provides a DigitalOcean Droplet resource. This can be used to create,\nmodify, and delete Droplets.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\n// Create a new Web Droplet in the nyc2 region\nconst web = new digitalocean.Droplet(\"web\", {\n    image: \"ubuntu-18-04-x64\",\n    region: \"nyc2\",\n    size: \"s-1vcpu-1gb\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nDroplets can be imported using the Droplet `id`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/droplet:Droplet mydroplet 100823\n```\n\n ",
            "properties": {
                "backups": {
                    "type": "boolean",
                    "description": "Boolean controlling if backups are made. Defaults to\nfalse.\n"
                },
                "createdAt": {
                    "type": "string"
                },
                "disk": {
                    "type": "integer",
                    "description": "The size of the instance's disk in GB\n"
                },
                "dropletAgent": {
                    "type": "boolean",
                    "description": "A boolean indicating whether to install the\nDigitalOcean agent used for providing access to the Droplet web console in\nthe control panel. By default, the agent is installed on new Droplets but\ninstallation errors (i.e. OS not supported) are ignored. To prevent it from\nbeing installed, set to `false`. To make installation errors fatal, explicitly\nset it to `true`.\n"
                },
                "dropletUrn": {
                    "type": "string",
                    "description": "The uniform resource name of the Droplet\n* `name`- The name of the Droplet\n"
                },
                "gracefulShutdown": {
                    "type": "boolean",
                    "description": "A boolean indicating whether the droplet\nshould be gracefully shut down before it is deleted.\n"
                },
                "image": {
                    "type": "string",
                    "description": "The Droplet image ID or slug.\n"
                },
                "ipv4Address": {
                    "type": "string",
                    "description": "The IPv4 address\n"
                },
                "ipv4AddressPrivate": {
                    "type": "string",
                    "description": "The private networking IPv4 address\n"
                },
                "ipv6": {
                    "type": "boolean",
                    "description": "Boolean controlling if IPv6 is enabled. Defaults to false.\n"
                },
                "ipv6Address": {
                    "type": "string",
                    "description": "The IPv6 address\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "Is the Droplet locked\n"
                },
                "memory": {
                    "type": "integer"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Boolean controlling whether monitoring agent is installed.\nDefaults to false. If set to `true`, you can configure monitor alert policies\n[monitor alert resource](https://www.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/monitor_alert)\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Droplet name.\n"
                },
                "priceHourly": {
                    "type": "number",
                    "description": "Droplet hourly price\n"
                },
                "priceMonthly": {
                    "type": "number",
                    "description": "Droplet monthly price\n"
                },
                "privateNetworking": {
                    "type": "boolean",
                    "description": "**Deprecated** Boolean controlling if private networking\nis enabled. This parameter has been deprecated. Use `vpc_uuid` instead to specify a VPC network for the Droplet. If no `vpc_uuid` is provided, the Droplet will be placed in your account's default VPC for the region.\n",
                    "deprecationMessage": "This parameter has been deprecated. Use `vpc_uuid` instead to specify a VPC network for the Droplet. If no `vpc_uuid` is provided, the Droplet will be placed in your account's default VPC for the region."
                },
                "region": {
                    "type": "string",
                    "description": "The region to start in.\n"
                },
                "resizeDisk": {
                    "type": "boolean",
                    "description": "Boolean controlling whether to increase the disk\nsize when resizing a Droplet. It defaults to `true`. When set to `false`,\nonly the Droplet's RAM and CPU will be resized. **Increasing a Droplet's disk\nsize is a permanent change**. Increasing only RAM and CPU is reversible.\n"
                },
                "size": {
                    "type": "string",
                    "description": "The unique slug that indentifies the type of Droplet. You can find a list of available slugs on [DigitalOcean API documentation](https://docs.digitalocean.com/reference/api/api-reference/#tag/Sizes).\n"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of SSH key IDs or fingerprints to enable in\nthe format `[12345, 123456]`. To retrieve this info, use the\n[DigitalOcean API](https://docs.digitalocean.com/reference/api/api-reference/#tag/SSH-Keys)\nor CLI (`doctl compute ssh-key list`). Once a Droplet is created keys can not\nbe added or removed via this provider. Modifying this field will prompt you\nto destroy and recreate the Droplet.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Droplet\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the tags to be applied to this Droplet.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "A string of the desired User Data for the Droplet.\n"
                },
                "vcpus": {
                    "type": "integer",
                    "description": "The number of the instance's virtual CPUs\n"
                },
                "volumeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the IDs of each block storage volume to be attached to the Droplet.\n"
                },
                "vpcUuid": {
                    "type": "string",
                    "description": "The ID of the VPC where the Droplet will be located.\n"
                }
            },
            "required": [
                "createdAt",
                "disk",
                "image",
                "ipv4Address",
                "ipv4AddressPrivate",
                "ipv6Address",
                "locked",
                "memory",
                "name",
                "priceHourly",
                "priceMonthly",
                "privateNetworking",
                "region",
                "size",
                "status",
                "dropletUrn",
                "vcpus",
                "volumeIds",
                "vpcUuid"
            ],
            "inputProperties": {
                "backups": {
                    "type": "boolean",
                    "description": "Boolean controlling if backups are made. Defaults to\nfalse.\n"
                },
                "dropletAgent": {
                    "type": "boolean",
                    "description": "A boolean indicating whether to install the\nDigitalOcean agent used for providing access to the Droplet web console in\nthe control panel. By default, the agent is installed on new Droplets but\ninstallation errors (i.e. OS not supported) are ignored. To prevent it from\nbeing installed, set to `false`. To make installation errors fatal, explicitly\nset it to `true`.\n",
                    "willReplaceOnChanges": true
                },
                "gracefulShutdown": {
                    "type": "boolean",
                    "description": "A boolean indicating whether the droplet\nshould be gracefully shut down before it is deleted.\n"
                },
                "image": {
                    "type": "string",
                    "description": "The Droplet image ID or slug.\n",
                    "willReplaceOnChanges": true
                },
                "ipv6": {
                    "type": "boolean",
                    "description": "Boolean controlling if IPv6 is enabled. Defaults to false.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Boolean controlling whether monitoring agent is installed.\nDefaults to false. If set to `true`, you can configure monitor alert policies\n[monitor alert resource](https://www.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/monitor_alert)\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The Droplet name.\n"
                },
                "privateNetworking": {
                    "type": "boolean",
                    "description": "**Deprecated** Boolean controlling if private networking\nis enabled. This parameter has been deprecated. Use `vpc_uuid` instead to specify a VPC network for the Droplet. If no `vpc_uuid` is provided, the Droplet will be placed in your account's default VPC for the region.\n",
                    "deprecationMessage": "This parameter has been deprecated. Use `vpc_uuid` instead to specify a VPC network for the Droplet. If no `vpc_uuid` is provided, the Droplet will be placed in your account's default VPC for the region."
                },
                "region": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:Region"
                        }
                    ],
                    "description": "The region to start in.\n",
                    "willReplaceOnChanges": true
                },
                "resizeDisk": {
                    "type": "boolean",
                    "description": "Boolean controlling whether to increase the disk\nsize when resizing a Droplet. It defaults to `true`. When set to `false`,\nonly the Droplet's RAM and CPU will be resized. **Increasing a Droplet's disk\nsize is a permanent change**. Increasing only RAM and CPU is reversible.\n"
                },
                "size": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:DropletSlug"
                        }
                    ],
                    "description": "The unique slug that indentifies the type of Droplet. You can find a list of available slugs on [DigitalOcean API documentation](https://docs.digitalocean.com/reference/api/api-reference/#tag/Sizes).\n"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of SSH key IDs or fingerprints to enable in\nthe format `[12345, 123456]`. To retrieve this info, use the\n[DigitalOcean API](https://docs.digitalocean.com/reference/api/api-reference/#tag/SSH-Keys)\nor CLI (`doctl compute ssh-key list`). Once a Droplet is created keys can not\nbe added or removed via this provider. Modifying this field will prompt you\nto destroy and recreate the Droplet.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the tags to be applied to this Droplet.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "A string of the desired User Data for the Droplet.\n",
                    "willReplaceOnChanges": true
                },
                "volumeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the IDs of each block storage volume to be attached to the Droplet.\n"
                },
                "vpcUuid": {
                    "type": "string",
                    "description": "The ID of the VPC where the Droplet will be located.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "image",
                "region",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Droplet resources.\n",
                "properties": {
                    "backups": {
                        "type": "boolean",
                        "description": "Boolean controlling if backups are made. Defaults to\nfalse.\n"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "disk": {
                        "type": "integer",
                        "description": "The size of the instance's disk in GB\n"
                    },
                    "dropletAgent": {
                        "type": "boolean",
                        "description": "A boolean indicating whether to install the\nDigitalOcean agent used for providing access to the Droplet web console in\nthe control panel. By default, the agent is installed on new Droplets but\ninstallation errors (i.e. OS not supported) are ignored. To prevent it from\nbeing installed, set to `false`. To make installation errors fatal, explicitly\nset it to `true`.\n",
                        "willReplaceOnChanges": true
                    },
                    "dropletUrn": {
                        "type": "string",
                        "description": "The uniform resource name of the Droplet\n* `name`- The name of the Droplet\n"
                    },
                    "gracefulShutdown": {
                        "type": "boolean",
                        "description": "A boolean indicating whether the droplet\nshould be gracefully shut down before it is deleted.\n"
                    },
                    "image": {
                        "type": "string",
                        "description": "The Droplet image ID or slug.\n",
                        "willReplaceOnChanges": true
                    },
                    "ipv4Address": {
                        "type": "string",
                        "description": "The IPv4 address\n"
                    },
                    "ipv4AddressPrivate": {
                        "type": "string",
                        "description": "The private networking IPv4 address\n"
                    },
                    "ipv6": {
                        "type": "boolean",
                        "description": "Boolean controlling if IPv6 is enabled. Defaults to false.\n"
                    },
                    "ipv6Address": {
                        "type": "string",
                        "description": "The IPv6 address\n"
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "Is the Droplet locked\n"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Boolean controlling whether monitoring agent is installed.\nDefaults to false. If set to `true`, you can configure monitor alert policies\n[monitor alert resource](https://www.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/monitor_alert)\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The Droplet name.\n"
                    },
                    "priceHourly": {
                        "type": "number",
                        "description": "Droplet hourly price\n"
                    },
                    "priceMonthly": {
                        "type": "number",
                        "description": "Droplet monthly price\n"
                    },
                    "privateNetworking": {
                        "type": "boolean",
                        "description": "**Deprecated** Boolean controlling if private networking\nis enabled. This parameter has been deprecated. Use `vpc_uuid` instead to specify a VPC network for the Droplet. If no `vpc_uuid` is provided, the Droplet will be placed in your account's default VPC for the region.\n",
                        "deprecationMessage": "This parameter has been deprecated. Use `vpc_uuid` instead to specify a VPC network for the Droplet. If no `vpc_uuid` is provided, the Droplet will be placed in your account's default VPC for the region."
                    },
                    "region": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:Region"
                            }
                        ],
                        "description": "The region to start in.\n",
                        "willReplaceOnChanges": true
                    },
                    "resizeDisk": {
                        "type": "boolean",
                        "description": "Boolean controlling whether to increase the disk\nsize when resizing a Droplet. It defaults to `true`. When set to `false`,\nonly the Droplet's RAM and CPU will be resized. **Increasing a Droplet's disk\nsize is a permanent change**. Increasing only RAM and CPU is reversible.\n"
                    },
                    "size": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:DropletSlug"
                            }
                        ],
                        "description": "The unique slug that indentifies the type of Droplet. You can find a list of available slugs on [DigitalOcean API documentation](https://docs.digitalocean.com/reference/api/api-reference/#tag/Sizes).\n"
                    },
                    "sshKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of SSH key IDs or fingerprints to enable in\nthe format `[12345, 123456]`. To retrieve this info, use the\n[DigitalOcean API](https://docs.digitalocean.com/reference/api/api-reference/#tag/SSH-Keys)\nor CLI (`doctl compute ssh-key list`). Once a Droplet is created keys can not\nbe added or removed via this provider. Modifying this field will prompt you\nto destroy and recreate the Droplet.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the Droplet\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the tags to be applied to this Droplet.\n"
                    },
                    "userData": {
                        "type": "string",
                        "description": "A string of the desired User Data for the Droplet.\n",
                        "willReplaceOnChanges": true
                    },
                    "vcpus": {
                        "type": "integer",
                        "description": "The number of the instance's virtual CPUs\n"
                    },
                    "volumeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the IDs of each block storage volume to be attached to the Droplet.\n"
                    },
                    "vpcUuid": {
                        "type": "string",
                        "description": "The ID of the VPC where the Droplet will be located.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/dropletSnapshot:DropletSnapshot": {
            "description": "Provides a resource which can be used to create a snapshot from an existing DigitalOcean Droplet.\n\n\n## Import\n\nDroplet Snapshots can be imported using the `snapshot id`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/dropletSnapshot:DropletSnapshot mysnapshot 123456\n```\n\n ",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time the Droplet snapshot was created.\n"
                },
                "dropletId": {
                    "type": "string",
                    "description": "The ID of the Droplet from which the snapshot will be taken.\n"
                },
                "minDiskSize": {
                    "type": "integer",
                    "description": "The minimum size in gigabytes required for a Droplet to be created based on this snapshot.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the Droplet snapshot.\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of DigitalOcean region \"slugs\" indicating where the droplet snapshot is available.\n"
                },
                "size": {
                    "type": "number",
                    "description": "The billable size of the Droplet snapshot in gigabytes.\n"
                }
            },
            "required": [
                "createdAt",
                "dropletId",
                "minDiskSize",
                "name",
                "regions",
                "size"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "The ID of the Droplet from which the snapshot will be taken.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "A name for the Droplet snapshot.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "dropletId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DropletSnapshot resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time the Droplet snapshot was created.\n"
                    },
                    "dropletId": {
                        "type": "string",
                        "description": "The ID of the Droplet from which the snapshot will be taken.\n",
                        "willReplaceOnChanges": true
                    },
                    "minDiskSize": {
                        "type": "integer",
                        "description": "The minimum size in gigabytes required for a Droplet to be created based on this snapshot.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A name for the Droplet snapshot.\n",
                        "willReplaceOnChanges": true
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of DigitalOcean region \"slugs\" indicating where the droplet snapshot is available.\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "The billable size of the Droplet snapshot in gigabytes.\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/firewall:Firewall": {
            "description": "Provides a DigitalOcean Cloud Firewall resource. This can be used to create,\nmodify, and delete Firewalls.\n\n\n## Import\n\nFirewalls can be imported using the firewall `id`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/firewall:Firewall myfirewall b8ecd2ab-2267-4a5e-8692-cbf1d32583e3\n```\n\n ",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format\nthat represents when the Firewall was created.\n"
                },
                "dropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of the IDs of the Droplets assigned\nto the Firewall.\n"
                },
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/FirewallInboundRule:FirewallInboundRule"
                    },
                    "description": "The inbound access rule block for the Firewall.\nThe `inbound_rule` block is documented below.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Firewall name\n"
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/FirewallOutboundRule:FirewallOutboundRule"
                    },
                    "description": "The outbound access rule block for the Firewall.\nThe `outbound_rule` block is documented below.\n"
                },
                "pendingChanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/FirewallPendingChange:FirewallPendingChange"
                    },
                    "description": "An list of object containing the fields, \"droplet_id\",\n\"removing\", and \"status\".  It is provided to detail exactly which Droplets\nare having their security policies updated.  When empty, all changes\nhave been successfully applied.\n"
                },
                "status": {
                    "type": "string",
                    "description": "A status string indicating the current state of the Firewall.\nThis can be \"waiting\", \"succeeded\", or \"failed\".\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of the Tags assigned to the Firewall.\n"
                }
            },
            "required": [
                "createdAt",
                "name",
                "pendingChanges",
                "status"
            ],
            "inputProperties": {
                "dropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of the IDs of the Droplets assigned\nto the Firewall.\n"
                },
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/FirewallInboundRule:FirewallInboundRule"
                    },
                    "description": "The inbound access rule block for the Firewall.\nThe `inbound_rule` block is documented below.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Firewall name\n"
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/FirewallOutboundRule:FirewallOutboundRule"
                    },
                    "description": "The outbound access rule block for the Firewall.\nThe `outbound_rule` block is documented below.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of the Tags assigned to the Firewall.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Firewall resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "A time value given in ISO8601 combined date and time format\nthat represents when the Firewall was created.\n"
                    },
                    "dropletIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of the IDs of the Droplets assigned\nto the Firewall.\n"
                    },
                    "inboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/FirewallInboundRule:FirewallInboundRule"
                        },
                        "description": "The inbound access rule block for the Firewall.\nThe `inbound_rule` block is documented below.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Firewall name\n"
                    },
                    "outboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/FirewallOutboundRule:FirewallOutboundRule"
                        },
                        "description": "The outbound access rule block for the Firewall.\nThe `outbound_rule` block is documented below.\n"
                    },
                    "pendingChanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/FirewallPendingChange:FirewallPendingChange"
                        },
                        "description": "An list of object containing the fields, \"droplet_id\",\n\"removing\", and \"status\".  It is provided to detail exactly which Droplets\nare having their security policies updated.  When empty, all changes\nhave been successfully applied.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "A status string indicating the current state of the Firewall.\nThis can be \"waiting\", \"succeeded\", or \"failed\".\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The names of the Tags assigned to the Firewall.\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/floatingIp:FloatingIp": {
            "description": "\u003e **Deprecated:** DigitalOcean Floating IPs have been renamed reserved IPs. This resource will be removed in a future release. Please use `digitalocean.ReservedIp` instead.\n\nProvides a DigitalOcean Floating IP to represent a publicly-accessible static IP addresses that can be mapped to one of your Droplets.\n\n\u003e **NOTE:** Floating IPs can be assigned to a Droplet either directly on the `digitalocean.FloatingIp` resource by setting a `droplet_id` or using the `digitalocean.FloatingIpAssignment` resource, but the two cannot be used together.\n\n\n## Import\n\nFloating IPs can be imported using the `ip`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/floatingIp:FloatingIp myip 192.168.0.1\n```\n\n ",
            "properties": {
                "dropletId": {
                    "type": "integer",
                    "description": "The ID of Droplet that the Floating IP will be assigned to.\n"
                },
                "floatingIpUrn": {
                    "type": "string",
                    "description": "The uniform resource name of the floating ip\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP Address of the resource\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region that the Floating IP is reserved to.\n"
                }
            },
            "required": [
                "ipAddress",
                "region",
                "floatingIpUrn"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "integer",
                    "description": "The ID of Droplet that the Floating IP will be assigned to.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP Address of the resource\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region that the Floating IP is reserved to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FloatingIp resources.\n",
                "properties": {
                    "dropletId": {
                        "type": "integer",
                        "description": "The ID of Droplet that the Floating IP will be assigned to.\n"
                    },
                    "floatingIpUrn": {
                        "type": "string",
                        "description": "The uniform resource name of the floating ip\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The IP Address of the resource\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region that the Floating IP is reserved to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/floatingIpAssignment:FloatingIpAssignment": {
            "description": "\u003e **Deprecated:** DigitalOcean Floating IPs have been renamed reserved IPs. This resource will be removed in a future release. Please use `digitalocean.ReservedIpAssignment` instead.\n\nProvides a resource for assigning an existing DigitalOcean Floating IP to a Droplet. This\nmakes it easy to provision floating IP addresses that are not tied to the lifecycle of your\nDroplet.\n\n\n## Import\n\nFloating IP assignments can be imported using the Floating IP itself and the `id` of the Droplet joined with a comma. For example\n\n```sh\n $ pulumi import digitalocean:index/floatingIpAssignment:FloatingIpAssignment foobar 192.0.2.1,123456\n```\n\n ",
            "properties": {
                "dropletId": {
                    "type": "integer",
                    "description": "The ID of Droplet that the Floating IP will be assigned to.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The Floating IP to assign to the Droplet.\n"
                }
            },
            "required": [
                "dropletId",
                "ipAddress"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "integer",
                    "description": "The ID of Droplet that the Floating IP will be assigned to.\n",
                    "willReplaceOnChanges": true
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The Floating IP to assign to the Droplet.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "dropletId",
                "ipAddress"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FloatingIpAssignment resources.\n",
                "properties": {
                    "dropletId": {
                        "type": "integer",
                        "description": "The ID of Droplet that the Floating IP will be assigned to.\n",
                        "willReplaceOnChanges": true
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The Floating IP to assign to the Droplet.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/kubernetesCluster:KubernetesCluster": {
            "description": "\n\n\n## Import\n\nBefore importing a Kubernetes cluster, the cluster's default node pool must be tagged with the `terraform:default-node-pool` tag. The provider will automatically add this tag if the cluster has a single node pool. Clusters with more than one node pool, however, will require that you manually add the `terraform:default-node-pool` tag to the node pool that you intend to be the default node pool. Then the Kubernetes cluster and all of its node pools can be imported using the cluster's `id`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/kubernetesCluster:KubernetesCluster mycluster 1b8b2100-0e9f-4e8f-ad78-9eb578c2a0af\n```\n\n ",
            "properties": {
                "autoUpgrade": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.\n"
                },
                "clusterSubnet": {
                    "type": "string",
                    "description": "The range of IP addresses in the overlay network of the Kubernetes cluster.\n"
                },
                "clusterUrn": {
                    "type": "string",
                    "description": "The uniform resource name (URN) for the Kubernetes cluster.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date and time when the node was created.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The base URL of the API server on the Kubernetes master node.\n"
                },
                "ha": {
                    "type": "boolean",
                    "description": "Enable/disable the high availability control plane for a cluster. High availability can only be set when creating a cluster. Any update will create a new cluster. Default: false\n"
                },
                "ipv4Address": {
                    "type": "string",
                    "description": "The public IPv4 address of the Kubernetes master node. This will not be set if high availability is configured on the cluster (v1.21+)\n"
                },
                "kubeConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/KubernetesClusterKubeConfig:KubernetesClusterKubeConfig"
                    }
                },
                "maintenancePolicy": {
                    "$ref": "#/types/digitalocean:index/KubernetesClusterMaintenancePolicy:KubernetesClusterMaintenancePolicy",
                    "description": "A block representing the cluster's maintenance window. Updates will be applied within this window. If not specified, a default maintenance window will be chosen. `auto_upgrade` must be set to `true` for this to have an effect.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the node pool.\n"
                },
                "nodePool": {
                    "$ref": "#/types/digitalocean:index/KubernetesClusterNodePool:KubernetesClusterNodePool",
                    "description": "A block representing the cluster's default node pool. Additional node pools may be added to the cluster using the `digitalocean.KubernetesNodePool` resource. The following arguments may be specified:\n"
                },
                "region": {
                    "type": "string",
                    "description": "The slug identifier for the region where the Kubernetes cluster will be created.\n"
                },
                "serviceSubnet": {
                    "type": "string",
                    "description": "The range of assignable IP addresses for services running in the Kubernetes cluster.\n"
                },
                "status": {
                    "type": "string",
                    "description": "A string indicating the current status of the individual node.\n"
                },
                "surgeUpgrade": {
                    "type": "boolean",
                    "description": "Enable/disable surge upgrades for a cluster. Default: false\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tag names to be applied to the Kubernetes cluster.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time when the node was last updated.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The slug identifier for the version of Kubernetes used for the cluster. Use [doctl](https://github.com/digitalocean/doctl) to find the available versions `doctl kubernetes options versions`. (**Note:** A cluster may only be upgraded to newer versions in-place. If the version is decreased, a new resource will be created.)\n"
                },
                "vpcUuid": {
                    "type": "string",
                    "description": "The ID of the VPC where the Kubernetes cluster will be located.\n"
                }
            },
            "required": [
                "clusterSubnet",
                "createdAt",
                "endpoint",
                "ipv4Address",
                "kubeConfigs",
                "maintenancePolicy",
                "name",
                "nodePool",
                "region",
                "serviceSubnet",
                "status",
                "updatedAt",
                "clusterUrn",
                "version",
                "vpcUuid"
            ],
            "inputProperties": {
                "autoUpgrade": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.\n"
                },
                "ha": {
                    "type": "boolean",
                    "description": "Enable/disable the high availability control plane for a cluster. High availability can only be set when creating a cluster. Any update will create a new cluster. Default: false\n",
                    "willReplaceOnChanges": true
                },
                "maintenancePolicy": {
                    "$ref": "#/types/digitalocean:index/KubernetesClusterMaintenancePolicy:KubernetesClusterMaintenancePolicy",
                    "description": "A block representing the cluster's maintenance window. Updates will be applied within this window. If not specified, a default maintenance window will be chosen. `auto_upgrade` must be set to `true` for this to have an effect.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the node pool.\n"
                },
                "nodePool": {
                    "$ref": "#/types/digitalocean:index/KubernetesClusterNodePool:KubernetesClusterNodePool",
                    "description": "A block representing the cluster's default node pool. Additional node pools may be added to the cluster using the `digitalocean.KubernetesNodePool` resource. The following arguments may be specified:\n"
                },
                "region": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:Region"
                        }
                    ],
                    "description": "The slug identifier for the region where the Kubernetes cluster will be created.\n",
                    "willReplaceOnChanges": true
                },
                "surgeUpgrade": {
                    "type": "boolean",
                    "description": "Enable/disable surge upgrades for a cluster. Default: false\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tag names to be applied to the Kubernetes cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The slug identifier for the version of Kubernetes used for the cluster. Use [doctl](https://github.com/digitalocean/doctl) to find the available versions `doctl kubernetes options versions`. (**Note:** A cluster may only be upgraded to newer versions in-place. If the version is decreased, a new resource will be created.)\n"
                },
                "vpcUuid": {
                    "type": "string",
                    "description": "The ID of the VPC where the Kubernetes cluster will be located.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "nodePool",
                "region",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubernetesCluster resources.\n",
                "properties": {
                    "autoUpgrade": {
                        "type": "boolean",
                        "description": "A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.\n"
                    },
                    "clusterSubnet": {
                        "type": "string",
                        "description": "The range of IP addresses in the overlay network of the Kubernetes cluster.\n"
                    },
                    "clusterUrn": {
                        "type": "string",
                        "description": "The uniform resource name (URN) for the Kubernetes cluster.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time when the node was created.\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "The base URL of the API server on the Kubernetes master node.\n"
                    },
                    "ha": {
                        "type": "boolean",
                        "description": "Enable/disable the high availability control plane for a cluster. High availability can only be set when creating a cluster. Any update will create a new cluster. Default: false\n",
                        "willReplaceOnChanges": true
                    },
                    "ipv4Address": {
                        "type": "string",
                        "description": "The public IPv4 address of the Kubernetes master node. This will not be set if high availability is configured on the cluster (v1.21+)\n"
                    },
                    "kubeConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/KubernetesClusterKubeConfig:KubernetesClusterKubeConfig"
                        }
                    },
                    "maintenancePolicy": {
                        "$ref": "#/types/digitalocean:index/KubernetesClusterMaintenancePolicy:KubernetesClusterMaintenancePolicy",
                        "description": "A block representing the cluster's maintenance window. Updates will be applied within this window. If not specified, a default maintenance window will be chosen. `auto_upgrade` must be set to `true` for this to have an effect.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A name for the node pool.\n"
                    },
                    "nodePool": {
                        "$ref": "#/types/digitalocean:index/KubernetesClusterNodePool:KubernetesClusterNodePool",
                        "description": "A block representing the cluster's default node pool. Additional node pools may be added to the cluster using the `digitalocean.KubernetesNodePool` resource. The following arguments may be specified:\n"
                    },
                    "region": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:Region"
                            }
                        ],
                        "description": "The slug identifier for the region where the Kubernetes cluster will be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceSubnet": {
                        "type": "string",
                        "description": "The range of assignable IP addresses for services running in the Kubernetes cluster.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "A string indicating the current status of the individual node.\n"
                    },
                    "surgeUpgrade": {
                        "type": "boolean",
                        "description": "Enable/disable surge upgrades for a cluster. Default: false\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tag names to be applied to the Kubernetes cluster.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time when the node was last updated.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The slug identifier for the version of Kubernetes used for the cluster. Use [doctl](https://github.com/digitalocean/doctl) to find the available versions `doctl kubernetes options versions`. (**Note:** A cluster may only be upgraded to newer versions in-place. If the version is decreased, a new resource will be created.)\n"
                    },
                    "vpcUuid": {
                        "type": "string",
                        "description": "The ID of the VPC where the Kubernetes cluster will be located.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/kubernetesNodePool:KubernetesNodePool": {
            "description": "Provides a DigitalOcean Kubernetes node pool resource. While the default node pool must be defined in the `digitalocean.KubernetesCluster` resource, this resource can be used to add additional ones to a cluster.\n\n{{% examples %}}\n## Example Usage\n{{% /examples %}}\n\n## Import\n\nIf you are importing an existing Kubernetes cluster, just import the cluster. Importing a cluster also imports all of its associated node pools. If you still need to import a single node pool, then import it by using its `id`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/kubernetesNodePool:KubernetesNodePool mynodepool 9d76f410-9284-4436-9633-4066852442c8\n```\n\n NoteIf the node pool has the `terraform:default-node-pool` tag, then it is a default node pool for an existing cluster. The provider will refuse to import the node pool in that case because the node pool is managed by the `digitalocean_kubernetes_cluster` resource and not by this `digitalocean_kubernetes_node_pool` resource. ",
            "properties": {
                "actualNodeCount": {
                    "type": "integer",
                    "description": "A computed field representing the actual number of nodes in the node pool, which is especially useful when auto-scaling is enabled.\n"
                },
                "autoScale": {
                    "type": "boolean",
                    "description": "Enable auto-scaling of the number of nodes in the node pool within the given min/max range.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the Kubernetes cluster to which the node pool is associated.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value pairs to apply to nodes in the pool. The labels are exposed in the Kubernetes API as labels in the metadata of the corresponding [Node resources](https://kubernetes.io/docs/concepts/architecture/nodes/).\n"
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "If auto-scaling is enabled, this represents the maximum number of nodes that the node pool can be scaled up to.\n"
                },
                "minNodes": {
                    "type": "integer",
                    "description": "If auto-scaling is enabled, this represents the minimum number of nodes that the node pool can be scaled down to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the node pool.\n"
                },
                "nodeCount": {
                    "type": "integer",
                    "description": "The number of Droplet instances in the node pool. If auto-scaling is enabled, this should only be set if the desired result is to explicitly reset the number of nodes to this value. If auto-scaling is enabled, and the node count is outside of the given min/max range, it will use the min nodes value.\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/KubernetesNodePoolNode:KubernetesNodePoolNode"
                    },
                    "description": "A list of nodes in the pool. Each node exports the following attributes:\n"
                },
                "size": {
                    "type": "string",
                    "description": "The slug identifier for the type of Droplet to be used as workers in the node pool.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tag names to be applied to the Kubernetes cluster.\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/KubernetesNodePoolTaint:KubernetesNodePoolTaint"
                    },
                    "description": "A list of taints applied to all nodes in the pool.\n"
                }
            },
            "required": [
                "actualNodeCount",
                "clusterId",
                "name",
                "nodes",
                "size"
            ],
            "inputProperties": {
                "autoScale": {
                    "type": "boolean",
                    "description": "Enable auto-scaling of the number of nodes in the node pool within the given min/max range.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the Kubernetes cluster to which the node pool is associated.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value pairs to apply to nodes in the pool. The labels are exposed in the Kubernetes API as labels in the metadata of the corresponding [Node resources](https://kubernetes.io/docs/concepts/architecture/nodes/).\n"
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "If auto-scaling is enabled, this represents the maximum number of nodes that the node pool can be scaled up to.\n"
                },
                "minNodes": {
                    "type": "integer",
                    "description": "If auto-scaling is enabled, this represents the minimum number of nodes that the node pool can be scaled down to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the node pool.\n"
                },
                "nodeCount": {
                    "type": "integer",
                    "description": "The number of Droplet instances in the node pool. If auto-scaling is enabled, this should only be set if the desired result is to explicitly reset the number of nodes to this value. If auto-scaling is enabled, and the node count is outside of the given min/max range, it will use the min nodes value.\n"
                },
                "size": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:DropletSlug"
                        }
                    ],
                    "description": "The slug identifier for the type of Droplet to be used as workers in the node pool.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tag names to be applied to the Kubernetes cluster.\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/KubernetesNodePoolTaint:KubernetesNodePoolTaint"
                    },
                    "description": "A list of taints applied to all nodes in the pool.\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubernetesNodePool resources.\n",
                "properties": {
                    "actualNodeCount": {
                        "type": "integer",
                        "description": "A computed field representing the actual number of nodes in the node pool, which is especially useful when auto-scaling is enabled.\n"
                    },
                    "autoScale": {
                        "type": "boolean",
                        "description": "Enable auto-scaling of the number of nodes in the node pool within the given min/max range.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the Kubernetes cluster to which the node pool is associated.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of key/value pairs to apply to nodes in the pool. The labels are exposed in the Kubernetes API as labels in the metadata of the corresponding [Node resources](https://kubernetes.io/docs/concepts/architecture/nodes/).\n"
                    },
                    "maxNodes": {
                        "type": "integer",
                        "description": "If auto-scaling is enabled, this represents the maximum number of nodes that the node pool can be scaled up to.\n"
                    },
                    "minNodes": {
                        "type": "integer",
                        "description": "If auto-scaling is enabled, this represents the minimum number of nodes that the node pool can be scaled down to.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A name for the node pool.\n"
                    },
                    "nodeCount": {
                        "type": "integer",
                        "description": "The number of Droplet instances in the node pool. If auto-scaling is enabled, this should only be set if the desired result is to explicitly reset the number of nodes to this value. If auto-scaling is enabled, and the node count is outside of the given min/max range, it will use the min nodes value.\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/KubernetesNodePoolNode:KubernetesNodePoolNode"
                        },
                        "description": "A list of nodes in the pool. Each node exports the following attributes:\n"
                    },
                    "size": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:DropletSlug"
                            }
                        ],
                        "description": "The slug identifier for the type of Droplet to be used as workers in the node pool.\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tag names to be applied to the Kubernetes cluster.\n"
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/KubernetesNodePoolTaint:KubernetesNodePoolTaint"
                        },
                        "description": "A list of taints applied to all nodes in the pool.\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/loadBalancer:LoadBalancer": {
            "description": "Provides a DigitalOcean Load Balancer resource. This can be used to create,\nmodify, and delete Load Balancers.\n\n\n## Import\n\nLoad Balancers can be imported using the `id`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/loadBalancer:LoadBalancer myloadbalancer 4de7ac8b-495b-4884-9a69-1050c6793cd6\n```\n\n ",
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "The load balancing algorithm used to determine\nwhich backend Droplet will be selected by a client. It must be either `round_robin`\nor `least_connections`. The default value is `round_robin`.\n"
                },
                "disableLetsEncryptDnsRecords": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether to disable automatic DNS record creation for Let's Encrypt certificates that are added to the load balancer. Default value is `false`.\n"
                },
                "dropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of the IDs of each droplet to be attached to the Load Balancer.\n"
                },
                "dropletTag": {
                    "type": "string",
                    "description": "The name of a Droplet tag corresponding to Droplets to be assigned to the Load Balancer.\n"
                },
                "enableBackendKeepalive": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether HTTP keepalive connections are maintained to target Droplets. Default value is `false`.\n"
                },
                "enableProxyProtocol": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether PROXY\nProtocol should be used to pass information from connecting client requests to\nthe backend service. Default value is `false`.\n"
                },
                "forwardingRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/LoadBalancerForwardingRule:LoadBalancerForwardingRule"
                    },
                    "description": "A list of `forwarding_rule` to be assigned to the\nLoad Balancer. The `forwarding_rule` block is documented below.\n"
                },
                "healthcheck": {
                    "$ref": "#/types/digitalocean:index/LoadBalancerHealthcheck:LoadBalancerHealthcheck",
                    "description": "A `healthcheck` block to be assigned to the\nLoad Balancer. The `healthcheck` block is documented below. Only 1 healthcheck is allowed.\n"
                },
                "ip": {
                    "type": "string"
                },
                "loadBalancerUrn": {
                    "type": "string",
                    "description": "The uniform resource name for the Load Balancer\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Load Balancer name\n"
                },
                "redirectHttpToHttps": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether\nHTTP requests to the Load Balancer on port 80 will be redirected to HTTPS on port 443.\nDefault value is `false`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region to start in\n"
                },
                "size": {
                    "type": "string",
                    "description": "The size of the Load Balancer. It must be either `lb-small`, `lb-medium`, or `lb-large`. Defaults to `lb-small`. Only one of `size` or `size_unit` may be provided.\n"
                },
                "sizeUnit": {
                    "type": "integer",
                    "description": "The size of the Load Balancer. It must be in the range (1, 100). Defaults to `1`. Only one of `size` or `size_unit` may be provided.\n"
                },
                "status": {
                    "type": "string"
                },
                "stickySessions": {
                    "$ref": "#/types/digitalocean:index/LoadBalancerStickySessions:LoadBalancerStickySessions",
                    "description": "A `sticky_sessions` block to be assigned to the\nLoad Balancer. The `sticky_sessions` block is documented below. Only 1 sticky_sessions block is allowed.\n"
                },
                "vpcUuid": {
                    "type": "string",
                    "description": "The ID of the VPC where the load balancer will be located.\n"
                }
            },
            "required": [
                "dropletIds",
                "forwardingRules",
                "healthcheck",
                "ip",
                "name",
                "region",
                "sizeUnit",
                "status",
                "stickySessions",
                "loadBalancerUrn",
                "vpcUuid"
            ],
            "inputProperties": {
                "algorithm": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:Algorithm"
                        }
                    ],
                    "description": "The load balancing algorithm used to determine\nwhich backend Droplet will be selected by a client. It must be either `round_robin`\nor `least_connections`. The default value is `round_robin`.\n"
                },
                "disableLetsEncryptDnsRecords": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether to disable automatic DNS record creation for Let's Encrypt certificates that are added to the load balancer. Default value is `false`.\n"
                },
                "dropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of the IDs of each droplet to be attached to the Load Balancer.\n"
                },
                "dropletTag": {
                    "type": "string",
                    "description": "The name of a Droplet tag corresponding to Droplets to be assigned to the Load Balancer.\n"
                },
                "enableBackendKeepalive": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether HTTP keepalive connections are maintained to target Droplets. Default value is `false`.\n"
                },
                "enableProxyProtocol": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether PROXY\nProtocol should be used to pass information from connecting client requests to\nthe backend service. Default value is `false`.\n"
                },
                "forwardingRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/LoadBalancerForwardingRule:LoadBalancerForwardingRule"
                    },
                    "description": "A list of `forwarding_rule` to be assigned to the\nLoad Balancer. The `forwarding_rule` block is documented below.\n"
                },
                "healthcheck": {
                    "$ref": "#/types/digitalocean:index/LoadBalancerHealthcheck:LoadBalancerHealthcheck",
                    "description": "A `healthcheck` block to be assigned to the\nLoad Balancer. The `healthcheck` block is documented below. Only 1 healthcheck is allowed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Load Balancer name\n"
                },
                "redirectHttpToHttps": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether\nHTTP requests to the Load Balancer on port 80 will be redirected to HTTPS on port 443.\nDefault value is `false`.\n"
                },
                "region": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:Region"
                        }
                    ],
                    "description": "The region to start in\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "string",
                    "description": "The size of the Load Balancer. It must be either `lb-small`, `lb-medium`, or `lb-large`. Defaults to `lb-small`. Only one of `size` or `size_unit` may be provided.\n"
                },
                "sizeUnit": {
                    "type": "integer",
                    "description": "The size of the Load Balancer. It must be in the range (1, 100). Defaults to `1`. Only one of `size` or `size_unit` may be provided.\n"
                },
                "stickySessions": {
                    "$ref": "#/types/digitalocean:index/LoadBalancerStickySessions:LoadBalancerStickySessions",
                    "description": "A `sticky_sessions` block to be assigned to the\nLoad Balancer. The `sticky_sessions` block is documented below. Only 1 sticky_sessions block is allowed.\n"
                },
                "vpcUuid": {
                    "type": "string",
                    "description": "The ID of the VPC where the load balancer will be located.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "forwardingRules",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoadBalancer resources.\n",
                "properties": {
                    "algorithm": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:Algorithm"
                            }
                        ],
                        "description": "The load balancing algorithm used to determine\nwhich backend Droplet will be selected by a client. It must be either `round_robin`\nor `least_connections`. The default value is `round_robin`.\n"
                    },
                    "disableLetsEncryptDnsRecords": {
                        "type": "boolean",
                        "description": "A boolean value indicating whether to disable automatic DNS record creation for Let's Encrypt certificates that are added to the load balancer. Default value is `false`.\n"
                    },
                    "dropletIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of the IDs of each droplet to be attached to the Load Balancer.\n"
                    },
                    "dropletTag": {
                        "type": "string",
                        "description": "The name of a Droplet tag corresponding to Droplets to be assigned to the Load Balancer.\n"
                    },
                    "enableBackendKeepalive": {
                        "type": "boolean",
                        "description": "A boolean value indicating whether HTTP keepalive connections are maintained to target Droplets. Default value is `false`.\n"
                    },
                    "enableProxyProtocol": {
                        "type": "boolean",
                        "description": "A boolean value indicating whether PROXY\nProtocol should be used to pass information from connecting client requests to\nthe backend service. Default value is `false`.\n"
                    },
                    "forwardingRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/LoadBalancerForwardingRule:LoadBalancerForwardingRule"
                        },
                        "description": "A list of `forwarding_rule` to be assigned to the\nLoad Balancer. The `forwarding_rule` block is documented below.\n"
                    },
                    "healthcheck": {
                        "$ref": "#/types/digitalocean:index/LoadBalancerHealthcheck:LoadBalancerHealthcheck",
                        "description": "A `healthcheck` block to be assigned to the\nLoad Balancer. The `healthcheck` block is documented below. Only 1 healthcheck is allowed.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "loadBalancerUrn": {
                        "type": "string",
                        "description": "The uniform resource name for the Load Balancer\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Load Balancer name\n"
                    },
                    "redirectHttpToHttps": {
                        "type": "boolean",
                        "description": "A boolean value indicating whether\nHTTP requests to the Load Balancer on port 80 will be redirected to HTTPS on port 443.\nDefault value is `false`.\n"
                    },
                    "region": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:Region"
                            }
                        ],
                        "description": "The region to start in\n",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "string",
                        "description": "The size of the Load Balancer. It must be either `lb-small`, `lb-medium`, or `lb-large`. Defaults to `lb-small`. Only one of `size` or `size_unit` may be provided.\n"
                    },
                    "sizeUnit": {
                        "type": "integer",
                        "description": "The size of the Load Balancer. It must be in the range (1, 100). Defaults to `1`. Only one of `size` or `size_unit` may be provided.\n"
                    },
                    "status": {
                        "type": "string"
                    },
                    "stickySessions": {
                        "$ref": "#/types/digitalocean:index/LoadBalancerStickySessions:LoadBalancerStickySessions",
                        "description": "A `sticky_sessions` block to be assigned to the\nLoad Balancer. The `sticky_sessions` block is documented below. Only 1 sticky_sessions block is allowed.\n"
                    },
                    "vpcUuid": {
                        "type": "string",
                        "description": "The ID of the VPC where the load balancer will be located.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/monitorAlert:MonitorAlert": {
            "description": "Provides a [DigitalOcean Monitoring](https://docs.digitalocean.com/reference/api/api-reference/#tag/Monitoring)\nresource. Monitor alerts can be configured to alert about, e.g., disk or memory\nusage exceeding a certain threshold or traffic at a certain limit. Notifications\ncan be sent to either an email address or a Slack channel.\n\n\u003e **Note** Currently, the [DigitalOcean API](https://docs.digitalocean.com/reference/api/api-reference/#operation/create_alert_policy) only supports creating alerts for Droplets.\n\n\n## Import\n\nMonitor alerts can be imported using the monitor alert `uuid`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/monitorAlert:MonitorAlert cpu_alert b8ecd2ab-2267-4a5e-8692-cbf1d32583e3\n```\n\n ",
            "properties": {
                "alerts": {
                    "$ref": "#/types/digitalocean:index/MonitorAlertAlerts:MonitorAlertAlerts",
                    "description": "How to send notifications about the alerts. This is a list with one element, .\nNote that for Slack, the DigitalOcean app needs to have permissions for your workspace. You can\nread more in [Slack's documentation](https://slack.com/intl/en-dk/help/articles/222386767-Manage-app-installation-settings-for-your-workspace)\n"
                },
                "compare": {
                    "type": "string",
                    "description": "The comparison for `value`.\nThis may be either `GreaterThan` or `LessThan`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the alert.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The status of the alert.\n"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs for the resources to which the alert policy applies.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags. When an included tag is added to a resource, the alert policy will apply to it.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the alert.\nThis may be one of `v1/insights/droplet/load_1`, `v1/insights/droplet/load_5`, `v1/insights/droplet/load_15`,\n`v1/insights/droplet/memory_utilization_percent`, `v1/insights/droplet/disk_utilization_percent`,\n`v1/insights/droplet/cpu`, `v1/insights/droplet/disk_read`, `v1/insights/droplet/disk_write`,\n`v1/insights/droplet/public_outbound_bandwidth`, `v1/insights/droplet/public_inbound_bandwidth`,\n`v1/insights/droplet/private_outbound_bandwidth`, `v1/insights/droplet/private_inbound_bandwidth`,\n`v1/insights/lbaas/avg_cpu_utilization_percent`, `v1/insights/lbaas/connection_utilization_percent`,\n`v1/insights/lbaas/droplet_health`, or `v1/insights/lbaas/tls_connections_per_second_utilization_percent`.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "The uuid of the alert.\n"
                },
                "value": {
                    "type": "number",
                    "description": "The value to start alerting at, e.g., 90% or 85Mbps. This is a floating-point number.\nDigitalOcean will show the correct unit in the web panel.\n"
                },
                "window": {
                    "type": "string",
                    "description": "The time frame of the alert. Either `5m`, `10m`, `30m`, or `1h`.\n"
                }
            },
            "required": [
                "alerts",
                "compare",
                "description",
                "type",
                "uuid",
                "value",
                "window"
            ],
            "inputProperties": {
                "alerts": {
                    "$ref": "#/types/digitalocean:index/MonitorAlertAlerts:MonitorAlertAlerts",
                    "description": "How to send notifications about the alerts. This is a list with one element, .\nNote that for Slack, the DigitalOcean app needs to have permissions for your workspace. You can\nread more in [Slack's documentation](https://slack.com/intl/en-dk/help/articles/222386767-Manage-app-installation-settings-for-your-workspace)\n"
                },
                "compare": {
                    "type": "string",
                    "description": "The comparison for `value`.\nThis may be either `GreaterThan` or `LessThan`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the alert.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The status of the alert.\n"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs for the resources to which the alert policy applies.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags. When an included tag is added to a resource, the alert policy will apply to it.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the alert.\nThis may be one of `v1/insights/droplet/load_1`, `v1/insights/droplet/load_5`, `v1/insights/droplet/load_15`,\n`v1/insights/droplet/memory_utilization_percent`, `v1/insights/droplet/disk_utilization_percent`,\n`v1/insights/droplet/cpu`, `v1/insights/droplet/disk_read`, `v1/insights/droplet/disk_write`,\n`v1/insights/droplet/public_outbound_bandwidth`, `v1/insights/droplet/public_inbound_bandwidth`,\n`v1/insights/droplet/private_outbound_bandwidth`, `v1/insights/droplet/private_inbound_bandwidth`,\n`v1/insights/lbaas/avg_cpu_utilization_percent`, `v1/insights/lbaas/connection_utilization_percent`,\n`v1/insights/lbaas/droplet_health`, or `v1/insights/lbaas/tls_connections_per_second_utilization_percent`.\n"
                },
                "value": {
                    "type": "number",
                    "description": "The value to start alerting at, e.g., 90% or 85Mbps. This is a floating-point number.\nDigitalOcean will show the correct unit in the web panel.\n"
                },
                "window": {
                    "type": "string",
                    "description": "The time frame of the alert. Either `5m`, `10m`, `30m`, or `1h`.\n"
                }
            },
            "requiredInputs": [
                "alerts",
                "compare",
                "description",
                "type",
                "value",
                "window"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitorAlert resources.\n",
                "properties": {
                    "alerts": {
                        "$ref": "#/types/digitalocean:index/MonitorAlertAlerts:MonitorAlertAlerts",
                        "description": "How to send notifications about the alerts. This is a list with one element, .\nNote that for Slack, the DigitalOcean app needs to have permissions for your workspace. You can\nread more in [Slack's documentation](https://slack.com/intl/en-dk/help/articles/222386767-Manage-app-installation-settings-for-your-workspace)\n"
                    },
                    "compare": {
                        "type": "string",
                        "description": "The comparison for `value`.\nThis may be either `GreaterThan` or `LessThan`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the alert.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The status of the alert.\n"
                    },
                    "entities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of IDs for the resources to which the alert policy applies.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags. When an included tag is added to a resource, the alert policy will apply to it.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the alert.\nThis may be one of `v1/insights/droplet/load_1`, `v1/insights/droplet/load_5`, `v1/insights/droplet/load_15`,\n`v1/insights/droplet/memory_utilization_percent`, `v1/insights/droplet/disk_utilization_percent`,\n`v1/insights/droplet/cpu`, `v1/insights/droplet/disk_read`, `v1/insights/droplet/disk_write`,\n`v1/insights/droplet/public_outbound_bandwidth`, `v1/insights/droplet/public_inbound_bandwidth`,\n`v1/insights/droplet/private_outbound_bandwidth`, `v1/insights/droplet/private_inbound_bandwidth`,\n`v1/insights/lbaas/avg_cpu_utilization_percent`, `v1/insights/lbaas/connection_utilization_percent`,\n`v1/insights/lbaas/droplet_health`, or `v1/insights/lbaas/tls_connections_per_second_utilization_percent`.\n"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "The uuid of the alert.\n"
                    },
                    "value": {
                        "type": "number",
                        "description": "The value to start alerting at, e.g., 90% or 85Mbps. This is a floating-point number.\nDigitalOcean will show the correct unit in the web panel.\n"
                    },
                    "window": {
                        "type": "string",
                        "description": "The time frame of the alert. Either `5m`, `10m`, `30m`, or `1h`.\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/project:Project": {
            "description": "Provides a DigitalOcean Project resource.\n\nProjects allow you to organize your resources into groups that fit the way you work.\nYou can group resources (like Droplets, Spaces, Load Balancers, domains, and Floating IPs)\nin ways that align with the applications you host on DigitalOcean.\n\nThe following resource types can be associated with a project:\n\n* Database Clusters\n* Domains\n* Droplets\n* Floating IP\n* Kubernetes Cluster\n* Load Balancers\n* Spaces Bucket\n* Volume\n\n**Note:** A provider managed project cannot be set as a default project.\n\n\n## Import\n\nProjects can be imported using the `id` returned from DigitalOcean, e.g.\n\n```sh\n $ pulumi import digitalocean:index/project:Project myproject 245bcfd0-7f31-4ce6-a2bc-475a116cca97\n```\n\n ",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "the date and time when the project was created, (ISO8601)\n"
                },
                "description": {
                    "type": "string",
                    "description": "the description of the project\n"
                },
                "environment": {
                    "type": "string",
                    "description": "the environment of the project's resources. The possible values are: `Development`, `Staging`, `Production`)\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Project\n"
                },
                "ownerId": {
                    "type": "integer",
                    "description": "the id of the project owner.\n"
                },
                "ownerUuid": {
                    "type": "string",
                    "description": "the unique universal identifier of the project owner.\n"
                },
                "purpose": {
                    "type": "string",
                    "description": "the purpose of the project, (Default: \"Web Application\")\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "a list of uniform resource names (URNs) for the resources associated with the project\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "the date and time when the project was last updated, (ISO8601)\n"
                }
            },
            "required": [
                "createdAt",
                "isDefault",
                "name",
                "ownerId",
                "ownerUuid",
                "resources",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "the description of the project\n"
                },
                "environment": {
                    "type": "string",
                    "description": "the environment of the project's resources. The possible values are: `Development`, `Staging`, `Production`)\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Project\n"
                },
                "purpose": {
                    "type": "string",
                    "description": "the purpose of the project, (Default: \"Web Application\")\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "a list of uniform resource names (URNs) for the resources associated with the project\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "the date and time when the project was created, (ISO8601)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "the description of the project\n"
                    },
                    "environment": {
                        "type": "string",
                        "description": "the environment of the project's resources. The possible values are: `Development`, `Staging`, `Production`)\n"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Project\n"
                    },
                    "ownerId": {
                        "type": "integer",
                        "description": "the id of the project owner.\n"
                    },
                    "ownerUuid": {
                        "type": "string",
                        "description": "the unique universal identifier of the project owner.\n"
                    },
                    "purpose": {
                        "type": "string",
                        "description": "the purpose of the project, (Default: \"Web Application\")\n"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "a list of uniform resource names (URNs) for the resources associated with the project\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "the date and time when the project was last updated, (ISO8601)\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/projectResources:ProjectResources": {
            "description": "Assign resources to a DigitalOcean Project. This is useful if you need to assign resources\nmanaged via this provider to a DigitalOcean Project managed outside of the provider.\n\nThe following resource types can be associated with a project:\n\n* Database Clusters\n* Domains\n* Droplets\n* Floating IP\n* Kubernetes Cluster\n* Load Balancers\n* Spaces Bucket\n* Volume\n\n\n## Import\n\nImporting this resource is not supported. ",
            "properties": {
                "project": {
                    "type": "string",
                    "description": "the ID of the project\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "a list of uniform resource names (URNs) for the resources associated with the project\n"
                }
            },
            "required": [
                "project",
                "resources"
            ],
            "inputProperties": {
                "project": {
                    "type": "string",
                    "description": "the ID of the project\n",
                    "willReplaceOnChanges": true
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "a list of uniform resource names (URNs) for the resources associated with the project\n"
                }
            },
            "requiredInputs": [
                "project",
                "resources"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectResources resources.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "the ID of the project\n",
                        "willReplaceOnChanges": true
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "a list of uniform resource names (URNs) for the resources associated with the project\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/reservedIp:ReservedIp": {
            "description": "Provides a DigitalOcean reserved IP to represent a publicly-accessible static IP addresses that can be mapped to one of your Droplets.\n\n\u003e **NOTE:** Reserved IPs can be assigned to a Droplet either directly on the `digitalocean.ReservedIp` resource by setting a `droplet_id` or using the `digitalocean.ReservedIpAssignment` resource, but the two cannot be used together.\n\n\n## Import\n\nReserved IPs can be imported using the `ip`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/reservedIp:ReservedIp myip 192.168.0.1\n```\n\n ",
            "properties": {
                "dropletId": {
                    "type": "integer",
                    "description": "The ID of Droplet that the reserved IP will be assigned to.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP Address of the resource\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region that the reserved IP is reserved to.\n"
                },
                "urn": {
                    "type": "string",
                    "description": "The uniform resource name of the reserved ip\n"
                }
            },
            "required": [
                "ipAddress",
                "region",
                "urn"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "integer",
                    "description": "The ID of Droplet that the reserved IP will be assigned to.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP Address of the resource\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region that the reserved IP is reserved to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ReservedIp resources.\n",
                "properties": {
                    "dropletId": {
                        "type": "integer",
                        "description": "The ID of Droplet that the reserved IP will be assigned to.\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The IP Address of the resource\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region that the reserved IP is reserved to.\n",
                        "willReplaceOnChanges": true
                    },
                    "urn": {
                        "type": "string",
                        "description": "The uniform resource name of the reserved ip\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/reservedIpAssignment:ReservedIpAssignment": {
            "description": "Provides a resource for assigning an existing DigitalOcean reserved IP to a Droplet. This\nmakes it easy to provision reserved IP addresses that are not tied to the lifecycle of your\nDroplet.\n\n\n## Import\n\nReserved IP assignments can be imported using the reserved IP itself and the `id` of the Droplet joined with a comma. For example\n\n```sh\n $ pulumi import digitalocean:index/reservedIpAssignment:ReservedIpAssignment foobar 192.0.2.1,123456\n```\n\n ",
            "properties": {
                "dropletId": {
                    "type": "integer",
                    "description": "The ID of Droplet that the reserved IP will be assigned to.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The reserved IP to assign to the Droplet.\n"
                }
            },
            "required": [
                "dropletId",
                "ipAddress"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "integer",
                    "description": "The ID of Droplet that the reserved IP will be assigned to.\n",
                    "willReplaceOnChanges": true
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The reserved IP to assign to the Droplet.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "dropletId",
                "ipAddress"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ReservedIpAssignment resources.\n",
                "properties": {
                    "dropletId": {
                        "type": "integer",
                        "description": "The ID of Droplet that the reserved IP will be assigned to.\n",
                        "willReplaceOnChanges": true
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The reserved IP to assign to the Droplet.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/spacesBucket:SpacesBucket": {
            "description": "Provides a bucket resource for Spaces, DigitalOcean's object storage product.\n\nThe [Spaces API](https://docs.digitalocean.com/reference/api/spaces-api/) was\ndesigned to be interoperable with Amazon's AWS S3 API. This allows users to\ninteract with the service while using the tools they already know. Spaces\nmirrors S3's authentication framework and requests to Spaces require a key pair\nsimilar to Amazon's Access ID and Secret Key.\n\nThe authentication requirement can be met by either setting the\n`SPACES_ACCESS_KEY_ID` and `SPACES_SECRET_ACCESS_KEY` environment variables or\nthe provider's `spaces_access_id` and `spaces_secret_key` arguments to the\naccess ID and secret you generate via the DigitalOcean control panel. For\nexample:\n\n\nFor more information, See [An Introduction to DigitalOcean Spaces](https://www.digitalocean.com/community/tutorials/an-introduction-to-digitalocean-spaces)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### Create a New Bucket\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst foobar = new digitalocean.SpacesBucket(\"foobar\", {\n    region: \"nyc3\",\n});\n```\n{{% /example %}}\n{{% example %}}\n### Create a New Bucket With CORS Rules\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst foobar = new digitalocean.SpacesBucket(\"foobar\", {\n    corsRules: [\n        {\n            allowedHeaders: [\"*\"],\n            allowedMethods: [\"GET\"],\n            allowedOrigins: [\"*\"],\n            maxAgeSeconds: 3000,\n        },\n        {\n            allowedHeaders: [\"*\"],\n            allowedMethods: [\n                \"PUT\",\n                \"POST\",\n                \"DELETE\",\n            ],\n            allowedOrigins: [\"https://www.example.com\"],\n            maxAgeSeconds: 3000,\n        },\n    ],\n    region: \"nyc3\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nBuckets can be imported using the `region` and `name` attributes (delimited by a comma)\n\n```sh\n $ pulumi import digitalocean:index/spacesBucket:SpacesBucket foobar `region`,`name`\n```\n\n ",
            "properties": {
                "acl": {
                    "type": "string",
                    "description": "Canned ACL applied on bucket creation (`private` or `public-read`)\n"
                },
                "bucketDomainName": {
                    "type": "string",
                    "description": "The FQDN of the bucket (e.g. bucket-name.nyc3.digitaloceanspaces.com)\n"
                },
                "bucketUrn": {
                    "type": "string",
                    "description": "The uniform resource name for the bucket\n"
                },
                "corsRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/SpacesBucketCorsRule:SpacesBucketCorsRule"
                    },
                    "description": "A rule of Cross-Origin Resource Sharing (documented below).\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Unless `true`, the bucket will only be destroyed if empty (Defaults to `false`)\n"
                },
                "lifecycleRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/SpacesBucketLifecycleRule:SpacesBucketLifecycleRule"
                    },
                    "description": "A configuration of object lifecycle management (documented below).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the bucket\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the bucket resides (Defaults to `nyc3`)\n"
                },
                "versioning": {
                    "$ref": "#/types/digitalocean:index/SpacesBucketVersioning:SpacesBucketVersioning",
                    "description": "A state of versioning (documented below)\n"
                }
            },
            "required": [
                "bucketDomainName",
                "name",
                "bucketUrn"
            ],
            "inputProperties": {
                "acl": {
                    "type": "string",
                    "description": "Canned ACL applied on bucket creation (`private` or `public-read`)\n"
                },
                "corsRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/SpacesBucketCorsRule:SpacesBucketCorsRule"
                    },
                    "description": "A rule of Cross-Origin Resource Sharing (documented below).\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Unless `true`, the bucket will only be destroyed if empty (Defaults to `false`)\n"
                },
                "lifecycleRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean:index/SpacesBucketLifecycleRule:SpacesBucketLifecycleRule"
                    },
                    "description": "A configuration of object lifecycle management (documented below).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the bucket\n"
                },
                "region": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:Region"
                        }
                    ],
                    "description": "The region where the bucket resides (Defaults to `nyc3`)\n",
                    "willReplaceOnChanges": true
                },
                "versioning": {
                    "$ref": "#/types/digitalocean:index/SpacesBucketVersioning:SpacesBucketVersioning",
                    "description": "A state of versioning (documented below)\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpacesBucket resources.\n",
                "properties": {
                    "acl": {
                        "type": "string",
                        "description": "Canned ACL applied on bucket creation (`private` or `public-read`)\n"
                    },
                    "bucketDomainName": {
                        "type": "string",
                        "description": "The FQDN of the bucket (e.g. bucket-name.nyc3.digitaloceanspaces.com)\n"
                    },
                    "bucketUrn": {
                        "type": "string",
                        "description": "The uniform resource name for the bucket\n"
                    },
                    "corsRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/SpacesBucketCorsRule:SpacesBucketCorsRule"
                        },
                        "description": "A rule of Cross-Origin Resource Sharing (documented below).\n"
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "Unless `true`, the bucket will only be destroyed if empty (Defaults to `false`)\n"
                    },
                    "lifecycleRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/SpacesBucketLifecycleRule:SpacesBucketLifecycleRule"
                        },
                        "description": "A configuration of object lifecycle management (documented below).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the bucket\n"
                    },
                    "region": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:Region"
                            }
                        ],
                        "description": "The region where the bucket resides (Defaults to `nyc3`)\n",
                        "willReplaceOnChanges": true
                    },
                    "versioning": {
                        "$ref": "#/types/digitalocean:index/SpacesBucketVersioning:SpacesBucketVersioning",
                        "description": "A state of versioning (documented below)\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/spacesBucketObject:SpacesBucketObject": {
            "description": "Provides a bucket object resource for Spaces, DigitalOcean's object storage product.\nThe `digitalocean.SpacesBucketObject` resource allows the provider to upload content\nto Spaces.\n\nThe [Spaces API](https://docs.digitalocean.com/reference/api/spaces-api/) was\ndesigned to be interoperable with Amazon's AWS S3 API. This allows users to\ninteract with the service while using the tools they already know. Spaces\nmirrors S3's authentication framework and requests to Spaces require a key pair\nsimilar to Amazon's Access ID and Secret Key.\n\nThe authentication requirement can be met by either setting the\n`SPACES_ACCESS_KEY_ID` and `SPACES_SECRET_ACCESS_KEY` environment variables or\nthe provider's `spaces_access_id` and `spaces_secret_key` arguments to the\naccess ID and secret you generate via the DigitalOcean control panel. For\nexample:\n\n\nFor more information, See [An Introduction to DigitalOcean Spaces](https://www.digitalocean.com/community/tutorials/an-introduction-to-digitalocean-spaces)\n\n{{% examples %}}\n## Example Usage\n{{% /examples %}}\n\n## Import\n\nImporting this resource is not supported. ",
            "properties": {
                "acl": {
                    "type": "string",
                    "description": "The canned ACL to apply. DigitalOcean supports \"private\" and \"public-read\". (Defaults to \"private\".)\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "The name of the bucket to put the file in.\n"
                },
                "cacheControl": {
                    "type": "string",
                    "description": "Specifies caching behavior along the request/reply chain Read [w3c cache_control](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9) for further details.\n"
                },
                "content": {
                    "type": "string",
                    "description": "Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.\n"
                },
                "contentBase64": {
                    "type": "string",
                    "description": "Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the `gzipbase64` function with small text strings. For larger objects, use `source` to stream the content from a disk file.\n"
                },
                "contentDisposition": {
                    "type": "string",
                    "description": "Specifies presentational information for the object. Read [w3c content_disposition](http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1) for further information.\n"
                },
                "contentEncoding": {
                    "type": "string",
                    "description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read [w3c content encoding](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11) for further information.\n"
                },
                "contentLanguage": {
                    "type": "string",
                    "description": "The language the content is in e.g. en-US or en-GB.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "A standard MIME type describing the format of the object data, e.g. application/octet-stream. All Valid MIME Types are valid for this input.\n"
                },
                "etag": {
                    "type": "string",
                    "description": "Used to trigger updates.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Allow the object to be deleted by removing any legal hold on any object version.\nDefault is `false`. This value should be set to `true` only if the bucket has S3 object lock enabled.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the object once it is in the bucket.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A mapping of keys/values to provision metadata (will be automatically prefixed by `x-amz-meta-`, note that only lowercase label are currently supported by the AWS Go API).\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the bucket resides (Defaults to `nyc3`)\n"
                },
                "source": {
                    "type": "string",
                    "description": "The path to a file that will be read and uploaded as raw bytes for the object content.\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "A unique version ID value for the object, if bucket versioning is enabled.\n"
                },
                "websiteRedirect": {
                    "type": "string",
                    "description": "Specifies a target URL for [website redirect](http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html).\n"
                }
            },
            "required": [
                "bucket",
                "contentType",
                "etag",
                "key",
                "region",
                "versionId"
            ],
            "inputProperties": {
                "acl": {
                    "type": "string",
                    "description": "The canned ACL to apply. DigitalOcean supports \"private\" and \"public-read\". (Defaults to \"private\".)\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "The name of the bucket to put the file in.\n",
                    "willReplaceOnChanges": true
                },
                "cacheControl": {
                    "type": "string",
                    "description": "Specifies caching behavior along the request/reply chain Read [w3c cache_control](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9) for further details.\n"
                },
                "content": {
                    "type": "string",
                    "description": "Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.\n"
                },
                "contentBase64": {
                    "type": "string",
                    "description": "Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the `gzipbase64` function with small text strings. For larger objects, use `source` to stream the content from a disk file.\n"
                },
                "contentDisposition": {
                    "type": "string",
                    "description": "Specifies presentational information for the object. Read [w3c content_disposition](http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1) for further information.\n"
                },
                "contentEncoding": {
                    "type": "string",
                    "description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read [w3c content encoding](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11) for further information.\n"
                },
                "contentLanguage": {
                    "type": "string",
                    "description": "The language the content is in e.g. en-US or en-GB.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "A standard MIME type describing the format of the object data, e.g. application/octet-stream. All Valid MIME Types are valid for this input.\n"
                },
                "etag": {
                    "type": "string",
                    "description": "Used to trigger updates.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Allow the object to be deleted by removing any legal hold on any object version.\nDefault is `false`. This value should be set to `true` only if the bucket has S3 object lock enabled.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the object once it is in the bucket.\n",
                    "willReplaceOnChanges": true
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A mapping of keys/values to provision metadata (will be automatically prefixed by `x-amz-meta-`, note that only lowercase label are currently supported by the AWS Go API).\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the bucket resides (Defaults to `nyc3`)\n",
                    "willReplaceOnChanges": true
                },
                "source": {
                    "type": "string",
                    "description": "The path to a file that will be read and uploaded as raw bytes for the object content.\n"
                },
                "websiteRedirect": {
                    "type": "string",
                    "description": "Specifies a target URL for [website redirect](http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html).\n"
                }
            },
            "requiredInputs": [
                "bucket",
                "key",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpacesBucketObject resources.\n",
                "properties": {
                    "acl": {
                        "type": "string",
                        "description": "The canned ACL to apply. DigitalOcean supports \"private\" and \"public-read\". (Defaults to \"private\".)\n"
                    },
                    "bucket": {
                        "type": "string",
                        "description": "The name of the bucket to put the file in.\n",
                        "willReplaceOnChanges": true
                    },
                    "cacheControl": {
                        "type": "string",
                        "description": "Specifies caching behavior along the request/reply chain Read [w3c cache_control](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9) for further details.\n"
                    },
                    "content": {
                        "type": "string",
                        "description": "Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.\n"
                    },
                    "contentBase64": {
                        "type": "string",
                        "description": "Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the `gzipbase64` function with small text strings. For larger objects, use `source` to stream the content from a disk file.\n"
                    },
                    "contentDisposition": {
                        "type": "string",
                        "description": "Specifies presentational information for the object. Read [w3c content_disposition](http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1) for further information.\n"
                    },
                    "contentEncoding": {
                        "type": "string",
                        "description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read [w3c content encoding](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11) for further information.\n"
                    },
                    "contentLanguage": {
                        "type": "string",
                        "description": "The language the content is in e.g. en-US or en-GB.\n"
                    },
                    "contentType": {
                        "type": "string",
                        "description": "A standard MIME type describing the format of the object data, e.g. application/octet-stream. All Valid MIME Types are valid for this input.\n"
                    },
                    "etag": {
                        "type": "string",
                        "description": "Used to trigger updates.\n"
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "Allow the object to be deleted by removing any legal hold on any object version.\nDefault is `false`. This value should be set to `true` only if the bucket has S3 object lock enabled.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The name of the object once it is in the bucket.\n",
                        "willReplaceOnChanges": true
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A mapping of keys/values to provision metadata (will be automatically prefixed by `x-amz-meta-`, note that only lowercase label are currently supported by the AWS Go API).\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the bucket resides (Defaults to `nyc3`)\n",
                        "willReplaceOnChanges": true
                    },
                    "source": {
                        "type": "string",
                        "description": "The path to a file that will be read and uploaded as raw bytes for the object content.\n"
                    },
                    "versionId": {
                        "type": "string",
                        "description": "A unique version ID value for the object, if bucket versioning is enabled.\n"
                    },
                    "websiteRedirect": {
                        "type": "string",
                        "description": "Specifies a target URL for [website redirect](http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html).\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/spacesBucketPolicy:SpacesBucketPolicy": {
            "description": "{{% examples %}}\n## Example Usage\n{{% /examples %}}\n\n## Import\n\nBucket policies can be imported using the `region` and `bucket` attributes (delimited by a comma)\n\n```sh\n $ pulumi import digitalocean:index/spacesBucketPolicy:SpacesBucketPolicy foobar `region`,`bucket`\n```\n\n ",
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "The name of the bucket to which to apply the policy.\n"
                },
                "policy": {
                    "type": "string",
                    "description": "The text of the policy.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the bucket resides.\n"
                }
            },
            "required": [
                "bucket",
                "policy",
                "region"
            ],
            "inputProperties": {
                "bucket": {
                    "type": "string",
                    "description": "The name of the bucket to which to apply the policy.\n",
                    "willReplaceOnChanges": true
                },
                "policy": {
                    "type": "string",
                    "description": "The text of the policy.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the bucket resides.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "bucket",
                "policy",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpacesBucketPolicy resources.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "The name of the bucket to which to apply the policy.\n",
                        "willReplaceOnChanges": true
                    },
                    "policy": {
                        "type": "string",
                        "description": "The text of the policy.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the bucket resides.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/sshKey:SshKey": {
            "description": "Provides a DigitalOcean SSH key resource to allow you to manage SSH\nkeys for Droplet access. Keys created with this resource\ncan be referenced in your Droplet configuration via their ID or\nfingerprint.\n\n\n## Import\n\nSSH Keys can be imported using the `ssh key id`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/sshKey:SshKey mykey 263654\n```\n\n ",
            "properties": {
                "fingerprint": {
                    "type": "string",
                    "description": "The fingerprint of the SSH key\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the SSH key for identification\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "The public key. If this is a file, it\ncan be read using the file interpolation function\n"
                }
            },
            "required": [
                "fingerprint",
                "name",
                "publicKey"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the SSH key for identification\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "The public key. If this is a file, it\ncan be read using the file interpolation function\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "publicKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SshKey resources.\n",
                "properties": {
                    "fingerprint": {
                        "type": "string",
                        "description": "The fingerprint of the SSH key\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the SSH key for identification\n"
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "The public key. If this is a file, it\ncan be read using the file interpolation function\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/tag:Tag": {
            "description": "Provides a DigitalOcean Tag resource. A Tag is a label that can be applied to a\nDroplet resource in order to better organize or facilitate the lookups and\nactions on it. Tags created with this resource can be referenced in your Droplet\nconfiguration via their ID or name.\n\n\n## Import\n\nTags can be imported using the `name`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/tag:Tag mytag tagname\n```\n\n ",
            "properties": {
                "databasesCount": {
                    "type": "integer",
                    "description": "A count of the database clusters that the tag is applied to.\n"
                },
                "dropletsCount": {
                    "type": "integer",
                    "description": "A count of the Droplets the tag is applied to.\n"
                },
                "imagesCount": {
                    "type": "integer",
                    "description": "A count of the images that the tag is applied to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the tag\n"
                },
                "totalResourceCount": {
                    "type": "integer",
                    "description": "A count of the total number of resources that the tag is applied to.\n"
                },
                "volumeSnapshotsCount": {
                    "type": "integer",
                    "description": "A count of the volume snapshots that the tag is applied to.\n"
                },
                "volumesCount": {
                    "type": "integer",
                    "description": "A count of the volumes that the tag is applied to.\n"
                }
            },
            "required": [
                "databasesCount",
                "dropletsCount",
                "imagesCount",
                "name",
                "totalResourceCount",
                "volumeSnapshotsCount",
                "volumesCount"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the tag\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Tag resources.\n",
                "properties": {
                    "databasesCount": {
                        "type": "integer",
                        "description": "A count of the database clusters that the tag is applied to.\n"
                    },
                    "dropletsCount": {
                        "type": "integer",
                        "description": "A count of the Droplets the tag is applied to.\n"
                    },
                    "imagesCount": {
                        "type": "integer",
                        "description": "A count of the images that the tag is applied to.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the tag\n",
                        "willReplaceOnChanges": true
                    },
                    "totalResourceCount": {
                        "type": "integer",
                        "description": "A count of the total number of resources that the tag is applied to.\n"
                    },
                    "volumeSnapshotsCount": {
                        "type": "integer",
                        "description": "A count of the volume snapshots that the tag is applied to.\n"
                    },
                    "volumesCount": {
                        "type": "integer",
                        "description": "A count of the volumes that the tag is applied to.\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/volume:Volume": {
            "description": "Provides a DigitalOcean Block Storage volume which can be attached to a Droplet in order to provide expanded storage.\n\n\n## Import\n\nVolumes can be imported using the `volume id`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/volume:Volume volume 506f78a4-e098-11e5-ad9f-000f53306ae1\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text field up to a limit of 1024 bytes to describe a block storage volume.\n"
                },
                "dropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of associated droplet ids.\n"
                },
                "filesystemLabel": {
                    "type": "string",
                    "description": "Filesystem label for the block storage volume.\n"
                },
                "filesystemType": {
                    "type": "string",
                    "description": "Filesystem type (`xfs` or `ext4`) for the block storage volume.\n",
                    "deprecationMessage": "This fields functionality has been replaced by `initial_filesystem_type`. The property will still remain as a computed attribute representing the current volumes filesystem type."
                },
                "initialFilesystemLabel": {
                    "type": "string",
                    "description": "Initial filesystem label for the block storage volume.\n"
                },
                "initialFilesystemType": {
                    "type": "string",
                    "description": "Initial filesystem type (`xfs` or `ext4`) for the block storage volume.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the block storage volume. Must be lowercase and be composed only of numbers, letters and \"-\", up to a limit of 64 characters.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region that the block storage volume will be created in.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the block storage volume in GiB. If updated, can only be expanded.\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "The ID of an existing volume snapshot from which the new volume will be created. If supplied, the region and size will be limitied on creation to that of the referenced snapshot\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the tags to be applied to this Volume.\n"
                },
                "volumeUrn": {
                    "type": "string",
                    "description": "The uniform resource name for the volume.\n"
                }
            },
            "required": [
                "dropletIds",
                "filesystemLabel",
                "filesystemType",
                "name",
                "region",
                "size",
                "volumeUrn"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text field up to a limit of 1024 bytes to describe a block storage volume.\n",
                    "willReplaceOnChanges": true
                },
                "filesystemType": {
                    "type": "string",
                    "description": "Filesystem type (`xfs` or `ext4`) for the block storage volume.\n",
                    "deprecationMessage": "This fields functionality has been replaced by `initial_filesystem_type`. The property will still remain as a computed attribute representing the current volumes filesystem type."
                },
                "initialFilesystemLabel": {
                    "type": "string",
                    "description": "Initial filesystem label for the block storage volume.\n",
                    "willReplaceOnChanges": true
                },
                "initialFilesystemType": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:FileSystemType"
                        }
                    ],
                    "description": "Initial filesystem type (`xfs` or `ext4`) for the block storage volume.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "A name for the block storage volume. Must be lowercase and be composed only of numbers, letters and \"-\", up to a limit of 64 characters.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/digitalocean:index:Region"
                        }
                    ],
                    "description": "The region that the block storage volume will be created in.\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the block storage volume in GiB. If updated, can only be expanded.\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "The ID of an existing volume snapshot from which the new volume will be created. If supplied, the region and size will be limitied on creation to that of the referenced snapshot\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the tags to be applied to this Volume.\n"
                }
            },
            "requiredInputs": [
                "region",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Volume resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A free-form text field up to a limit of 1024 bytes to describe a block storage volume.\n",
                        "willReplaceOnChanges": true
                    },
                    "dropletIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of associated droplet ids.\n"
                    },
                    "filesystemLabel": {
                        "type": "string",
                        "description": "Filesystem label for the block storage volume.\n"
                    },
                    "filesystemType": {
                        "type": "string",
                        "description": "Filesystem type (`xfs` or `ext4`) for the block storage volume.\n",
                        "deprecationMessage": "This fields functionality has been replaced by `initial_filesystem_type`. The property will still remain as a computed attribute representing the current volumes filesystem type."
                    },
                    "initialFilesystemLabel": {
                        "type": "string",
                        "description": "Initial filesystem label for the block storage volume.\n",
                        "willReplaceOnChanges": true
                    },
                    "initialFilesystemType": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:FileSystemType"
                            }
                        ],
                        "description": "Initial filesystem type (`xfs` or `ext4`) for the block storage volume.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A name for the block storage volume. Must be lowercase and be composed only of numbers, letters and \"-\", up to a limit of 64 characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/digitalocean:index:Region"
                            }
                        ],
                        "description": "The region that the block storage volume will be created in.\n",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the block storage volume in GiB. If updated, can only be expanded.\n"
                    },
                    "snapshotId": {
                        "type": "string",
                        "description": "The ID of an existing volume snapshot from which the new volume will be created. If supplied, the region and size will be limitied on creation to that of the referenced snapshot\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the tags to be applied to this Volume.\n"
                    },
                    "volumeUrn": {
                        "type": "string",
                        "description": "The uniform resource name for the volume.\n"
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/volumeAttachment:VolumeAttachment": {
            "description": "Manages attaching a Volume to a Droplet.\n\n\u003e **NOTE:** Volumes can be attached either directly on the `digitalocean.Droplet` resource, or using the `digitalocean.VolumeAttachment` resource - but the two cannot be used together. If both are used against the same Droplet, the volume attachments will constantly drift.\n\n",
            "properties": {
                "dropletId": {
                    "type": "integer",
                    "description": "ID of the Droplet to attach the volume to.\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "ID of the Volume to be attached to the Droplet.\n"
                }
            },
            "required": [
                "dropletId",
                "volumeId"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "integer",
                    "description": "ID of the Droplet to attach the volume to.\n",
                    "willReplaceOnChanges": true
                },
                "volumeId": {
                    "type": "string",
                    "description": "ID of the Volume to be attached to the Droplet.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "dropletId",
                "volumeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VolumeAttachment resources.\n",
                "properties": {
                    "dropletId": {
                        "type": "integer",
                        "description": "ID of the Droplet to attach the volume to.\n",
                        "willReplaceOnChanges": true
                    },
                    "volumeId": {
                        "type": "string",
                        "description": "ID of the Volume to be attached to the Droplet.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/volumeSnapshot:VolumeSnapshot": {
            "description": "Provides a DigitalOcean Volume Snapshot which can be used to create a snapshot from an existing volume.\n\n\n## Import\n\nVolume Snapshots can be imported using the `snapshot id`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/volumeSnapshot:VolumeSnapshot snapshot 506f78a4-e098-11e5-ad9f-000f53306ae1\n```\n\n ",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time the volume snapshot was created.\n"
                },
                "minDiskSize": {
                    "type": "integer",
                    "description": "The minimum size in gigabytes required for a volume to be created based on this volume snapshot.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the volume snapshot.\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of DigitalOcean region \"slugs\" indicating where the volume snapshot is available.\n"
                },
                "size": {
                    "type": "number",
                    "description": "The billable size of the volume snapshot in gigabytes.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the tags to be applied to this volume snapshot.\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "The ID of the volume from which the volume snapshot originated.\n"
                }
            },
            "required": [
                "createdAt",
                "minDiskSize",
                "name",
                "regions",
                "size",
                "volumeId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "A name for the volume snapshot.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the tags to be applied to this volume snapshot.\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "The ID of the volume from which the volume snapshot originated.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "volumeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VolumeSnapshot resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time the volume snapshot was created.\n"
                    },
                    "minDiskSize": {
                        "type": "integer",
                        "description": "The minimum size in gigabytes required for a volume to be created based on this volume snapshot.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A name for the volume snapshot.\n",
                        "willReplaceOnChanges": true
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of DigitalOcean region \"slugs\" indicating where the volume snapshot is available.\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "The billable size of the volume snapshot in gigabytes.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the tags to be applied to this volume snapshot.\n"
                    },
                    "volumeId": {
                        "type": "string",
                        "description": "The ID of the volume from which the volume snapshot originated.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "digitalocean:index/vpc:Vpc": {
            "description": "Provides a [DigitalOcean VPC](https://docs.digitalocean.com/reference/api/api-reference/#tag/VPCs) resource.\n\nVPCs are virtual networks containing resources that can communicate with each\nother in full isolation, using private IP addresses.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst example = new digitalocean.Vpc(\"example\", {\n    ipRange: \"10.10.10.0/24\",\n    region: \"nyc3\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA VPC can be imported using its `id`, e.g.\n\n```sh\n $ pulumi import digitalocean:index/vpc:Vpc example 506f78a4-e098-11e5-ad9f-000f53306ae1\n```\n\n ",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of when the VPC was created.\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "A boolean indicating whether or not the VPC is the default one for the region.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text field up to a limit of 255 characters to describe the VPC.\n"
                },
                "ipRange": {
                    "type": "string",
                    "description": "The range of IP addresses for the VPC in CIDR notation. Network ranges cannot overlap with other networks in the same account and must be in range of private addresses as defined in RFC1918. It may not be larger than `/16` or smaller than `/24`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the VPC. Must be unique and contain alphanumeric characters, dashes, and periods only.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The DigitalOcean region slug for the VPC's location.\n"
                },
                "vpcUrn": {
                    "type": "string",
                    "description": "The uniform resource name (URN) for the VPC.\n"
                }
            },
            "required": [
                "createdAt",
                "default",
                "ipRange",
                "name",
                "region",
                "vpcUrn"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text field up to a limit of 255 characters to describe the VPC.\n"
                },
                "ipRange": {
                    "type": "string",
                    "description": "The range of IP addresses for the VPC in CIDR notation. Network ranges cannot overlap with other networks in the same account and must be in range of private addresses as defined in RFC1918. It may not be larger than `/16` or smaller than `/24`.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "A name for the VPC. Must be unique and contain alphanumeric characters, dashes, and periods only.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The DigitalOcean region slug for the VPC's location.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vpc resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of when the VPC was created.\n"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "A boolean indicating whether or not the VPC is the default one for the region.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free-form text field up to a limit of 255 characters to describe the VPC.\n"
                    },
                    "ipRange": {
                        "type": "string",
                        "description": "The range of IP addresses for the VPC in CIDR notation. Network ranges cannot overlap with other networks in the same account and must be in range of private addresses as defined in RFC1918. It may not be larger than `/16` or smaller than `/24`.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A name for the VPC. Must be unique and contain alphanumeric characters, dashes, and periods only.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The DigitalOcean region slug for the VPC's location.\n",
                        "willReplaceOnChanges": true
                    },
                    "vpcUrn": {
                        "type": "string",
                        "description": "The uniform resource name (URN) for the VPC.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "digitalocean:index/getAccount:getAccount": {
            "description": "Get information on your DigitalOcean account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nGet the account:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst example = pulumi.output(digitalocean.getAccount());\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getAccount.\n",
                "properties": {
                    "dropletLimit": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "emailVerified": {
                        "type": "boolean"
                    },
                    "floatingIpLimit": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "status": {
                        "type": "string"
                    },
                    "statusMessage": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "dropletLimit",
                    "email",
                    "emailVerified",
                    "floatingIpLimit",
                    "status",
                    "statusMessage",
                    "uuid",
                    "id"
                ]
            }
        },
        "digitalocean:index/getApp:getApp": {
            "description": "Get information on a DigitalOcean App.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getApp.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The ID of the app to retrieve information about.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApp.\n",
                "properties": {
                    "activeDeploymentId": {
                        "type": "string",
                        "description": "The ID the app's currently active deployment.\n"
                    },
                    "appId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of when the app was created.\n"
                    },
                    "defaultIngress": {
                        "type": "string",
                        "description": "The default URL to access the app.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "liveUrl": {
                        "type": "string",
                        "description": "The live URL of the app.\n"
                    },
                    "specs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getAppSpec:getAppSpec"
                        },
                        "description": "A DigitalOcean App spec describing the app.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of when the app was last updated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "activeDeploymentId",
                    "appId",
                    "createdAt",
                    "defaultIngress",
                    "liveUrl",
                    "specs",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "digitalocean:index/getCertificate:getCertificate": {
            "description": "Get information on a certificate. This data source provides the name, type, state,\ndomains, expiry date, and the sha1 fingerprint as configured on your DigitalOcean account.\nThis is useful if the certificate in question is not managed by this provider or you need to utilize\nany of the certificates data.\n\nAn error is triggered if the provided certificate name does not exist.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nGet the certificate:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst example = pulumi.output(digitalocean.getCertificate({\n    name: \"example\",\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCertificate.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of certificate.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCertificate.\n",
                "properties": {
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notAfter": {
                        "type": "string"
                    },
                    "sha1Fingerprint": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domains",
                    "name",
                    "notAfter",
                    "sha1Fingerprint",
                    "state",
                    "type",
                    "uuid",
                    "id"
                ]
            }
        },
        "digitalocean:index/getContainerRegistry:getContainerRegistry": {
            "description": "Get information on a container registry. This data source provides the name as\nconfigured on your DigitalOcean account. This is useful if the container\nregistry name in question is not managed by this provider or you need validate if\nthe container registry exists in the account.\n\nAn error is triggered if the provided container registry name does not exist.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### Basic Example\n\nGet the container registry:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst example = pulumi.output(digitalocean.getContainerRegistry({\n    name: \"example\",\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistry.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the container registry.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistry.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time when the registry was created\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "The URL endpoint of the container registry. Ex: `registry.digitalocean.com/my_registry`\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the container registry\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The slug identifier for the  region\n"
                    },
                    "serverUrl": {
                        "type": "string",
                        "description": "The domain of the container registry. Ex: `registry.digitalocean.com`\n"
                    },
                    "storageUsageBytes": {
                        "type": "integer",
                        "description": "The amount of storage used in the registry in bytes.\n"
                    },
                    "subscriptionTierSlug": {
                        "type": "string",
                        "description": "The slug identifier for the subscription tier\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "endpoint",
                    "name",
                    "region",
                    "serverUrl",
                    "storageUsageBytes",
                    "subscriptionTierSlug",
                    "id"
                ]
            }
        },
        "digitalocean:index/getDatabaseCa:getDatabaseCa": {
            "description": "Provides the CA certificate for a DigitalOcean database.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseCa.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the source database cluster.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseCa.\n",
                "properties": {
                    "certificate": {
                        "type": "string",
                        "description": "The CA certificate used to secure database connections decoded to a string.\n"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "certificate",
                    "clusterId",
                    "id"
                ]
            }
        },
        "digitalocean:index/getDatabaseCluster:getDatabaseCluster": {
            "description": "Provides information on a DigitalOcean database cluster resource.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseCluster.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the database cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseCluster.\n",
                "properties": {
                    "database": {
                        "type": "string",
                        "description": "Name of the cluster's default database.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "Database engine used by the cluster (ex. `pg` for PostreSQL).\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "Database cluster's hostname.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getDatabaseClusterMaintenanceWindow:getDatabaseClusterMaintenanceWindow"
                        },
                        "description": "Defines when the automatic maintenance should be performed for the database cluster.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeCount": {
                        "type": "integer",
                        "description": "Number of nodes that will be included in the cluster.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the cluster's default user.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Network port that the database cluster is listening on.\n"
                    },
                    "privateHost": {
                        "type": "string",
                        "description": "Same as `host`, but only accessible from resources within the account and in the same region.\n"
                    },
                    "privateNetworkUuid": {
                        "type": "string",
                        "description": "The ID of the VPC where the database cluster is located.\n"
                    },
                    "privateUri": {
                        "type": "string",
                        "description": "Same as `uri`, but only accessible from resources within the account and in the same region.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "DigitalOcean region where the cluster will reside.\n"
                    },
                    "size": {
                        "type": "string",
                        "description": "Database droplet size associated with the cluster (ex. `db-s-1vcpu-1gb`).\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "uri": {
                        "type": "string",
                        "description": "The full URI for connecting to the database cluster.\n"
                    },
                    "urn": {
                        "type": "string",
                        "description": "The uniform resource name of the database cluster.\n"
                    },
                    "user": {
                        "type": "string",
                        "description": "Username for the cluster's default user.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Engine version used by the cluster (ex. `11` for PostgreSQL 11).\n"
                    }
                },
                "type": "object",
                "required": [
                    "database",
                    "engine",
                    "host",
                    "maintenanceWindows",
                    "name",
                    "nodeCount",
                    "password",
                    "port",
                    "privateHost",
                    "privateNetworkUuid",
                    "privateUri",
                    "region",
                    "size",
                    "uri",
                    "urn",
                    "user",
                    "version",
                    "id"
                ]
            }
        },
        "digitalocean:index/getDatabaseReplica:getDatabaseReplica": {
            "description": "Provides information on a DigitalOcean database replica.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseReplica.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the original source database cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name for the database replica.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tag names to be applied to the database replica.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseReplica.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "database": {
                        "type": "string",
                        "description": "Name of the replica's default database.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "Database replica's hostname.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the replica's default user.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Network port that the database replica is listening on.\n"
                    },
                    "privateHost": {
                        "type": "string",
                        "description": "Same as `host`, but only accessible from resources within the account and in the same region.\n"
                    },
                    "privateNetworkUuid": {
                        "type": "string"
                    },
                    "privateUri": {
                        "type": "string",
                        "description": "Same as `uri`, but only accessible from resources within the account and in the same region.\n"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tag names to be applied to the database replica.\n"
                    },
                    "uri": {
                        "type": "string",
                        "description": "The full URI for connecting to the database replica.\n"
                    },
                    "user": {
                        "type": "string",
                        "description": "Username for the replica's default user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "database",
                    "host",
                    "name",
                    "password",
                    "port",
                    "privateHost",
                    "privateNetworkUuid",
                    "privateUri",
                    "region",
                    "uri",
                    "user",
                    "id"
                ]
            }
        },
        "digitalocean:index/getDomain:getDomain": {
            "description": "Get information on a domain. This data source provides the name, TTL, and zone\nfile as configured on your DigitalOcean account. This is useful if the domain\nname in question is not managed by this provider or you need to utilize TTL or zone\nfile data.\n\nAn error is triggered if the provided domain name is not managed with your\nDigitalOcean account.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDomain.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the domain.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDomain.\n",
                "properties": {
                    "domainUrn": {
                        "type": "string",
                        "description": "The uniform resource name of the domain\n* `zone_file`: The zone file of the domain.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "zoneFile": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "ttl",
                    "domainUrn",
                    "zoneFile",
                    "id"
                ]
            }
        },
        "digitalocean:index/getDomains:getDomains": {
            "description": "Get information on domains for use in other resources, with the ability to filter and sort the results.\nIf no filters are specified, all domains will be returned.\n\nThis data source is useful if the domains in question are not managed by this provider or you need to\nutilize any of the domains' data.\n\nNote: You can use the `digitalocean.Domain` data source to obtain metadata\nabout a single domain if you already know the `name`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nUse the `filter` block with a `key` string and `values` list to filter domains. (This example\nalso uses the regular expression `match_by` mode in order to match domains by suffix.)\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst examples = pulumi.output(digitalocean.getDomains({\n    filters: [{\n        key: \"name\",\n        matchBy: \"re\",\n        values: [\"example\\\\.com$\"],\n    }],\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDomains.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getDomainsFilter:getDomainsFilter"
                        },
                        "description": "Filter the results.\nThe `filter` block is documented below.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getDomainsSort:getDomainsSort"
                        },
                        "description": "Sort the results.\nThe `sort` block is documented below.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDomains.\n",
                "properties": {
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getDomainsDomain:getDomainsDomain"
                        },
                        "description": "A list of domains satisfying any `filter` and `sort` criteria. Each domain has the following attributes:\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getDomainsFilter:getDomainsFilter"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getDomainsSort:getDomainsSort"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "domains",
                    "id"
                ]
            }
        },
        "digitalocean:index/getDroplet:getDroplet": {
            "description": "Get information on a Droplet for use in other resources. This data source provides\nall of the Droplet's properties as configured on your DigitalOcean account. This\nis useful if the Droplet in question is not managed by this provider or you need to\nutilize any of the Droplet's data.\n\n**Note:** This data source returns a single Droplet. When specifying a `tag`, an\nerror is triggered if more than one Droplet is found.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDroplet.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of the Droplet\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Droplet.\n"
                    },
                    "tag": {
                        "type": "string",
                        "description": "A tag applied to the Droplet.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDroplet.\n",
                "properties": {
                    "backups": {
                        "type": "boolean",
                        "description": "Whether backups are enabled.\n"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "disk": {
                        "type": "integer",
                        "description": "The size of the Droplets disk in GB.\n"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "image": {
                        "type": "string",
                        "description": "The Droplet image ID or slug.\n"
                    },
                    "ipv4Address": {
                        "type": "string",
                        "description": "The Droplets public IPv4 address\n"
                    },
                    "ipv4AddressPrivate": {
                        "type": "string",
                        "description": "The Droplets private IPv4 address\n"
                    },
                    "ipv6": {
                        "type": "boolean",
                        "description": "Whether IPv6 is enabled.\n"
                    },
                    "ipv6Address": {
                        "type": "string",
                        "description": "The Droplets public IPv6 address\n"
                    },
                    "ipv6AddressPrivate": {
                        "type": "string",
                        "description": "The Droplets private IPv6 address\n"
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "Whether the Droplet is locked.\n"
                    },
                    "memory": {
                        "type": "integer",
                        "description": "The amount of the Droplets memory in MB.\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Whether monitoring agent is installed.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "priceHourly": {
                        "type": "number",
                        "description": "Droplet hourly price.\n"
                    },
                    "priceMonthly": {
                        "type": "number",
                        "description": "Droplet monthly price.\n"
                    },
                    "privateNetworking": {
                        "type": "boolean",
                        "description": "Whether private networks are enabled.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region the Droplet is running in.\n"
                    },
                    "size": {
                        "type": "string",
                        "description": "The unique slug that indentifies the type of Droplet.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the Droplet.\n"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the tags associated to the Droplet.\n"
                    },
                    "urn": {
                        "type": "string",
                        "description": "The uniform resource name of the Droplet\n"
                    },
                    "vcpus": {
                        "type": "integer",
                        "description": "The number of the Droplets virtual CPUs.\n"
                    },
                    "volumeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of the IDs of each volumes attached to the Droplet.\n"
                    },
                    "vpcUuid": {
                        "type": "string",
                        "description": "The ID of the VPC where the Droplet is located.\n"
                    }
                },
                "type": "object",
                "required": [
                    "backups",
                    "createdAt",
                    "disk",
                    "id",
                    "image",
                    "ipv4Address",
                    "ipv4AddressPrivate",
                    "ipv6",
                    "ipv6Address",
                    "ipv6AddressPrivate",
                    "locked",
                    "memory",
                    "monitoring",
                    "name",
                    "priceHourly",
                    "priceMonthly",
                    "privateNetworking",
                    "region",
                    "size",
                    "status",
                    "tags",
                    "urn",
                    "vcpus",
                    "volumeIds",
                    "vpcUuid"
                ]
            }
        },
        "digitalocean:index/getDropletSnapshot:getDropletSnapshot": {
            "description": "Droplet snapshots are saved instances of a Droplet. Use this data\nsource to retrieve the ID of a DigitalOcean Droplet snapshot for use in other\nresources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nGet the Droplet snapshot:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst web_snapshot = pulumi.output(digitalocean.getDropletSnapshot({\n    mostRecent: true,\n    nameRegex: \"^web\",\n    region: \"nyc3\",\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDropletSnapshot.\n",
                "properties": {
                    "mostRecent": {
                        "type": "boolean",
                        "description": "If more than one result is returned, use the most recent Droplet snapshot.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Droplet snapshot.\n"
                    },
                    "nameRegex": {
                        "type": "string",
                        "description": "A regex string to apply to the Droplet snapshot list returned by DigitalOcean. This allows more advanced filtering not supported from the DigitalOcean API. This filtering is done locally on what DigitalOcean returns.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "A \"slug\" representing a DigitalOcean region (e.g. `nyc1`). If set, only Droplet snapshots available in the region will be returned.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDropletSnapshot.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time the Droplet snapshot was created.\n"
                    },
                    "dropletId": {
                        "type": "string",
                        "description": "The ID of the Droplet from which the Droplet snapshot originated.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "minDiskSize": {
                        "type": "integer",
                        "description": "The minimum size in gigabytes required for a Droplet to be created based on this Droplet snapshot.\n"
                    },
                    "mostRecent": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameRegex": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of DigitalOcean region \"slugs\" indicating where the Droplet snapshot is available.\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "The billable size of the Droplet snapshot in gigabytes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "dropletId",
                    "minDiskSize",
                    "regions",
                    "size",
                    "id"
                ]
            }
        },
        "digitalocean:index/getDroplets:getDroplets": {
            "description": "Get information on Droplets for use in other resources, with the ability to filter and sort the results.\nIf no filters are specified, all Droplets will be returned.\n\nThis data source is useful if the Droplets in question are not managed by the provider or you need to\nutilize any of the Droplets' data.\n\nNote: You can use the `digitalocean.Droplet` data source to obtain metadata\nabout a single Droplet if you already know the `id`, unique `name`, or unique `tag` to retrieve.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nUse the `filter` block with a `key` string and `values` list to filter images.\n\nFor example to find all Droplets with size `s-1vcpu-1gb`:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst small = pulumi.output(digitalocean.getDroplets({\n    filters: [{\n        key: \"size\",\n        values: [\"s-1vcpu-1gb\"],\n    }],\n}));\n```\n\nYou can filter on multiple fields and sort the results as well:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst small_with_backups = pulumi.output(digitalocean.getDroplets({\n    filters: [\n        {\n            key: \"size\",\n            values: [\"s-1vcpu-1gb\"],\n        },\n        {\n            key: \"backups\",\n            values: [\"true\"],\n        },\n    ],\n    sorts: [{\n        direction: \"desc\",\n        key: \"created_at\",\n    }],\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDroplets.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getDropletsFilter:getDropletsFilter"
                        },
                        "description": "Filter the results.\nThe `filter` block is documented below.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getDropletsSort:getDropletsSort"
                        },
                        "description": "Sort the results.\nThe `sort` block is documented below.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDroplets.\n",
                "properties": {
                    "droplets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getDropletsDroplet:getDropletsDroplet"
                        },
                        "description": "A list of Droplets satisfying any `filter` and `sort` criteria. Each Droplet has the following attributes:\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getDropletsFilter:getDropletsFilter"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getDropletsSort:getDropletsSort"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "droplets",
                    "id"
                ]
            }
        },
        "digitalocean:index/getFirewall:getFirewall": {
            "description": "Get information on a DigitalOcean Firewall.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewall.\n",
                "properties": {
                    "dropletIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of the IDs of the Droplets assigned to\nthe Firewall.\n"
                    },
                    "firewallId": {
                        "type": "string",
                        "description": "The ID of the firewall to retrieve information\nabout.\n"
                    },
                    "inboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getFirewallInboundRule:getFirewallInboundRule"
                        }
                    },
                    "outboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getFirewallOutboundRule:getFirewallOutboundRule"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The names of the Tags assigned to the Firewall.\n"
                    }
                },
                "type": "object",
                "required": [
                    "firewallId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFirewall.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "A time value given in ISO8601 combined date and time format\nthat represents when the Firewall was created.\n"
                    },
                    "dropletIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of the IDs of the Droplets assigned to\nthe Firewall.\n"
                    },
                    "firewallId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "inboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getFirewallInboundRule:getFirewallInboundRule"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Firewall.\n"
                    },
                    "outboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getFirewallOutboundRule:getFirewallOutboundRule"
                        }
                    },
                    "pendingChanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getFirewallPendingChange:getFirewallPendingChange"
                        },
                        "description": "A set of object containing the fields, `droplet_id`,\n`removing`, and `status`.  It is provided to detail exactly which Droplets\nare having their security policies updated.  When empty, all changes\nhave been successfully applied.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "A status string indicating the current state of the Firewall.\nThis can be \"waiting\", \"succeeded\", or \"failed\".\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The names of the Tags assigned to the Firewall.\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "dropletIds",
                    "firewallId",
                    "inboundRules",
                    "name",
                    "outboundRules",
                    "pendingChanges",
                    "status",
                    "tags",
                    "id"
                ]
            }
        },
        "digitalocean:index/getFloatingIp:getFloatingIp": {
            "description": "\u003e **Deprecated:** DigitalOcean Floating IPs have been renamed reserved IPs. This data source will be removed in a future release. Please use `digitalocean.ReservedIp` instead.\n\nGet information on a floating ip. This data source provides the region and Droplet id\nas configured on your DigitalOcean account. This is useful if the floating IP\nin question is not managed by the provider or you need to find the Droplet the IP is\nattached to.\n\nAn error is triggered if the provided floating IP does not exist.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFloatingIp.\n",
                "properties": {
                    "ipAddress": {
                        "type": "string",
                        "description": "The allocated IP address of the specific floating IP to retrieve.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ipAddress"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFloatingIp.\n",
                "properties": {
                    "dropletId": {
                        "type": "integer"
                    },
                    "floatingIpUrn": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "dropletId",
                    "ipAddress",
                    "region",
                    "floatingIpUrn",
                    "id"
                ]
            }
        },
        "digitalocean:index/getImage:getImage": {
            "description": "Get information on an image for use in other resources (e.g. creating a Droplet\nbased on snapshot). This data source provides all of the image properties as\nconfigured on your DigitalOcean account. This is useful if the image in question\nis not managed by the provider or you need to utilize any of the image's data.\n\nAn error is triggered if zero or more than one result is returned by the query.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getImage.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The id of the image\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the image.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The slug of the official image.\n"
                    },
                    "source": {
                        "type": "string",
                        "description": "Restrict the search to one of the following categories of images:\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getImage.\n",
                "properties": {
                    "created": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "distribution": {
                        "type": "string",
                        "description": "The name of the distribution of the OS of the image.\n* `min_disk_size`: The minimum 'disk' required for the image.\n* `size_gigabytes`: The size of the image in GB.\n"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "image": {
                        "type": "string",
                        "description": "The id of the image (legacy parameter).\n"
                    },
                    "minDiskSize": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "private": {
                        "type": "boolean",
                        "description": "Is image a public image or not. Public images represent\nLinux distributions or One-Click Applications, while non-public images represent\nsnapshots and backups and are only available within your account.\n* `regions`: A set of the regions that the image is available in.\n* `tags`: A set of tags applied to the image\n* `created`: When the image was created\n* `status`: Current status of the image\n* `error_message`: Any applicable error message pertaining to the image\n"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sizeGigabytes": {
                        "type": "number"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "created",
                    "description",
                    "distribution",
                    "errorMessage",
                    "id",
                    "image",
                    "minDiskSize",
                    "name",
                    "private",
                    "regions",
                    "sizeGigabytes",
                    "slug",
                    "status",
                    "tags",
                    "type"
                ]
            }
        },
        "digitalocean:index/getImages:getImages": {
            "description": "Get information on images for use in other resources (e.g. creating a Droplet\nbased on a snapshot), with the ability to filter and sort the results. If no filters are specified,\nall images will be returned.\n\nThis data source is useful if the image in question is not managed by the provider or you need to utilize any\nof the image's data.\n\nNote: You can use the `digitalocean.getImage` data source to obtain metadata\nabout a single image if you already know the `slug`, unique `name`, or `id` to retrieve.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nUse the `filter` block with a `key` string and `values` list to filter images.\n\nFor example to find all Ubuntu images:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst ubuntu = pulumi.output(digitalocean.getImages({\n    filters: [{\n        key: \"distribution\",\n        values: [\"Ubuntu\"],\n    }],\n}));\n```\n\nYou can filter on multiple fields and sort the results as well:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst available = pulumi.output(digitalocean.getImages({\n    filters: [\n        {\n            key: \"distribution\",\n            values: [\"Ubuntu\"],\n        },\n        {\n            key: \"regions\",\n            values: [\"nyc3\"],\n        },\n    ],\n    sorts: [{\n        direction: \"desc\",\n        key: \"created\",\n    }],\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getImages.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getImagesFilter:getImagesFilter"
                        },
                        "description": "Filter the results.\nThe `filter` block is documented below.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getImagesSort:getImagesSort"
                        },
                        "description": "Sort the results.\nThe `sort` block is documented below.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getImages.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getImagesFilter:getImagesFilter"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getImagesImage:getImagesImage"
                        },
                        "description": "A set of images satisfying any `filter` and `sort` criteria. Each image has the following attributes:  \n- `slug`: Unique text identifier of the image.\n- `id`: The ID of the image.\n- `name`: The name of the image.\n- `type`: Type of the image.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getImagesSort:getImagesSort"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "images",
                    "id"
                ]
            }
        },
        "digitalocean:index/getKubernetesCluster:getKubernetesCluster": {
            "description": "Retrieves information about a DigitalOcean Kubernetes cluster for use in other resources. This data source provides all of the cluster's properties as configured on your DigitalOcean account. This is useful if the cluster in question is not managed by the provider.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKubernetesCluster.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of Kubernetes cluster.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tag names applied to the node pool.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubernetesCluster.\n",
                "properties": {
                    "autoUpgrade": {
                        "type": "boolean",
                        "description": "A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.\n* `kube_config.0` - A representation of the Kubernetes cluster's kubeconfig with the following attributes:\n"
                    },
                    "clusterSubnet": {
                        "type": "string",
                        "description": "The range of IP addresses in the overlay network of the Kubernetes cluster.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time when the node was created.\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "The base URL of the API server on the Kubernetes master node.\n"
                    },
                    "ha": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipv4Address": {
                        "type": "string",
                        "description": "The public IPv4 address of the Kubernetes master node.\n"
                    },
                    "kubeConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getKubernetesClusterKubeConfig:getKubernetesClusterKubeConfig"
                        }
                    },
                    "maintenancePolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getKubernetesClusterMaintenancePolicy:getKubernetesClusterMaintenancePolicy"
                        },
                        "description": "The maintenance policy of the Kubernetes cluster. Digital Ocean has a default maintenancen window.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The auto-generated name for the node.\n"
                    },
                    "nodePools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getKubernetesClusterNodePool:getKubernetesClusterNodePool"
                        },
                        "description": "A list of node pools associated with the cluster. Each node pool exports the following attributes:\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The slug identifier for the region where the Kubernetes cluster is located.\n"
                    },
                    "serviceSubnet": {
                        "type": "string",
                        "description": "The range of assignable IP addresses for services running in the Kubernetes cluster.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "A string indicating the current status of the individual node.\n"
                    },
                    "surgeUpgrade": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tag names applied to the node pool.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time when the node was last updated.\n"
                    },
                    "urn": {
                        "type": "string",
                        "description": "The uniform resource name (URN) for the Kubernetes cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The slug identifier for the version of Kubernetes used for the cluster.\n"
                    },
                    "vpcUuid": {
                        "type": "string",
                        "description": "The ID of the VPC where the Kubernetes cluster is located.\n"
                    }
                },
                "type": "object",
                "required": [
                    "autoUpgrade",
                    "clusterSubnet",
                    "createdAt",
                    "endpoint",
                    "ha",
                    "ipv4Address",
                    "kubeConfigs",
                    "maintenancePolicies",
                    "name",
                    "nodePools",
                    "region",
                    "serviceSubnet",
                    "status",
                    "surgeUpgrade",
                    "updatedAt",
                    "urn",
                    "version",
                    "vpcUuid",
                    "id"
                ]
            }
        },
        "digitalocean:index/getKubernetesVersions:getKubernetesVersions": {
            "description": "Provides access to the available DigitalOcean Kubernetes Service versions.\n\n{{% examples %}}\n## Example Usage\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKubernetesVersions.\n",
                "properties": {
                    "versionPrefix": {
                        "type": "string",
                        "description": "If provided, the provider will only return versions that match the string prefix. For example, `1.15.` will match all 1.15.x series releases.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKubernetesVersions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "latestVersion": {
                        "type": "string",
                        "description": "The most recent version available.\n"
                    },
                    "validVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of available versions.\n"
                    },
                    "versionPrefix": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "latestVersion",
                    "validVersions",
                    "id"
                ]
            }
        },
        "digitalocean:index/getLoadBalancer:getLoadBalancer": {
            "description": "Get information on a load balancer for use in other resources. This data source\nprovides all of the load balancers properties as configured on your DigitalOcean\naccount. This is useful if the load balancer in question is not managed by\nthe provider or you need to utilize any of the load balancers data.\n\nAn error is triggered if the provided load balancer name does not exist.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLoadBalancer.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of load balancer.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of load balancer.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLoadBalancer.\n",
                "properties": {
                    "algorithm": {
                        "type": "string"
                    },
                    "disableLetsEncryptDnsRecords": {
                        "type": "boolean"
                    },
                    "dropletIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "dropletTag": {
                        "type": "string"
                    },
                    "enableBackendKeepalive": {
                        "type": "boolean"
                    },
                    "enableProxyProtocol": {
                        "type": "boolean"
                    },
                    "forwardingRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getLoadBalancerForwardingRule:getLoadBalancerForwardingRule"
                        }
                    },
                    "healthchecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getLoadBalancerHealthcheck:getLoadBalancerHealthcheck"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "loadBalancerUrn": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "redirectHttpToHttps": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    },
                    "sizeUnit": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "stickySessions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getLoadBalancerStickySession:getLoadBalancerStickySession"
                        }
                    },
                    "vpcUuid": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "algorithm",
                    "disableLetsEncryptDnsRecords",
                    "dropletIds",
                    "dropletTag",
                    "enableBackendKeepalive",
                    "enableProxyProtocol",
                    "forwardingRules",
                    "healthchecks",
                    "ip",
                    "redirectHttpToHttps",
                    "region",
                    "size",
                    "sizeUnit",
                    "status",
                    "stickySessions",
                    "loadBalancerUrn",
                    "vpcUuid"
                ]
            }
        },
        "digitalocean:index/getProject:getProject": {
            "description": "Get information on a single DigitalOcean project. If neither the `id` nor `name` attributes are provided,\nthen this data source returns the default project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst defaultProject = pulumi.output(digitalocean.getProject());\nconst staging = pulumi.output(digitalocean.getProject({\n    name: \"My Staging Project\",\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProject.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "the ID of the project to retrieve\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "the name of the project to retrieve. The data source will raise an error if more than\none project has the provided name or if no project has that name.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getProject.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time when the project was created, (ISO8601)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the project\n"
                    },
                    "environment": {
                        "type": "string",
                        "description": "The environment of the project's resources. The possible values are: `Development`, `Staging`, `Production`.\n"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "integer",
                        "description": "The ID of the project owner.\n"
                    },
                    "ownerUuid": {
                        "type": "string",
                        "description": "The unique universal identifier of the project owner.\n"
                    },
                    "purpose": {
                        "type": "string",
                        "description": "The purpose of the project, (Default: \"Web Application\")\n"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of uniform resource names (URNs) for the resources associated with the project\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time when the project was last updated, (ISO8601)\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "description",
                    "environment",
                    "id",
                    "isDefault",
                    "name",
                    "ownerId",
                    "ownerUuid",
                    "purpose",
                    "resources",
                    "updatedAt"
                ]
            }
        },
        "digitalocean:index/getProjects:getProjects": {
            "description": "Retrieve information about all DigitalOcean projects associated with an account, with\nthe ability to filter and sort the results. If no filters are specified, all projects\nwill be returned.\n\nNote: You can use the `digitalocean.Project` data source to\nobtain metadata about a single project if you already know the `id` to retrieve or the unique\n`name` of the project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nUse the `filter` block with a `key` string and `values` list to filter projects.\n\nFor example to find all staging environment projects:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst staging = pulumi.output(digitalocean.getProjects({\n    filters: [{\n        key: \"environment\",\n        values: [\"Staging\"],\n    }],\n}));\n```\n\nYou can filter on multiple fields and sort the results as well:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst non_default_production = pulumi.output(digitalocean.getProjects({\n    filters: [\n        {\n            key: \"environment\",\n            values: [\"Production\"],\n        },\n        {\n            key: \"is_default\",\n            values: [\"false\"],\n        },\n    ],\n    sorts: [{\n        direction: \"asc\",\n        key: \"name\",\n    }],\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProjects.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getProjectsFilter:getProjectsFilter"
                        },
                        "description": "Filter the results.\nThe `filter` block is documented below.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getProjectsSort:getProjectsSort"
                        },
                        "description": "Sort the results.\nThe `sort` block is documented below.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getProjects.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getProjectsFilter:getProjectsFilter"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getProjectsProject:getProjectsProject"
                        },
                        "description": "A set of projects satisfying any `filter` and `sort` criteria. Each project has\nthe following attributes:\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getProjectsSort:getProjectsSort"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "projects",
                    "id"
                ]
            }
        },
        "digitalocean:index/getRecord:getRecord": {
            "description": "Get information on a DNS record. This data source provides the name, TTL, and zone\nfile as configured on your DigitalOcean account. This is useful if the record\nin question is not managed by the provider.\n\nAn error is triggered if the provided domain name or record are not managed with\nyour DigitalOcean account.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRecord.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "The domain name of the record.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the record.\n"
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRecord.\n",
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "data",
                    "domain",
                    "flags",
                    "name",
                    "port",
                    "priority",
                    "tag",
                    "ttl",
                    "type",
                    "weight",
                    "id"
                ]
            }
        },
        "digitalocean:index/getRecords:getRecords": {
            "description": "Retrieve information about all DNS records within a domain, with the ability to filter and sort the results.\nIf no filters are specified, all records will be returned.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRecords.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "The domain name to search for DNS records\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getRecordsFilter:getRecordsFilter"
                        },
                        "description": "Filter the results.\nThe `filter` block is documented below.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getRecordsSort:getRecordsSort"
                        },
                        "description": "Sort the results.\nThe `sort` block is documented below.\n"
                    }
                },
                "type": "object",
                "required": [
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRecords.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getRecordsFilter:getRecordsFilter"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getRecordsRecord:getRecordsRecord"
                        }
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getRecordsSort:getRecordsSort"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "records",
                    "id"
                ]
            }
        },
        "digitalocean:index/getRegion:getRegion": {
            "description": "Get information on a single DigitalOcean region. This is useful to find out \nwhat Droplet sizes and features are supported within a region.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRegion.\n",
                "properties": {
                    "slug": {
                        "type": "string",
                        "description": "A human-readable string that is used as a unique identifier for each region.\n"
                    }
                },
                "type": "object",
                "required": [
                    "slug"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegion.\n",
                "properties": {
                    "available": {
                        "type": "boolean",
                        "description": "A boolean value that represents whether new Droplets can be created in this region.\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of features available in this region.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the region.\n"
                    },
                    "sizes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of identifying slugs for the Droplet sizes available in this region.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "A human-readable string that is used as a unique identifier for each region.\n"
                    }
                },
                "type": "object",
                "required": [
                    "available",
                    "features",
                    "name",
                    "sizes",
                    "slug",
                    "id"
                ]
            }
        },
        "digitalocean:index/getRegions:getRegions": {
            "description": "Retrieve information about all supported DigitalOcean regions, with the ability to\nfilter and sort the results. If no filters are specified, all regions will be returned.\n\nNote: You can use the `digitalocean.getRegion` data source\nto obtain metadata about a single region if you already know the `slug` to retrieve.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nUse the `filter` block with a `key` string and `values` list to filter regions.\n\nFor example to find all available regions:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst available = pulumi.output(digitalocean.getRegions({\n    filters: [{\n        key: \"available\",\n        values: [\"true\"],\n    }],\n}));\n```\n\nYou can filter on multiple fields and sort the results as well:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst available = pulumi.output(digitalocean.getRegions({\n    filters: [\n        {\n            key: \"available\",\n            values: [\"true\"],\n        },\n        {\n            key: \"features\",\n            values: [\"private_networking\"],\n        },\n    ],\n    sorts: [{\n        direction: \"desc\",\n        key: \"name\",\n    }],\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRegions.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getRegionsFilter:getRegionsFilter"
                        },
                        "description": "Filter the results.\nThe `filter` block is documented below.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getRegionsSort:getRegionsSort"
                        },
                        "description": "Sort the results.\nThe `sort` block is documented below.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRegions.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getRegionsFilter:getRegionsFilter"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getRegionsRegion:getRegionsRegion"
                        },
                        "description": "A set of regions satisfying any `filter` and `sort` criteria. Each region has the following attributes:\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getRegionsSort:getRegionsSort"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "regions",
                    "id"
                ]
            }
        },
        "digitalocean:index/getReservedIp:getReservedIp": {
            "inputs": {
                "description": "A collection of arguments for invoking getReservedIp.\n",
                "properties": {
                    "ipAddress": {
                        "type": "string",
                        "description": "The allocated IP address of the specific reserved IP to retrieve.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ipAddress"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getReservedIp.\n",
                "properties": {
                    "dropletId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "dropletId",
                    "ipAddress",
                    "region",
                    "urn",
                    "id"
                ]
            }
        },
        "digitalocean:index/getSizes:getSizes": {
            "description": "Retrieves information about the Droplet sizes that DigitalOcean supports, with\nthe ability to filter and sort the results. If no filters are specified, all sizes\nwill be returned.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSizes.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSizesFilter:getSizesFilter"
                        },
                        "description": "Filter the results.\nThe `filter` block is documented below.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSizesSort:getSizesSort"
                        },
                        "description": "Sort the results.\nThe `sort` block is documented below.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSizes.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSizesFilter:getSizesFilter"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "sizes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSizesSize:getSizesSize"
                        }
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSizesSort:getSizesSort"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "sizes",
                    "id"
                ]
            }
        },
        "digitalocean:index/getSpacesBucket:getSpacesBucket": {
            "description": "Get information on a Spaces bucket for use in other resources. This is useful if the Spaces bucket in question\nis not managed by the provider or you need to utilize any of the bucket's data.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSpacesBucket.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Spaces bucket.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The slug of the region where the bucket is stored.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "region"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSpacesBucket.\n",
                "properties": {
                    "bucketDomainName": {
                        "type": "string",
                        "description": "The FQDN of the bucket (e.g. bucket-name.nyc3.digitaloceanspaces.com)\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Spaces bucket\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The slug of the region where the bucket is stored.\n"
                    },
                    "urn": {
                        "type": "string",
                        "description": "The uniform resource name of the bucket\n"
                    }
                },
                "type": "object",
                "required": [
                    "bucketDomainName",
                    "name",
                    "region",
                    "urn",
                    "id"
                ]
            }
        },
        "digitalocean:index/getSpacesBucketObject:getSpacesBucketObject": {
            "description": "The Spaces object data source allows access to the metadata and\n_optionally_ (see below) content of an object stored inside a Spaces bucket.\n\n\u003e **Note:** The content of an object (`body` field) is available only for objects which have a human-readable\n`Content-Type` (`text/*` and `application/json`). This is to prevent printing unsafe characters and potentially\ndownloading large amount of data which would be thrown away in favor of metadata.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSpacesBucketObject.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "The name of the bucket to read the object from.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The full path to the object inside the bucket\n"
                    },
                    "range": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "description": "The slug of the region where the bucket is stored.\n"
                    },
                    "versionId": {
                        "type": "string",
                        "description": "Specific version ID of the object returned (defaults to latest version)\n"
                    }
                },
                "type": "object",
                "required": [
                    "bucket",
                    "key",
                    "region"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSpacesBucketObject.\n",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "Object data (see **limitations above** to understand cases in which this field is actually available)\n"
                    },
                    "bucket": {
                        "type": "string"
                    },
                    "cacheControl": {
                        "type": "string",
                        "description": "Specifies caching behavior along the request/reply chain.\n"
                    },
                    "contentDisposition": {
                        "type": "string",
                        "description": "Specifies presentational information for the object.\n"
                    },
                    "contentEncoding": {
                        "type": "string",
                        "description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.\n"
                    },
                    "contentLanguage": {
                        "type": "string",
                        "description": "The language the content is in.\n"
                    },
                    "contentLength": {
                        "type": "integer",
                        "description": "Size of the body in bytes.\n"
                    },
                    "contentType": {
                        "type": "string",
                        "description": "A standard MIME type describing the format of the object data.\n"
                    },
                    "etag": {
                        "type": "string",
                        "description": "[ETag](https://en.wikipedia.org/wiki/HTTP_ETag) generated for the object (an MD5 sum of the object content in case it's not encrypted)\n"
                    },
                    "expiration": {
                        "type": "string",
                        "description": "If the object expiration is configured (see [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html)), the field includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.\n"
                    },
                    "expires": {
                        "type": "string",
                        "description": "The date and time at which the object is no longer cacheable.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "key": {
                        "type": "string"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "Last modified date of the object in RFC1123 format (e.g. `Mon, 02 Jan 2006 15:04:05 MST`)\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "A map of metadata stored with the object in Spaces\n"
                    },
                    "range": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "versionId": {
                        "type": "string",
                        "description": "The latest version ID of the object returned.\n"
                    },
                    "websiteRedirectLocation": {
                        "type": "string",
                        "description": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Spaces stores the value of this header in the object metadata.\n"
                    }
                },
                "type": "object",
                "required": [
                    "body",
                    "bucket",
                    "cacheControl",
                    "contentDisposition",
                    "contentEncoding",
                    "contentLanguage",
                    "contentLength",
                    "contentType",
                    "etag",
                    "expiration",
                    "expires",
                    "key",
                    "lastModified",
                    "metadata",
                    "region",
                    "versionId",
                    "websiteRedirectLocation",
                    "id"
                ]
            }
        },
        "digitalocean:index/getSpacesBucketObjects:getSpacesBucketObjects": {
            "description": "\u003e **NOTE on `max_keys`:** Retrieving very large numbers of keys can adversely affect the provider's performance.\n\nThe bucket-objects data source returns keys (i.e., file names) and other metadata about objects in a Spaces bucket.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSpacesBucketObjects.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "Lists object keys in this Spaces bucket\n"
                    },
                    "delimiter": {
                        "type": "string",
                        "description": "A character used to group keys (Default: none)\n"
                    },
                    "encodingType": {
                        "type": "string",
                        "description": "Encodes keys using this method (Default: none; besides none, only \"url\" can be used)\n"
                    },
                    "maxKeys": {
                        "type": "integer",
                        "description": "Maximum object keys to return (Default: 1000)\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "Limits results to object keys with this prefix (Default: none)\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The slug of the region where the bucket is stored.\n"
                    }
                },
                "type": "object",
                "required": [
                    "bucket",
                    "region"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSpacesBucketObjects.\n",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "commonPrefixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of any keys between `prefix` and the next occurrence of `delimiter` (i.e., similar to subdirectories of the `prefix` \"directory\"); the list is only returned when you specify `delimiter`\n"
                    },
                    "delimiter": {
                        "type": "string"
                    },
                    "encodingType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of strings representing object keys\n"
                    },
                    "maxKeys": {
                        "type": "integer"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of strings representing object owner IDs\n"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bucket",
                    "commonPrefixes",
                    "keys",
                    "owners",
                    "region",
                    "id"
                ]
            }
        },
        "digitalocean:index/getSpacesBuckets:getSpacesBuckets": {
            "description": "Get information on Spaces buckets for use in other resources, with the ability to filter and sort the results.\nIf no filters are specified, all Spaces buckets will be returned.\n\nNote: You can use the `digitalocean.SpacesBucket` data source to\nobtain metadata about a single bucket if you already know its `name` and `region`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nUse the `filter` block with a `key` string and `values` list to filter buckets.\n\nGet all buckets in a region:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst nyc3 = pulumi.output(digitalocean.getSpacesBuckets({\n    filters: [{\n        key: \"region\",\n        values: [\"nyc3\"],\n    }],\n}));\n```\nYou can sort the results as well:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst nyc3 = pulumi.output(digitalocean.getSpacesBuckets({\n    filters: [{\n        key: \"region\",\n        values: [\"nyc3\"],\n    }],\n    sorts: [{\n        direction: \"desc\",\n        key: \"name\",\n    }],\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSpacesBuckets.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSpacesBucketsFilter:getSpacesBucketsFilter"
                        },
                        "description": "Filter the results.\nThe `filter` block is documented below.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSpacesBucketsSort:getSpacesBucketsSort"
                        },
                        "description": "Sort the results.\nThe `sort` block is documented below.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSpacesBuckets.\n",
                "properties": {
                    "buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSpacesBucketsBucket:getSpacesBucketsBucket"
                        },
                        "description": "A list of Spaces buckets satisfying any `filter` and `sort` criteria. Each bucket has the following attributes:\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSpacesBucketsFilter:getSpacesBucketsFilter"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSpacesBucketsSort:getSpacesBucketsSort"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "buckets",
                    "id"
                ]
            }
        },
        "digitalocean:index/getSshKey:getSshKey": {
            "description": "Get information on a ssh key. This data source provides the name, public key,\nand fingerprint as configured on your DigitalOcean account. This is useful if\nthe ssh key in question is not managed by the provider or you need to utilize any\nof the keys data.\n\nAn error is triggered if the provided ssh key name does not exist.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSshKey.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the ssh key.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSshKey.\n",
                "properties": {
                    "fingerprint": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicKey": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "fingerprint",
                    "id",
                    "name",
                    "publicKey"
                ]
            }
        },
        "digitalocean:index/getSshKeys:getSshKeys": {
            "description": "Get information on SSH Keys for use in other resources.\n\nThis data source is useful if the SSH Keys in question are not managed by the provider or you need to\nutilize any of the SSH Keys' data.\n\nNote: You can use the `digitalocean.SshKey` data source to obtain metadata\nabout a single SSH Key if you already know the unique `name` to retrieve.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nFor example, to find all SSH keys:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst keys = pulumi.output(digitalocean.getSshKeys({\n    sorts: [{\n        direction: \"asc\",\n        key: \"name\",\n    }],\n}));\n```\n\nOr to find ones matching specific values:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as digitalocean from \"@pulumi/digitalocean\";\n\nconst keys = pulumi.output(digitalocean.getSshKeys({\n    filters: [{\n        key: \"name\",\n        values: [\n            \"laptop\",\n            \"desktop\",\n        ],\n    }],\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSshKeys.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSshKeysFilter:getSshKeysFilter"
                        },
                        "description": "Filter the results.\nThe `filter` block is documented below.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSshKeysSort:getSshKeysSort"
                        },
                        "description": "Sort the results.\nThe `sort` block is documented below.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSshKeys.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSshKeysFilter:getSshKeysFilter"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSshKeysSort:getSshKeysSort"
                        }
                    },
                    "sshKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getSshKeysSshKey:getSshKeysSshKey"
                        },
                        "description": "A list of SSH Keys. Each SSH Key has the following attributes:\n"
                    }
                },
                "type": "object",
                "required": [
                    "sshKeys",
                    "id"
                ]
            }
        },
        "digitalocean:index/getTag:getTag": {
            "description": "Get information on a tag. This data source provides the name as configured on\nyour DigitalOcean account. This is useful if the tag name in question is not\nmanaged by the provider or you need validate if the tag exists in the account.\n\nAn error is triggered if the provided tag name does not exist.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTag.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the tag.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTag.\n",
                "properties": {
                    "databasesCount": {
                        "type": "integer",
                        "description": "A count of the database clusters that the tag is applied to.\n"
                    },
                    "dropletsCount": {
                        "type": "integer",
                        "description": "A count of the Droplets the tag is applied to.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "imagesCount": {
                        "type": "integer",
                        "description": "A count of the images that the tag is applied to.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "totalResourceCount": {
                        "type": "integer",
                        "description": "A count of the total number of resources that the tag is applied to.\n"
                    },
                    "volumeSnapshotsCount": {
                        "type": "integer",
                        "description": "A count of the volume snapshots that the tag is applied to.\n"
                    },
                    "volumesCount": {
                        "type": "integer",
                        "description": "A count of the volumes that the tag is applied to.\n"
                    }
                },
                "type": "object",
                "required": [
                    "databasesCount",
                    "dropletsCount",
                    "imagesCount",
                    "name",
                    "totalResourceCount",
                    "volumeSnapshotsCount",
                    "volumesCount",
                    "id"
                ]
            }
        },
        "digitalocean:index/getTags:getTags": {
            "description": "Returns a list of tags in your DigitalOcean account, with the ability to\nfilter and sort the results. If no filters are specified, all tags will be\nreturned.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTags.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getTagsFilter:getTagsFilter"
                        },
                        "description": "Filter the results.\nThe `filter` block is documented below.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getTagsSort:getTagsSort"
                        },
                        "description": "Sort the results.\nThe `sort` block is documented below.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTags.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getTagsFilter:getTagsFilter"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getTagsSort:getTagsSort"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/digitalocean:index/getTagsTag:getTagsTag"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "tags",
                    "id"
                ]
            }
        },
        "digitalocean:index/getVolume:getVolume": {
            "description": "Get information on a volume for use in other resources. This data source provides\nall of the volumes properties as configured on your DigitalOcean account. This is\nuseful if the volume in question is not managed by the provider or you need to utilize\nany of the volumes data.\n\nAn error is triggered if the provided volume name does not exist.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getVolume.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Text describing a block storage volume.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of block storage volume.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region the block storage volume is provisioned in.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVolume.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Text describing a block storage volume.\n"
                    },
                    "dropletIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of associated Droplet ids.\n"
                    },
                    "filesystemLabel": {
                        "type": "string",
                        "description": "Filesystem label currently in-use on the block storage volume.\n"
                    },
                    "filesystemType": {
                        "type": "string",
                        "description": "Filesystem type currently in-use on the block storage volume.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the block storage volume in GiB.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the tags associated to the Volume.\n"
                    },
                    "urn": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "dropletIds",
                    "filesystemLabel",
                    "filesystemType",
                    "name",
                    "size",
                    "tags",
                    "urn",
                    "id"
                ]
            }
        },
        "digitalocean:index/getVolumeSnapshot:getVolumeSnapshot": {
            "description": "Volume snapshots are saved instances of a block storage volume. Use this data\nsource to retrieve the ID of a DigitalOcean volume snapshot for use in other\nresources.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getVolumeSnapshot.\n",
                "properties": {
                    "mostRecent": {
                        "type": "boolean",
                        "description": "If more than one result is returned, use the most recent volume snapshot.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the volume snapshot.\n"
                    },
                    "nameRegex": {
                        "type": "string",
                        "description": "A regex string to apply to the volume snapshot list returned by DigitalOcean. This allows more advanced filtering not supported from the DigitalOcean API. This filtering is done locally on what DigitalOcean returns.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "A \"slug\" representing a DigitalOcean region (e.g. `nyc1`). If set, only volume snapshots available in the region will be returned.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVolumeSnapshot.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time the volume snapshot was created.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "minDiskSize": {
                        "type": "integer",
                        "description": "The minimum size in gigabytes required for a volume to be created based on this volume snapshot.\n"
                    },
                    "mostRecent": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameRegex": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of DigitalOcean region \"slugs\" indicating where the volume snapshot is available.\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "The billable size of the volume snapshot in gigabytes.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the tags associated to the volume snapshot.\n"
                    },
                    "volumeId": {
                        "type": "string",
                        "description": "The ID of the volume from which the volume snapshot originated.\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "minDiskSize",
                    "regions",
                    "size",
                    "tags",
                    "volumeId",
                    "id"
                ]
            }
        },
        "digitalocean:index/getVpc:getVpc": {
            "description": "Retrieve information about a VPC for use in other resources.\n\nThis data source provides all of the VPC's properties as configured on your\nDigitalOcean account. This is useful if the VPC in question is not managed by\nthe provider or you need to utilize any of the VPC's data.\n\nVPCs may be looked up by `id` or `name`. Specifying a `region` will\nreturn that that region's default VPC.\n\n{{% examples %}}\n## Example Usage\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVpc.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of an existing VPC.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of an existing VPC.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The DigitalOcean region slug for the VPC's location.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpc.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of when the VPC was created.\n"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "A boolean indicating whether or not the VPC is the default one for the region.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free-form text field describing the VPC.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique identifier for the VPC.\n"
                    },
                    "ipRange": {
                        "type": "string",
                        "description": "The range of IP addresses for the VPC in CIDR notation.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the VPC.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The DigitalOcean region slug for the VPC's location.\n"
                    },
                    "urn": {
                        "type": "string",
                        "description": "The uniform resource name (URN) for the VPC.\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "default",
                    "description",
                    "id",
                    "ipRange",
                    "name",
                    "region",
                    "urn"
                ]
            }
        }
    }
}